%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: L
%%CreationDate: 9/26/2017
%%BoundingBox: 0 0 447 441
%%HiResBoundingBox: 0 0 446.3122 440.4469
%%CropBox: 0 0 446.3122 440.4469
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-09-26T17:36:38+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-09-26T17:36:39+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-09-26T17:36:39+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9TTzwwQyTzusUMSl5ZHI&#xA;VVVRVmYnYADFWCR/nDpd3yk0by/r2tWQYqmoWNjyt5OJoTG8skRYfIYqv/5WrP8A9ST5o/6QYv8A&#xA;qviq1/zZ9JTJP5N8zQwrvJK1gjBV7sQkzNQd6DFWV+XvMWjeYtJh1XR7lbqynrxkWoIYbMrKaMrD&#xA;uDiqZYq7FXmHnTyxoXmT82tF07XLRb2yXR7uYQuzqOazxgNVCp6McVYjr3kf8rrrVNAj0DTGs1/x&#xA;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&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:d2208535-1758-f04f-994a-65e132b7d51d</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:d2208535-1758-f04f-994a-65e132b7d51d</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a89afc4e-576d-4847-b893-14e73d88c29a</stRef:instanceID>
            <stRef:documentID>xmp.did:a89afc4e-576d-4847-b893-14e73d88c29a</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:396CFD55945FE4118283B92CD07916B8</stEvt:instanceID>
                  <stEvt:when>2014-10-30T17:12:51+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08e3cdab-f6ea-8c49-b858-ce2e8e0dd8bd</stEvt:instanceID>
                  <stEvt:when>2017-09-23T17:07:33+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d18760f1-e03b-c243-af1a-6381bd4cf7c1</stEvt:instanceID>
                  <stEvt:when>2017-09-24T00:36:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a89afc4e-576d-4847-b893-14e73d88c29a</stEvt:instanceID>
                  <stEvt:when>2017-09-26T17:13:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d2208535-1758-f04f-994a-65e132b7d51d</stEvt:instanceID>
                  <stEvt:when>2017-09-26T17:36:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Білий</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Чорний</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Червоний RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Жовтий RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Зелений RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Блакитний RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Синій RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Пурпуровий RGB</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=52 G=52 B=52</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>52</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=142 B=144</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=114 G=102 B=87</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>114</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>86</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=200 G=202 B=205</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>200</xmpG:red>
                           <xmpG:green>202</xmpG:green>
                           <xmpG:blue>205</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=188 G=189 B=191</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>191</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=80 Y=0 K=0</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>21</xmpG:red>
                           <xmpG:green>65</xmpG:green>
                           <xmpG:blue>148</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=109 G=101 B=92 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>101</xmpG:green>
                           <xmpG:blue>92</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=56 B=47 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=75 G=190 B=207</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>75</xmpG:red>
                           <xmpG:green>189</xmpG:green>
                           <xmpG:blue>207</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=212 B=145</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>212</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=100 G=194 B=200</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>100</xmpG:red>
                           <xmpG:green>193</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=222 G=238 B=241</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>221</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>240</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>1</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>104</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 200 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>194</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>47</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=167 B=156</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>144</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=168 B=75</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -440.447 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 440.447 li
446.312 440.447 li
446.312 0 li
cp
clp
3 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
66.3705 35.7139 mo
62.6184 22.1794 61.1383 10.3869 51.3559 10.3869 cv
21.4727 10.3869 li
11.6903 10.3869 10.2102 22.1794 6.4581 35.7139 cv
3.255 47.2675 11.585 50.6556 16.3751 46.9588 cv
19.6692 44.4167 24.2198 34.9099 24.2198 34.9099 cv
36.4143 34.9099 li
48.6088 34.9099 li
48.6088 34.9099 53.1594 44.4167 56.4535 46.9588 cv
61.2436 50.6556 69.5736 47.2675 66.3705 35.7139 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.192157 .192157 .192157 rgb
@
22.6572 16.5847 mo
22.6572 27.0371 li
@
17.4309 21.8109 mo
27.8834 21.8109 li
@
55.4785 22.3638 mo
55.1869 22.3638 54.9504 22.1273 54.9504 21.8357 cv
54.9504 21.5441 55.1869 21.3077 55.4785 21.3077 cv
55.7701 21.3077 56.0065 21.5441 56.0065 21.8357 cv
56.0065 22.1273 55.7701 22.3638 55.4785 22.3638 cv
cp
@
45.2373 22.3638 mo
44.9457 22.3638 44.7092 22.1273 44.7092 21.8357 cv
44.7092 21.5441 44.9457 21.3077 45.2373 21.3077 cv
45.5289 21.3077 45.7653 21.5441 45.7653 21.8357 cv
45.7653 22.1273 45.5289 22.3638 45.2373 22.3638 cv
cp
@
50.8859 16.7151 mo
50.8859 17.0067 50.6495 17.2432 50.3579 17.2432 cv
50.0663 17.2432 49.8298 17.0067 49.8298 16.7151 cv
49.8298 16.4235 50.0663 16.1871 50.3579 16.1871 cv
50.6495 16.1871 50.8859 16.4235 50.8859 16.7151 cv
cp
@
50.8859 26.9563 mo
50.8859 27.248 50.6495 27.4844 50.3579 27.4844 cv
50.0663 27.4844 49.8298 27.248 49.8298 26.9563 cv
49.8298 26.6647 50.0663 26.4283 50.3579 26.4283 cv
50.6495 26.4283 50.8859 26.6647 50.8859 26.9563 cv
cp
@
320.331 15.0236 mo
309.755 45.1107 li
301.225 45.1107 li
291.14 15.0236 li
300.604 15.0236 li
305.745 34.5778 li
311.019 15.0236 li
320.331 15.0236 li
cp
@
332.121 45.6264 mo
329.088 45.6264 325.598 44.8691 323.634 43.7844 cv
322.967 43.4159 li
324.749 36.1745 li
325.869 36.7481 li
326.626 37.1352 329.342 38.3983 332.498 38.3983 cv
333.748 38.3983 334.508 38.1521 334.927 37.9452 cv
335.473 37.6755 335.847 37.1498 335.923 36.5452 cv
335.999 35.9407 335.766 35.3383 335.304 34.9419 cv
334.711 34.4339 333.609 33.8954 331.919 33.2908 cv
326.332 31.3452 323.498 28.2227 323.498 24.0108 cv
323.498 18.327 328.193 14.5079 335.181 14.5079 cv
338.005 14.5079 340.567 15.0168 342.798 16.0204 cv
343.575 16.3703 li
341.605 23.4952 li
340.534 22.9792 li
338.797 22.1426 337.005 21.736 335.055 21.736 cv
334.68 21.736 334.328 21.7622 334.007 21.8131 cv
333.234 21.9362 332.627 22.5417 332.501 23.3145 cv
332.376 24.0874 332.761 24.8536 333.456 25.2146 cv
334.41 25.7102 335.833 26.2501 336.531 26.5149 cv
341.978 28.5288 344.515 31.5024 344.515 35.872 cv
344.515 40.3719 341.27 45.6264 332.121 45.6264 cv
cp
@
297.838 50.3587 mo
292.515 55.6815 li
@
344.515 3.6815 mo
338.993 9.2042 li
@
243.976 201.187 mo
243.976 195.69 li
238.479 195.69 li
232.983 195.69 li
232.983 201.187 li
227.487 201.187 li
227.487 206.683 li
221.99 206.683 li
221.99 201.187 li
216.494 201.187 li
216.494 195.69 li
210.997 195.69 li
205.501 195.69 li
205.501 201.187 li
200.005 201.187 li
200.005 206.683 li
200.005 212.18 li
200.005 217.676 li
205.501 217.676 li
205.501 223.172 li
210.997 223.172 li
210.997 228.669 li
216.494 228.669 li
216.494 234.165 li
221.99 234.165 li
221.99 239.662 li
227.487 239.662 li
227.487 234.165 li
232.983 234.165 li
232.983 228.669 li
238.479 228.669 li
238.479 223.172 li
243.976 223.172 li
243.976 217.676 li
249.472 217.676 li
249.472 212.18 li
249.472 206.683 li
249.472 201.187 li
243.976 201.187 li
cp
@
338.04 219.081 mo
338.04 213.681 li
332.64 213.681 li
332.64 208.281 li
327.24 208.281 li
327.24 202.881 li
327.24 197.481 li
332.64 197.481 li
332.64 192.081 li
327.24 192.081 li
321.84 192.081 li
316.44 192.081 li
311.04 192.081 li
305.64 192.081 li
305.64 197.481 li
311.04 197.481 li
311.04 202.881 li
311.04 208.281 li
305.64 208.281 li
305.64 213.681 li
300.24 213.681 li
300.24 219.081 li
294.84 219.081 li
294.84 224.481 li
294.84 229.881 li
300.24 229.881 li
300.24 235.281 li
305.64 235.281 li
305.64 240.681 li
311.04 240.681 li
311.04 246.081 li
316.44 246.081 li
321.84 246.081 li
327.24 246.081 li
327.24 240.681 li
332.64 240.681 li
332.64 235.281 li
338.04 235.281 li
338.04 229.881 li
343.44 229.881 li
343.44 224.481 li
343.44 219.081 li
338.04 219.081 li
cp
@
247.99 15.7825 mo
224.573 29.2627 li
@
245.854 13.3966 mo
227.671 2.8987 li
225.944 1.9015 222.927 2.0266 220.932 3.1781 cv
203.718 13.1169 li
200.579 14.9291 200.569 16.5755 200.569 19.6514 cv
200.569 39.5291 li
200.569 41.832 201.969 44.5074 203.696 45.5046 cv
221.879 56.0025 li
223.854 56.99 225.476 56.9904 227.187 56.0025 cv
245.37 45.5046 li
247.097 44.5074 248.497 41.832 248.497 39.5291 cv
248.497 19.6514 li
248.497 16.5755 248.108 14.6979 245.854 13.3966 cv
cp
@
224.249 28.7953 mo
201.177 15.4573 li
@
224.573 56.1676 mo
224.533 29.4844 li
@
212.495 36.6676 mo
212.495 36.9257 212.286 37.135 212.028 37.135 cv
211.77 37.135 211.56 36.9257 211.56 36.6676 cv
211.56 36.4094 211.77 36.2002 212.028 36.2002 cv
212.286 36.2002 212.495 36.4094 212.495 36.6676 cv
cp
@
240.406 29.2627 mo
240.406 29.5208 240.197 29.7301 239.939 29.7301 cv
239.681 29.7301 239.472 29.5208 239.472 29.2627 cv
239.472 29.0045 239.681 28.7953 239.939 28.7953 cv
240.197 28.7953 240.406 29.0045 240.406 29.2627 cv
cp
@
234.49 42.7416 mo
234.49 42.9997 234.281 43.209 234.023 43.209 cv
233.764 43.209 233.555 42.9997 233.555 42.7416 cv
233.555 42.4834 233.764 42.2742 234.023 42.2742 cv
234.281 42.2742 234.49 42.4834 234.49 42.7416 cv
cp
@
225.332 20.4665 mo
225.332 20.7247 225.123 20.934 224.864 20.934 cv
224.606 20.934 224.397 20.7247 224.397 20.4665 cv
224.397 20.2084 224.606 19.9991 224.864 19.9991 cv
225.123 19.9991 225.332 20.2084 225.332 20.4665 cv
cp
@
234.49 15.176 mo
234.49 15.4341 234.281 15.6434 234.023 15.6434 cv
233.764 15.6434 233.555 15.4341 233.555 15.176 cv
233.555 14.9178 233.764 14.7086 234.023 14.7086 cv
234.281 14.7086 234.49 14.9178 234.49 15.176 cv
cp
@
215.941 15.0446 mo
215.941 15.3027 215.731 15.512 215.473 15.512 cv
215.215 15.512 215.006 15.3027 215.006 15.0446 cv
215.006 14.7864 215.215 14.5771 215.473 14.5771 cv
215.731 14.5771 215.941 14.7864 215.941 15.0446 cv
cp
@
225.128 9.7432 mo
225.128 10.0014 224.919 10.2106 224.66 10.2106 cv
224.402 10.2106 224.193 10.0014 224.193 9.7432 cv
224.193 9.4851 224.402 9.2758 224.66 9.2758 cv
224.919 9.2758 225.128 9.4851 225.128 9.7432 cv
cp
@
444.812 139.068 mo
384.211 139.068 li
384.211 102.139 li
444.812 102.139 li
444.812 139.068 li
cp
@
419.49 146.139 mo
409.533 146.139 li
@
414.512 139.068 mo
414.512 146.139 li
@
105.124 57.5277 mo
105.124 1.5 li
121.396 1.5 li
121.396 57.5277 li
105.124 57.5277 li
cp
@
127.32 56.5507 mo
121.396 57.5277 li
@
141.964 49.5862 mo
141.964 54.136 li
135.666 55.1745 li
@
121.396 1.5 mo
141.964 7.1528 li
141.964 34.6548 li
@
114.799 10.6131 mo
114.799 48.3869 li
@
163.082 50.0607 mo
160.867 42.0697 159.993 35.1072 154.217 35.1072 cv
136.573 35.1072 li
130.798 35.1072 129.924 42.0697 127.709 50.0607 cv
125.817 56.8821 130.736 58.8824 133.564 56.6998 cv
135.509 55.1989 138.195 49.586 138.195 49.586 cv
145.395 49.586 li
152.595 49.586 li
152.595 49.586 155.282 55.1989 157.227 56.6998 cv
160.055 58.8824 164.973 56.8821 163.082 50.0607 cv
cp
@
137.72 39.7906 mo
137.72 44.5608 li
@
135.335 42.1757 mo
140.105 42.1757 li
@
156.009 42.6549 mo
155.98 42.6549 li
@
150.31 42.6549 mo
150.281 42.6549 li
@
153.145 39.7906 mo
153.145 39.8199 li
@
153.145 45.4898 mo
153.145 45.5191 li
@
417.517 11.3443 mo
417.517 18.1457 li
@
417.517 25.9936 mo
417.517 26.6476 li
@
417.517 30.9639 mo
417.517 31.6179 li
@
433.082 9.7864 mo
432.071 5.3766 427.866 3.1018 423.185 2.1351 cv
423.185 5.6849 li
411.848 5.6849 li
411.848 2.1351 li
407.168 3.1018 402.963 5.3766 401.952 9.7864 cv
400.513 16.0647 397.766 40.393 400.121 47.5869 cv
402.475 54.7808 408.623 57.1351 417.517 57.1351 cv
426.411 57.1351 432.559 54.7808 434.913 47.5869 cv
437.267 40.393 434.521 16.0647 433.082 9.7864 cv
cp
@
411.848 5.6849 mo
411.848 27.5214 li
@
423.185 5.6849 mo
423.185 27.5214 li
@
400.625 18.1457 mo
400.625 18.1457 393.192 31.1343 393.192 39.935 cv
393.192 48.7357 403.411 52.9925 403.411 52.9925 cv
@
145.739 134.925 mo
142.828 124.425 141.679 115.276 134.09 115.276 cv
110.905 115.276 li
103.316 115.276 102.168 124.425 99.2565 134.925 cv
96.7715 143.889 103.234 146.518 106.951 143.65 cv
109.506 141.677 113.037 134.301 113.037 134.301 cv
122.498 134.301 li
131.959 134.301 li
131.959 134.301 135.489 141.677 138.045 143.65 cv
141.761 146.518 148.224 143.889 145.739 134.925 cv
cp
@
111.824 121.139 mo
111.824 127.139 li
@
108.824 124.139 mo
114.824 124.139 li
@
136.942 124.532 mo
136.735 124.532 136.568 124.365 136.568 124.158 cv
136.568 123.951 136.735 123.784 136.942 123.784 cv
137.148 123.784 137.316 123.951 137.316 124.158 cv
137.316 124.365 137.148 124.532 136.942 124.532 cv
cp
@
129.69 124.532 mo
129.483 124.532 129.316 124.365 129.316 124.158 cv
129.316 123.951 129.483 123.784 129.69 123.784 cv
129.896 123.784 130.063 123.951 130.063 124.158 cv
130.063 124.365 129.896 124.532 129.69 124.532 cv
cp
@
133.69 120.532 mo
133.69 120.739 133.522 120.906 133.316 120.906 cv
133.109 120.906 132.942 120.739 132.942 120.532 cv
132.942 120.325 133.109 120.158 133.316 120.158 cv
133.522 120.158 133.69 120.325 133.69 120.532 cv
cp
@
133.69 127.784 mo
133.69 127.991 133.522 128.158 133.316 128.158 cv
133.109 128.158 132.942 127.991 132.942 127.784 cv
132.942 127.578 133.109 127.41 133.316 127.41 cv
133.522 127.41 133.69 127.578 133.69 127.784 cv
cp
@
147.659 123.658 mo
147.659 123.658 151.19 131.034 153.745 133.006 cv
157.462 135.874 163.924 133.246 161.439 124.282 cv
158.528 113.781 157.38 104.632 149.79 104.632 cv
126.606 104.632 li
122.428 104.632 120.202 107.404 118.56 111.647 cv
@
152.642 113.888 mo
152.436 113.888 152.268 113.721 152.268 113.515 cv
152.268 113.308 152.436 113.141 152.642 113.141 cv
152.849 113.141 153.016 113.308 153.016 113.515 cv
153.016 113.721 152.849 113.888 152.642 113.888 cv
cp
@
145.39 113.888 mo
145.184 113.888 145.016 113.721 145.016 113.515 cv
145.016 113.308 145.184 113.141 145.39 113.141 cv
145.597 113.141 145.764 113.308 145.764 113.515 cv
145.764 113.721 145.597 113.888 145.39 113.888 cv
cp
@
149.39 109.888 mo
149.39 110.095 149.223 110.262 149.016 110.262 cv
148.81 110.262 148.642 110.095 148.642 109.888 cv
148.642 109.682 148.81 109.515 149.016 109.515 cv
149.223 109.515 149.39 109.682 149.39 109.888 cv
cp
@
149.39 117.141 mo
149.39 117.347 149.223 117.515 149.016 117.515 cv
148.81 117.515 148.642 117.347 148.642 117.141 cv
148.642 116.934 148.81 116.767 149.016 116.767 cv
149.223 116.767 149.39 116.934 149.39 117.141 cv
cp
@
127.414 111.012 mo
127.414 109.132 li
@
327.497 139.033 mo
326.841 138.148 325.587 135.081 325.46 133.22 cv
@
307.021 135.036 mo
306.763 136.777 306.357 138.636 306.164 139.033 cv
@
302.803 123.887 mo
304.645 129.47 305.249 132.909 306.723 134.386 cv
307.979 135.644 309.567 136.717 312.743 136.731 cv
312.782 136.731 312.82 136.732 312.859 136.732 cv
312.898 136.732 312.937 136.731 312.976 136.731 cv
316.152 136.717 322.151 136.291 324.056 134.386 cv
325.878 132.564 329.315 127.746 331.067 119.597 cv
@
302.178 107.934 mo
302.041 108.967 301.796 110.051 301.741 110.967 cv
@
299.466 106.482 mo
302.317 108.135 313.838 110.22 322.709 106.663 cv
324.824 105.814 326 114.355 329.074 112.478 cv
333.434 109.816 331.169 117.765 331.067 119.597 cv
331.067 119.597 332.402 115.374 332.7 108.853 cv
332.999 102.331 331.217 97.5764 326.292 95.1314 cv
315.223 86.5133 300.375 92.4401 299.466 106.482 cv
@
345.817 155.115 mo
345.679 153.846 345.386 151.059 344.809 148.813 cv
343.199 142.544 327.497 139.033 327.497 139.033 cv
327.497 139.033 322.871 148.366 312.034 148.366 cv
301.195 148.366 306.164 139.033 306.164 139.033 cv
306.164 139.033 293.359 142.544 291.748 148.813 cv
291.234 150.811 290.946 153.463 290.791 154.68 cv
@
322.75 123.557 mo
314.188 123.557 li
313.452 123.557 312.761 123.207 312.324 122.616 cv
311.926 122.077 li
310.997 120.817 309.12 120.794 308.16 122.032 cv
307.673 122.66 li
307.234 123.226 306.559 123.557 305.843 123.557 cv
297.819 123.557 li
297.217 123.557 296.73 123.069 296.73 122.467 cv
296.73 113.567 li
296.73 112.966 297.217 112.478 297.819 112.478 cv
322.75 112.478 li
323.352 112.478 323.839 112.966 323.839 113.567 cv
323.839 122.467 li
323.839 123.069 323.352 123.557 322.75 123.557 cv
cp
@
324.56 116.797 mo
331.428 116.797 li
@
324.921 122.305 mo
330.066 122.305 li
@
308.794 129.172 mo
308.794 129.172 311.941 130.724 314.528 129.172 cv
@
56.8819 328.71 mo
16.9409 328.71 li
8.4131 328.71 1.5 321.797 1.5 313.269 cv
1.5 312.407 li
1.5 303.682 8.5725 296.61 17.2968 296.61 cv
56.8819 296.61 li
65.4097 296.61 72.3228 303.523 72.3228 312.051 cv
72.3228 313.269 li
72.3228 321.797 65.4097 328.71 56.8819 328.71 cv
cp
@
10.6005 308.681 mo
10.6005 315.681 li
@
7.1005 312.181 mo
14.1005 312.181 li
@
66.8472 312.576 mo
66.6406 312.576 66.4732 312.408 66.4732 312.202 cv
66.4732 311.995 66.6406 311.828 66.8472 311.828 cv
67.0537 311.828 67.221 311.995 67.221 312.202 cv
67.221 312.408 67.0537 312.576 66.8472 312.576 cv
cp
@
59.595 312.576 mo
59.3885 312.576 59.2211 312.408 59.2211 312.202 cv
59.2211 311.995 59.3885 311.828 59.595 311.828 cv
59.8015 311.828 59.9689 311.995 59.9689 312.202 cv
59.9689 312.408 59.8015 312.576 59.595 312.576 cv
cp
@
63.595 308.576 mo
63.595 308.782 63.4276 308.949 63.2211 308.949 cv
63.0145 308.949 62.8471 308.782 62.8471 308.576 cv
62.8471 308.369 63.0145 308.202 63.2211 308.202 cv
63.4276 308.202 63.595 308.369 63.595 308.576 cv
cp
@
63.595 315.828 mo
63.595 316.034 63.4276 316.202 63.2211 316.202 cv
63.0145 316.202 62.8471 316.034 62.8471 315.828 cv
62.8471 315.621 63.0145 315.454 63.2211 315.454 cv
63.4276 315.454 63.595 315.621 63.595 315.828 cv
cp
@
54.8201 297.584 mo
54.8201 327.017 li
@
19.1665 297.584 mo
19.1665 327.017 li
@
202.516 116.718 mo
204.184 105.462 213.858 96.8157 225.578 96.8157 cv
237.299 96.8157 246.973 105.462 248.641 116.718 cv
@
206.05 139.614 mo
200.438 139.614 li
198.166 139.614 196.323 137.771 196.323 135.499 cv
196.323 122.629 li
196.323 120.356 198.166 118.514 200.438 118.514 cv
206.05 118.514 li
206.05 139.614 li
cp
@
245.032 139.614 mo
250.644 139.614 li
252.916 139.614 254.759 137.771 254.759 135.499 cv
254.759 122.629 li
254.759 120.356 252.916 118.514 250.644 118.514 cv
245.032 118.514 li
245.032 139.614 li
cp
@
231.674 148.45 mo
246.03 146.743 248.641 140.082 248.641 140.082 cv
@
231.674 148.47 mo
231.674 144.662 li
231.674 143.862 231.026 143.214 230.226 143.214 cv
224.981 143.214 li
224.182 143.214 223.533 143.862 223.533 144.662 cv
223.533 146.652 li
223.533 147.867 224.532 148.846 225.746 148.815 cv
227.878 148.761 230.121 148.634 231.674 148.45 cv
@
416.075 312.315 mo
416.075 313.176 415.378 313.874 414.517 313.874 cv
413.656 313.874 412.959 313.176 412.959 312.315 cv
412.959 311.455 413.656 310.757 414.517 310.757 cv
415.378 310.757 416.075 311.455 416.075 312.315 cv
cp
@
438.949 312.315 mo
438.949 325.809 428.01 336.747 414.517 336.747 cv
401.023 336.747 390.085 325.809 390.085 312.315 cv
390.085 298.822 401.023 287.883 414.517 287.883 cv
428.01 287.883 438.949 298.822 438.949 312.315 cv
cp
@
414.517 282.815 mo
414.517 293.377 li
@
385.017 312.315 mo
395.579 312.315 li
@
414.517 341.815 mo
414.517 331.254 li
@
444.017 312.315 mo
433.455 312.315 li
@
414.517 282.815 mo
414.517 293.377 li
@
161.788 217.447 mo
165.379 217.447 li
166.672 217.447 166.743 212.145 165.963 210.587 cv
165.701 210.065 165.543 209.625 165.543 209.625 cv
165.543 209.625 164.384 207.519 154.734 206.328 cv
153.355 206.09 152.433 201.528 144.901 199.686 cv
140.887 198.704 133.972 198.652 130.481 199.718 cv
124.929 201.415 125.19 204.711 121.435 205.634 cv
120.458 205.874 118.625 206.132 117.402 206.561 cv
117.234 206.619 117.081 206.704 116.941 206.81 cv
@
147.143 217.447 mo
151.936 217.447 li
@
160.675 216.251 mo
160.675 218.455 158.888 220.242 156.684 220.242 cv
154.48 220.242 152.693 218.455 152.693 216.251 cv
152.693 214.047 154.48 212.26 156.684 212.26 cv
158.888 212.26 160.675 214.047 160.675 216.251 cv
cp
@
110.493 206.968 mo
108.892 206.968 li
@
142.591 229.139 mo
146.136 229.139 li
147.429 229.139 147.5 223.837 146.72 222.279 cv
146.458 221.757 146.3 221.317 146.3 221.317 cv
146.3 221.317 145.141 219.211 135.491 218.02 cv
134.112 217.783 131.249 213.221 123.717 211.378 cv
119.703 210.396 115.298 210.344 111.807 211.41 cv
106.254 213.107 106.918 216.403 103.162 217.326 cv
102.186 217.566 100.353 217.824 99.1293 218.253 cv
97.2031 218.927 97.1625 223.005 97.1278 224.634 cv
97.1066 225.625 97.1149 226.558 97.1517 227.281 cv
97.2051 228.324 98.0661 229.139 99.11 229.139 cv
101.541 229.139 li
@
111.807 229.139 mo
132.551 229.139 li
@
110.575 227.943 mo
110.575 230.147 108.789 231.934 106.585 231.934 cv
104.381 231.934 102.594 230.147 102.594 227.943 cv
102.594 225.739 104.381 223.952 106.585 223.952 cv
108.789 223.952 110.575 225.739 110.575 227.943 cv
cp
@
141.432 227.943 mo
141.432 230.147 139.645 231.934 137.441 231.934 cv
135.237 231.934 133.45 230.147 133.45 227.943 cv
133.45 225.739 135.237 223.952 137.441 223.952 cv
139.645 223.952 141.432 225.739 141.432 227.943 cv
cp
@
100.217 212.611 mo
98.6157 212.611 li
@
401.937 241.902 mo
433.445 213.71 li
438.782 199.954 li
@
396.834 236.799 mo
425.026 205.291 li
438.782 199.954 li
@
398.488 240.241 mo
404.532 245.613 li
405.031 245.151 li
@
398.488 240.241 mo
393.116 234.197 li
393.593 233.817 li
@
398.243 240.493 mo
392.382 246.355 li
@
409.813 245.134 mo
411.718 246.536 413.822 247.799 416.145 248.882 cv
@
416.145 190.882 mo
391.59 203.559 li
391.59 203.559 391.284 215.077 396.17 226.994 cv
@
440.564 207.487 mo
439.908 216.678 436.237 239.512 416.145 248.882 cv
@
416.145 190.882 mo
429.786 197.925 li
@
429.176 209.737 mo
419.02 219.778 li
@
224.109 415.909 mo
221.384 426.456 li
212.322 428.836 li
@
217.456 407.187 mo
207.302 408.258 li
203.317 420.187 li
@
222.351 396.566 mo
219.531 388.316 li
226.29 379.972 li
@
236.056 400.556 mo
242.54 395.819 li
240.862 384.684 li
@
207.302 408.258 mo
201 399.21 li
@
219.531 388.316 mo
209.476 386.305 li
@
221.384 426.456 mo
229.49 433.427 li
@
235.384 411.765 mo
243.769 418.447 li
242.259 428.494 li
@
243.769 418.447 mo
251.694 415.54 li
@
242.54 395.819 mo
251.622 398.357 li
@
247.979 423.794 mo
257.273 412.133 255.354 395.146 243.692 385.852 cv
232.031 376.558 215.044 378.477 205.75 390.139 cv
196.456 401.8 198.375 418.787 210.037 428.081 cv
221.698 437.375 238.685 435.455 247.979 423.794 cv
cp
@
224.493 416.146 mo
224.333 416.102 224.188 416.004 224.085 415.862 cv
217.347 406.491 li
217.163 406.234 217.159 405.889 217.338 405.629 cv
223.029 397.365 li
223.21 397.102 223.538 396.983 223.845 397.068 cv
234.45 400.003 li
234.763 400.09 234.984 400.368 234.998 400.692 cv
235.426 410.65 li
235.439 410.95 235.271 411.229 234.999 411.358 cv
225.014 416.101 li
224.846 416.18 224.662 416.192 224.493 416.146 cv
cp
@
22.525 105.14 mo
23.562 109.434 27.8835 112.074 32.1773 111.037 cv
36.4711 110 39.1113 105.678 38.0743 101.384 cv
37.0373 97.0907 32.7158 94.4505 28.422 95.4876 cv
24.1282 96.5246 21.488 100.846 22.525 105.14 cv
cp
@
32.1773 111.037 mo
37.4538 131.743 li
@
51.7934 139.503 mo
13.1141 139.503 li
23.1141 126.422 li
61.7934 126.422 li
51.7934 139.503 li
cp
@
48.4434 134.651 mo
48.4434 135.039 47.8297 135.354 47.0727 135.354 cv
46.3157 135.354 45.702 135.039 45.702 134.651 cv
45.702 134.263 46.3157 133.948 47.0727 133.948 cv
47.8297 133.948 48.4434 134.263 48.4434 134.651 cv
cp
@
51.7934 139.503 mo
51.7934 150.321 li
13.1141 150.321 li
13.1141 139.503 li
@
51.7934 150.321 mo
61.7934 137.24 li
61.7934 126.422 li
@
322.948 420.639 mo
322.948 422.642 322.06 424.522 320.513 425.796 cv
320.429 425.866 320.359 425.95 320.307 426.046 cv
319.224 428.035 319.545 429.696 321.153 430.872 cv
321.298 430.978 321.474 431.035 321.654 431.035 cv
337.989 431.035 li
338.457 431.035 338.838 430.655 338.838 430.187 cv
338.838 415.674 li
338.838 413.788 li
338.838 413.608 338.895 413.215 339.001 413.07 cv
340.177 411.461 341.838 411.141 343.827 412.224 cv
343.923 412.276 344.007 412.346 344.077 412.43 cv
345.352 413.977 347.231 414.865 349.234 414.865 cv
352.918 414.865 355.914 411.868 355.914 408.184 cv
355.914 404.501 352.918 401.504 349.234 401.504 cv
347.404 401.504 345.695 402.235 344.421 403.561 cv
344.386 403.597 344.349 403.629 344.31 403.657 cv
343.495 404.376 342.546 404.771 341.628 404.771 cv
340.899 404.771 339.852 404.52 338.996 403.326 cv
338.893 403.182 338.838 402.642 338.838 402.465 cv
338.838 400.875 li
338.838 387.193 li
338.838 387.193 li
338.838 386.725 338.457 386.345 337.989 386.345 cv
321.796 386.345 li
321.643 386.345 321.493 386.386 321.362 386.464 cv
320.277 387.112 319.68 388.092 319.68 389.226 cv
319.68 390.145 320.084 391.127 320.792 391.932 cv
320.822 391.972 320.855 392.011 320.891 392.046 cv
322.217 393.32 322.948 395.029 322.948 396.859 cv
322.948 400.543 319.951 403.539 316.268 403.539 cv
312.584 403.539 309.587 400.543 309.587 396.859 cv
309.587 394.857 310.475 392.977 312.022 391.701 cv
312.106 391.633 312.176 391.548 312.227 391.453 cv
312.644 390.689 312.855 389.957 312.855 389.276 cv
312.855 388.471 312.555 387.331 311.125 386.467 cv
310.992 386.387 310.84 386.345 310.686 386.345 cv
295.276 386.345 li
294.808 386.345 294.428 386.725 294.428 387.193 cv
294.428 430.187 li
294.428 430.655 294.808 431.035 295.276 431.035 cv
310.915 431.035 li
311.092 431.035 311.265 430.98 311.409 430.877 cv
312.603 430.022 312.855 428.974 312.855 428.245 cv
312.855 427.327 312.46 426.378 311.741 425.564 cv
311.712 425.524 311.68 425.487 311.644 425.453 cv
310.318 424.178 309.587 422.469 309.587 420.639 cv
309.587 416.955 312.584 413.959 316.268 413.959 cv
319.951 413.959 322.948 416.955 322.948 420.639 cv
cp
@
114.782 298.516 mo
101.956 301.369 li
101.108 301.558 100.574 302.398 100.763 303.246 cv
107.594 333.947 li
107.782 334.795 108.622 335.329 109.47 335.141 cv
116.555 333.564 li
@
121.344 331.208 mo
143.352 331.208 li
144.332 331.208 145.126 330.414 145.126 329.434 cv
145.126 293.952 li
145.126 292.973 144.332 292.178 143.352 292.178 cv
121.344 292.178 li
120.364 292.178 119.57 292.973 119.57 293.952 cv
119.57 329.434 li
119.57 330.414 120.364 331.208 121.344 331.208 cv
cp
@
149.914 298.516 mo
162.74 301.369 li
163.588 301.558 164.122 302.398 163.933 303.246 cv
157.103 333.947 li
156.914 334.795 156.074 335.329 155.226 335.141 cv
148.141 333.564 li
@
125.774 298.359 mo
125.774 299.783 li
@
106.461 305.707 mo
106.711 306.707 li
@
153.161 328.906 mo
152.996 329.906 li
@
139.089 324.936 mo
139.1 326.359 li
@
132.863 309.495 mo
132.863 307.537 134.451 305.95 136.408 305.95 cv
138.366 305.95 139.953 307.537 139.953 309.495 cv
@
125.774 309.495 mo
125.774 307.537 127.361 305.95 129.319 305.95 cv
131.276 305.95 132.863 307.537 132.863 309.495 cv
@
139.89 309.495 mo
139.89 313.832 132.872 318.924 132.872 318.924 cv
@
125.774 309.495 mo
125.774 313.832 132.872 318.924 132.872 318.924 cv
@
308.878 328.637 mo
308.878 325.149 li
334.629 325.149 li
334.629 328.637 li
@
340.008 340.114 mo
303.499 340.114 li
303.499 335.044 li
303.499 333.265 304.941 331.823 306.72 331.823 cv
336.787 331.823 li
338.566 331.823 340.008 333.265 340.008 335.044 cv
340.008 340.114 li
cp
@
319.673 299.175 mo
308.784 299.175 li
308.784 292.221 li
@
334.723 292.221 mo
334.723 299.175 li
327.658 299.175 li
@
330.248 325.149 mo
330.248 325.149 328.4 318.019 328.4 309.041 cv
328.4 300.063 330.248 299.175 330.248 299.175 cv
@
313.259 325.149 mo
313.259 325.149 315.108 318.019 315.108 309.041 cv
315.108 300.063 313.259 299.175 313.259 299.175 cv
@
334.723 292.221 mo
335.66 284.771 li
330.024 284.771 li
329.088 292.221 li
324.39 292.221 li
324.39 284.771 li
319.035 284.771 li
319.035 292.221 li
314.399 292.221 li
313.463 284.771 li
307.827 284.771 li
308.764 292.221 li
@
237.54 338.554 mo
238.54 311.494 li
194.662 311.494 li
195.662 338.554 li
237.54 338.554 li
cp
@
236.54 311.494 mo
252.586 311.494 li
251.586 338.554 li
235.54 338.554 li
@
252.586 311.494 mo
245.061 286.779 li
203.183 286.779 li
207.726 301.697 li
@
245.061 286.779 mo
252.926 284.333 259.55 302.408 252.586 311.494 cv
@
215.665 319.659 mo
215.665 321.988 li
@
216.127 318.924 mo
215.243 318.924 li
@
195.38 330.905 mo
197.756 330.905 li
@
195.378 320.824 mo
197.755 320.824 li
@
237.604 330.905 mo
235.228 330.905 li
@
237.606 320.824 mo
235.229 320.824 li
@
237.221 305.447 mo
239.926 301.818 li
@
220.936 302.508 mo
220.936 298.445 li
@
204.65 305.447 mo
201.946 301.818 li
@
213.476 301.093 mo
212.809 299.137 li
@
230.059 301.093 mo
230.726 299.137 li
@
122.068 403.603 mo
123.647 400.439 126.917 398.265 130.694 398.265 cv
134.34 398.265 137.513 400.29 139.149 403.277 cv
@
128.056 417.17 mo
125.431 416.424 123.263 414.594 122.066 412.194 cv
@
139.572 411.651 mo
138.402 414.416 135.978 416.522 133.013 417.254 cv
@
159.694 407.9 mo
159.694 423.917 146.71 436.9 130.694 436.9 cv
114.678 436.9 101.694 423.917 101.694 407.9 cv
101.694 391.884 114.678 378.9 130.694 378.9 cv
146.71 378.9 159.694 391.884 159.694 407.9 cv
cp
@
153.262 407.9 mo
153.262 420.364 143.158 430.468 130.694 430.468 cv
118.23 430.468 108.126 420.364 108.126 407.9 cv
108.126 395.436 118.23 385.332 130.694 385.332 cv
143.158 385.332 153.262 395.436 153.262 407.9 cv
cp
@
137.847 414.354 mo
137.847 414.354 146.653 412.888 152.411 414.049 cv
@
137.847 401.446 mo
137.847 401.446 147.03 402.116 152.788 403.277 cv
@
125.349 415.916 mo
125.349 415.916 125.999 424.244 126.995 430.224 cv
@
135.366 416.325 mo
135.366 416.325 135.018 424.244 134.023 430.224 cv
@
123.591 414.354 mo
123.591 414.354 114.785 412.888 109.027 414.049 cv
@
123.591 401.446 mo
123.591 401.446 114.408 402.116 108.65 403.277 cv
@
422.97 427.74 mo
432.558 437.328 li
433.463 438.233 436.2 440.468 439.337 437.327 cv
442.474 434.186 441.205 432.417 439.337 430.548 cv
430.238 421.45 li
@
389.618 400.164 mo
394.132 388.756 407.085 383.147 418.493 387.661 cv
429.901 392.174 435.51 405.127 430.997 416.535 cv
426.483 427.944 413.529 433.553 402.121 429.039 cv
390.713 424.526 385.104 411.572 389.618 400.164 cv
cp
@
412.633 391.461 mo
408.572 399.101 406.992 404.166 406.992 404.166 cv
417.82 414.447 li
417.82 414.447 423.902 411.048 427.837 406.307 cv
@
434.36 397.197 mo
440.049 385.552 435.252 381.451 432.635 379.532 cv
430.264 377.793 423.711 377.285 418.164 383.604 cv
@
403.366 407.889 mo
403.366 407.889 395.286 418.997 401.035 423.935 cv
406.784 428.874 414.278 418.745 414.278 418.745 cv
403.366 407.889 li
cp
@
33.9114 429.62 mo
33.9114 394.095 li
45.8278 387.215 li
45.8278 422.646 li
@
33.9114 394.095 mo
21.995 387.215 li
21.995 422.74 li
33.9114 429.62 li
56.1013 416.809 li
56.1013 396.216 li
45.9248 402.091 li
@
33.9114 380.327 mo
21.9811 387.215 li
@
33.9114 380.327 mo
45.8415 387.215 li
@
51.9705 403.289 mo
49.7545 404.569 li
@
51.9705 408.456 mo
49.7545 409.735 li
@
51.9705 413.622 mo
49.7545 414.901 li
@
56.1013 396.216 mo
46.3367 390.578 li
@
33.9114 367.495 mo
37.3402 372.373 li
33.9114 377.303 li
@
33.9114 367.495 mo
30.4826 372.373 li
33.9114 377.303 li
@
42.3247 393.93 mo
38.5369 396.117 li
@
42.3247 400.24 mo
38.5369 402.427 li
@
42.3247 406.549 mo
38.5369 408.736 li
@
42.3247 412.858 mo
38.5369 415.045 li
@
42.3247 419.168 mo
38.5369 421.355 li
@
46.3242 431.563 mo
35.3488 437.938 li
9.2373 422.863 li
17.9284 417.845 li
@
60.3319 418.674 mo
64.4347 421.043 li
46.3242 431.563 li
@
59.9349 210.1 mo
59.9349 211.548 60.0136 212.61 60.0136 212.61 cv
60.0136 212.61 64.5998 205.625 68.9531 208.974 cv
74.8622 213.519 67.0581 225.565 59.9144 226.412 cv
59.9117 229.139 li
59.9117 241.28 li
59.809 241.28 li
56.8698 237.238 li
56.0631 236.128 54.4136 236.114 53.5874 237.209 cv
50.5163 241.28 li
50.466 241.28 li
47.4373 237.2 li
46.6246 236.105 44.9878 236.098 44.1667 237.187 cv
41.0788 241.28 li
41.0284 241.28 li
37.9997 237.2 li
37.1871 236.105 35.5503 236.098 34.7291 237.187 cv
31.6411 241.28 li
31.5907 241.28 li
28.5851 237.231 li
27.7656 236.126 26.1113 236.131 25.2981 237.24 cv
22.3344 241.28 li
22.2718 241.28 li
22.2718 241.28 22.2718 239.201 22.2718 235.716 cv
22.2718 232.231 22.1931 226.412 22.1931 226.412 cv
15.0494 225.565 7.34448 213.519 13.2536 208.974 cv
17.6069 205.625 22.1931 212.61 22.1931 212.61 cv
22.1931 212.61 22.2718 211.548 22.2718 210.1 cv
22.2718 199.706 30.6977 191.28 41.0917 191.28 cv
41.0918 191.28 li
@
33.5408 207.764 mo
33.5408 208.431 33.0001 208.972 32.3331 208.972 cv
31.6661 208.972 31.1254 208.431 31.1254 207.764 cv
31.1254 207.097 31.6661 206.556 32.3331 206.556 cv
33.0001 206.556 33.5408 207.097 33.5408 207.764 cv
cp
@
50.822 207.764 mo
50.822 208.431 50.2813 208.972 49.6143 208.972 cv
48.9473 208.972 48.4066 208.431 48.4066 207.764 cv
48.4066 207.097 48.9473 206.556 49.6143 206.556 cv
50.2813 206.556 50.822 207.097 50.822 207.764 cv
cp
@
45.0646 218.974 mo
45.0646 222.244 43.34 224.895 41.2127 224.895 cv
39.0854 224.895 37.3608 222.244 37.3608 218.974 cv
37.3608 215.705 39.0854 213.054 41.2127 213.054 cv
43.34 213.054 45.0646 215.705 45.0646 218.974 cv
cp
@
22.2318 210.1 mo
22.2318 199.706 30.6577 191.28 41.0517 191.28 cv
41.0518 191.28 li
@
59.9349 210.1 mo
59.9349 199.706 51.5089 191.28 41.115 191.28 cv
41.1149 191.28 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 20.1.0
%%For: (L) ()
%%Title: (1.eps)
%%CreationDate: 9/26/2017 5:36 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa<*Os]s0JH!HE!?+eZNj?Q@pY)SMnuShD\koDuX[-_FYc6u(:/drR;-d,llc5U;bWJ#E9T"U)]@^CE6nuS7gr%#?F#tKD
%]>(t(q>H5TT=t$ke]\!_o2@3<cZ>!lr;A`pT76?TJ+oS,rSdafZ\L/"hZBAX(MW1_r0p2eOc*O57(JeR:VZqlrl+3\^O#_Jrk%X%
%?Tru8lFW[\Y5e@Z`T]<Wr[bg0Er*!6c_%uMbN\<fPGeF1AM/I4^:J[br;Q-GX)FTB51PRN`:OcPs20%Y8h.X&UpmOVoo5'I\:=H\
%RO30`]moh=eb/[o]mfbd*u*^'X!uSBg>p<$F"[F`g$^SDqo@Ump@]30m<&:_'`6eK\(ar!c$1dV>ETU83J=N4jn\>jbA5Z^_gAgu
%3_RFi@h8,tl!*EBo\&mjK"U;+^Q?nDobZBIs89jun&.T$V4@$BWHd#:jG@7C,"RWqIM#2CX\0mndeGt0lY*0n5D>%/W*[W*/7mn3
%Aso1D<X+"<"nFOQno6*)O)Il:mqk6ondpsBUp<Ehb%ljX(M&a93R8m$[9*cbd)tk\.RB3R;5=^:).>1mXd1(,KDLlfH_a?rG=4>?
%DIo-unek?]FtjX/i.kRGd9/qr8t"1+-L^C@dSC`TX!<<q3A+Md/<U7M(e*0XQ8'>C6>G3T]uJ&9-/gFA4(']T[I"KSO>6tK.k"9S
%?=6<"F`nJ65i.6eA%SOZ(r_JAhtB&Sf4Y-YAW,M?REJsGP/"*n\&j%NEc6G3qen$,q5^Mgk)9+TT=fL@qUs%.Z:KFn$?CPA^HC?-
%s7;HCT>/sbFP<@M+(,'7Up'aQ\"J,h;UThA*3:lDL[R474qIF,J*c,ipc4qo.I2>0s8*bJ,O,AR43<jY\\`u.H:;o[)[XgZa89eh
%IK&=#]eLiOZ.%n4c[+U^$ZG!V_RV:64agY+%!k&O]a_W\B6X&ls)66Os75d1J%C.#p&-E$;O=RnJ+;lT$9'Fi@HF\Ts7$!YqcEge
%in8,32Q^ZV5lBd+fD!VQ1\]mQc_$;1/RQX"gCo'ao'4QqYD)S^I/Z:KiTI+&ht#Oj^\RPd^YXU4#(+J\^:f$da-Zg[%K3pF'8jZK
%AUI*"V\/ML<n?.(.0P,<LXW7kH'J#K)oh%7_H_TblIhf%^%f-sCU<cEYC?<4g"/=7Q(=Z8s&ee[?iCQ8CX&*)If9-BKss.^YHEA]
%Yj^u=2dbL^[kGJ0IeaG!s#]"Bh+JE7ffjo]BD_(F_r"$#hg]EK6Gcg=I45>k]g0Q/Ie$_A?2s3acbGfRrpnU_n%\hOMgp3OkpN*/
%If8i0mSElErora8Y@Kc155joArk$t`m.Att.E4#>h7cQcrmm`lbGMXEKeC+n&\gQp064C+KY:d5I1^eQB3LM1kPHm'4T"hbDeYa6
%frP"6r`724f)L/bo!6hX45DF^12TnCK6FY>Dd*PCODH!^rsFfY7K0`Cd^j='r7h2AQf$g$>4&pYi:kQi]Qj#4`*`G`p]!<(/=kOY
%NQ<kAXdsP:E.^IsOZ>i0:>UqagqWj;41/3l_7)0lci22$I^]9Y%kPJAQWO.^fo$)8I$oS9"[9[br7kJ(5-Y/<o;h'#7I1UMrpnUY
%rVsBWgM=S!fDF/qs5cba=K?]H=9&9Al[KM7n,C;Xhu3?G&=OAFqs\Ook:u&4Q9ikV]us6"n^h^Yl/hMLhgMj*6ojr@>EJS*?).)8
%2OgdJacGKeVhGigD&LM2r$%YSY/4A;5(RXr7OoFTe<<t;T07UOs2A?[H[YohMsgG`oB4I!r9DD5s75O@l0?gnhu1a_O"Xj(rsAN`
%/kaET=^'rX2D47S&pt#>)T>G(p24^eW3s<T/mA-I.ht.gWu&NtTsO#3r6gsUQ<sNJ[XHALi+lkQf*;3Roi#J%T6BYUk1ZQ3^o/hr
%Kc`P>c$\n-B@clK"J686KB%C/[U>TT%s#CKSZUQ]RhXABLIM/4WSLnVs2AU(1-OHBrCf,^2i%]'prjP(Gp43jYFkdB>BV;$oKPQe
%+_o'^Msm:O^/qQr*4mH-S7>iu>>&9^ZZ0VTB`5:3MSIeJ:qdRaHBk!bs87X`C?WMfejk2blH.Z(6u)btl*K:(s5i=N-iMn#JD&jT
%^Obfs]))9P:]Bn5:INV*O.UlAH#n7ZH$+CX3A12?]<%@\10qoCD;:/@EBPqp(i>(H5N:>l?,,bcrMj5ud9Effo\<@UI;=&o[bZ?-
%aoB1<lWq3+2ta1WMIJ52GKi"r:q(ILDT[+4.[O_2?>:o8Ms_;%QLFB]^6._2?cpo?b;GWVF(1]geA.MW(%o2Jd4X0R]5BRuf"8Xf
%$_k!Q97*\GX%W>mqR*^&[bm']"DN3$Gng(72S+:`jgZ5\hV+U7c@#K#YHD2W#N(3(mJ?8IpA3qJqYKLRnp4P64kK)4?C0u*SZ_#'
%h::oCc.2L;e^`cHe8j*Bl;bC;=6V2>D3oI5ZX[QKmVH":]JrOtJdol11iGo@X#)iZJB2]Nk?Q/BFnr\uEg)dA[X*/a:`4d-"4:X=
%L()7j%*snAdp:d?^g`QX?E4KCY<rNcWa<lQhU]<I8R52.bYiNTf)9-%*BWaCnd9PWGMDMU>ki@bf/9b4gWNfhZFA6u[uHa(I9UU\
%D7Y^IL"l"W:+dt<6ZR6hI<0OPGr'@79tQO2g_?0(kpG6is-VR!ccacm3dau#9JWF7U^ZOJ%-TPR[)u37)9cK@GpU@RBg^!nr:CX4
%k,kbp+_qOf/aI.5%SFsMaAo#-9C-Z:bBP>bFhEi4\P$-6ElF8rnJ#Co/bLsKAWkZ@lZA>.dp:gNa>(m#.'#m"<Rt*p6WVc<^6VcB
%S+"KHlRp?FbPoJ.ci,8@f4OL*hmU;gqXD5\NHh).p$A4[hWb1pD\!!daG33p6J0/0J_jr)Csm0@ND4$R-EKP&'K85F6[tmnk>1r&
%GOPEadgVGu:58U?#51gCigm0d]7/B"Uf[#BHr@P6+8gkKDnM7eX4/*Me\Y$k7Q6aQF&pH8l]pTIH%cLT48jHW9/=h)MTU=]Q?dt<
%O2'L]ogDqQ=k6N6<RkW>%9[UNZL4q^DK"uS<<cU$#t$92(BuA@OP[R3?F`NOGB`Wtg*Z/d`cK5"?HI=AUO4:rI4LSUks8n]VKeCe
%;*k`/+$pLTEl2IM722oB9op^D$h<K02_ddiU2eIhq4,6,8^^O+Akh=_0);Yc^?][N-eg_oeZZBUm_F-[/]o$4Y/Kp7X*^(9nebFn
%i8ED4R_X&%YA7HG]Imdg$s>rgCT5IV65B8?1J'bUaIn.HJT9Me>/Z<:b*4JJg<cZBQ2Ddul`aVP@>i"*Uugg29DOT#hc&1Y0H%Rl
%Z.Ic>FaqYPG@53)fXa_aX0G+A)R`#fE63=iS$V_pH@:4F^U8)&-a)F4XPnRBM\mVtJ[JanSu#jZDK"E>Ab3O!Bsh4Nl&[1GZNq(Y
%,.S,E@'50hh?\nMP=ZLbUSV;M7]Z%:/tD^"4S_IVo:7]cOBZANJu`_,?$Q,jH23G9-?h3c_;UUE#t6h&'@&i)gcDUDpkC<4n]Jmf
%=jrePn^pk!Gd[58?,S*=KKOLUH;F%W@.7>u'DP!rGKB\*Sr3GTgJAUHiNM+QjOJJN^=l&ZFGC0phguRV)6hLcA3[;#n+)Lo%kmm3
%ir3Om_^34.<3]Q<_$SD[\Gs@=X^9)sX+rW`5]M:[9N?.K8L<2N#'\Z&FXB`.FO>.=Vp[1?-llXoTlmRK(L%])T^IPm9hK6c_J[Z&
%%=K#Uf.$6!.iId9$co`&$U2')I=Dqc3CbSPCpg7+e!utuq<bQ`@_0?Y=Pj!"V=EECRpE(8IHQ$CV=nM<8U_tf8Zj]Ea*k/hWW!lP
%I(4gDb8$(C88<Mc8,=A]o`I<LC4)P4r@lRp!?V$U)F+"CCE)0dju6OGit$5%8)H2uM7Xk@hE7IS1P\3#O!"C<Pa'KIrKA<$SOun.
%7>-^aqO@H+-BUM^4^LQ19(@4=OTbC$WV+*X*aF,"E[N_r2XL"l>b55RP0\G[T3XC)8WESqmIAm8?e*B,Y1o]Mnb]\#+ph-C4C%"7
%We[Y@j`>!VY5cUe'jf.,Y"lZGQkTjP&i/Si0%7NYM\XC2Q!.9'%;\l''/c!iQ<T4\O]kk]r?[BM%^j!,g3uJu>o!*<MAT1GAZejX
%<s?<q$K%i"?VuNl2=X&!pe6#A/1R!nWPG6K6]6iV<"a!s,43JsIF+tq\IVR[j??+_.ee).I4G&\lj",#"rre5>pMYUI\LPDr-.Jt
%+$PGMhk9mk\]]L787bu#.0J-M#@:+bnFk=,T_P'LK9[&mA\t46A@g3l/\.`86rU[kPsT()2($qC<,:4\->6/6g=+u&\R.i7J^s=g
%lhVX)X7_VoYKj;o2dYMR='mV[EPH:M>kQLF4E>#HUrGO#oZ.ah>j%#-E.$do2/["B>-E]%HN*+(m(2a\oOn-eo'@9-=$O=NiMuc$
%26,2@^%0jA%Th0'\]aZ:>s@o;D#JFol]TjRj!;j4NGF-i5h8Kg=qO3m=sfoD*%5oQZut3qK<K"'F9ABkC0>\`IAnAGP@[1gk)C_4
%>?\nn(5A(^qm0J!)cq36)47k;.-l;ViU`@@G>2so8^>[sS$'U[16%uigVh\3KY-#7Z`)TYnOIHIC:+6JG0;b%V:RPj]"q@uS/G%0
%KF;Xd<p^jj(0J!M\KJC*m+Y>@eAco,/,*fADWJ!9l]0HJ/_idL:A+-3/`+ISEjHtVHF[eQFmA*tdE\pp5F7q>9cZB:[sFO(DArA^
%?"9"e<pNXGQZC;2l'BH,]ur!jZ;XK@fHoot=*N8W?d@J.,MMPDo$obF82.kD@TcdEH<JHd2g/IKXt.3P\Q*,TD*sO.W1$p&o`P&G
%FBmJ(.:g?h_=%/<'s0=DG)GZ2ZuJpAIV`#]gMN>A-s^AU`=J_6`+!I=4j(\]Hjc1HGfo\gX"BrI\r^:[6\Bhm9s[!WP//gpE_k(d
%3q^EK^9_NUV`^O_l)Dh[B[H%)/c(TPr<.FS$u]#GjYs6h9J+f,[I@i_$u.FPgO88M3*Ok;/_ug(5H8!pjM-)HXm=]O>i`Q`KtZea
%G=R9_366M.T@s.dU9n-^h!4a_')F5h:t^E_Q`[<;S%a^/1SB0tpBf1k@(lVe*u940qI$0*k)G:fc8+`LB+D73*G1F_(>W==qDEC[
%$$.c1[XCPfOYV+lpN'Xo(@1X>P:c2sf":L*2SZ`bPE/rRL%3s\p[2W#Aa$a_I%M67#?*`!7906-AEQH]^Pf,;i$f!(HH/63fAGD&
%Z9pM^.^,\3a>XR-rLI_Oq]"D@<qD^Cj^9.^#Bb"kh9pRj7CQ,q[uib3i6%i7;[%>e@!2msANDGf\"sA$'J:h.cL!Php#JS\>Q)q]
%TGr>9'g.uN^Ur*8D.fYD[Rn.hcZ_/kX&H6PQq/rkrbCp]f:@a6_&Q2\>ii#XFfo5VhC/+g;>oS+:"Qs5?-BW-r4/<NQ7;R<G,MqI
%&h9a(iI1oEOfCpO%XCX+UE5(R?Bg-s6"^=u\rh7[e:T=0TO36C6Tj40+-([&R8!BP*dgX"h#0(11e;mg#&NrMl/7uEBV5-V\":A/
%r6=Q>=!,ihp>fP\.?Q5hX"scl#+aO$9)>]bmk1'(HfbnFboU]<#Qfu-fE4-OA4CC@")!bE]9sPd\YLPVQkqAh<4G#6^Fu<G,:4i4
%mm96,rd6'\+,0[!44Shd\rIf@7&fN-.YBH*mQlL*%)0&VT6Y5Dr.2o4S%AIa)22So,4jM9$h$%XGF3e,Mh9F%-H)R;@u%dHVkoF)
%Q^FLQ2fm6foJ1@P:L<3M"aD,56m!5ncQDAoYeokn_EeCP"oA3c]Jk2rpN9g(L4ldUMGOYgqE`E-o/ba[FXINQbf+Q/l%1p1+6($s
%YN#^)Qg(5.E$'NoEI[Sl4'Fku6+ah6Re.+D?9J&Grp/%*>p5r"oE^_gl@G.8QS%q3N3UQm-<pJ2_@[gu^/u[?QXH";cZ^[J%kR8/
%P.N%$j%Ri42J%d$>Ma>s)OHbN.[8P5pb':3hf^hu*6#h9KgQRa>qfO&_V8Q?)_HcnU>@;Krm2Tbnad3.OZ/Z1p6IYMkoGhtiV8F=
%++2.nOmDle8DuhQ%(G!iO\,>qo=mH&!8>bdC:P/e<n[8mddbj#%V(&DVYC==%r3O7V"c6(DG'DZf;5l,TjY4@<GI"c,M(&g)et9A
%l8-P1N=sEq7#AG_INBftMW7iuR!VgCZ"K-Iq1]e0ep$cs283jSLKQ(^esU3aNKGH7O<0S$dO\,KFYC>p!@!BmR*Bq'F&unOAM4#X
%\njT6E_dd8lZqjK5B_1f7i+ZXh]5CiJp+@ZkdlI]m2CM0Bka5@S;t1%I6]cmlNH@K$WDmee];$YP\DfThE.Z$<.oEbBV?Xb68$43
%ld["*1EoZReS+)EC"KPR:/R/972Jh!kVZk>mn>MDPl@AIW.(J$d49?tqAS(8-.+>fmc-;$E_J]QagsEQg-FNN4WW\Nq",6B^=1uE
%GW\q4<]PE/@HR=ZT`*p@h;\r+e@XK2*n^cdcJg=qUPZp)oD'TrEgRaE%k%@'QW0rsN_RG'MXkMmf2BIJ7H<na[(bZC$iK3'f,n@?
%rHphU2i3Io-bBN1/C;7.g_O]Fj!p2=Y\du[\pnljE+>QX0cYUC08HNnU0KlkO)q;D-*KH?;Hph,?]2U<8pL+<[p#dO<pb5<_aSaT
%rQPu=CVd_Xf_lG-s/9J<98C-,W2AM/d&uckjj9K,9A.J+4ZHY-)u!r_kEUb)gqiDjD>!UK@#;@9I&M/_<lsgJf']:kqP70g",D/c
%O`YI+g=isJ#=GJtEc:X4i`fMgIVAW4qR-;"JjV'%2im>gC["u+]l3ck+%>8^KC%nUG!:2q8NF6U]\V$,#9<<n#60=f^[o"Caf\.-
%UK(G&<8(h^f!V9PW"Gd:9]e&NqdXC:YoGJ]aq3%4%'kW]0<=9WbI2Ma@WUtkROL-'[otfH1!R^jXn'\sC6*BKkBm4.B`Ht>MC*s+
%^H&l`Z<>e?Y,3uSIgdYWPjJ8g12^S!jc=N(SLnqVH?p*Ggg"l8Wn3j/FgH`Rm@d)68RHhkcjU;V8'/VtQ6;e_QtHr`Z1&`WV&j0.
%PiLD0@>hg3hq/s5W%/A-@m]p:Qddl1@VqO0jNiW_XLg(3i0bXK6/Js+O'R$lX2aN/CdY[EG+,1KBU)!6ifJ=2qmf)J6W&lEp1WYr
%f;d&Y`R*FTkhaS>DpD`Qj=hY(8O*/a8LX7r;Dm*B>3V2P3`BBJq8Lfi1]bTo@&P@7eCRZe^bD`U-PfThM?QL.)YuTbnkp\T)<mtr
%*D6[lm7+d*S'eRioWpq+/Xr?/\lrZQQYL?-?CS3Q=/lHPJ##Pn/DF[pp=M_"U@2L741DT1.7n?H,I"TC<lE$<rT.03A[I!BH:Xl;
%k)8_ZpgDD&OMPn]=<R!Vmd$>?lEdDPr"2X81[&lEMRQMg4O0Zre]\\jGGgK,d]2V'k)uZgSUR_7%a6eq6D%,H::8CsT2cq?lQN^g
%%'ej:P$)s@iO1e^FG?@4Z?;a]#4_M*]=bd;?4>2/GV)dU+#kWK\N_06#*!EF-F_`ppDL7)r"bamY5:E=A`^ae\>)dW\D+1sZXZ2+
%c\T'V$(hsu]X[#he:dKbkCq+djYH4>B&#!pA"tKh3KDAqjZ;c_40BsoRCm1#+-4YXSKg<kp6i3ndNk4oqn-(pcK.6*4t'atXag=g
%XmrZ\_,YM+F)E(32kq1M*:HacM$I_9S-G$Q%X0ulEm/(M"_@hcXmL\,]9p.]rU.l6<k7C%VS^oLkggbrlJBpK"UinC3="G&_Y@=W
%9\[4FH'Djr^tjBTY%@f9+IE5EIX(\s^&1qII]pR$D>!5DI[=q_=/Y0J/ARj3>;P%5KEeH/'1LdU;h^r[\?jD9T.1]&_jHiOnQ)"M
%>GD\N*d8_^cPn&=4s2h=i?9u"h@cjd^+i&MW*4Ti92*_G:\8X%I%1ilkJYD$n[:Gt;!K"T!C6fI!:Gdf[Z(!D$W5SuBbM0SJQDg-
%7Gm$rHNsZ/H`6+7[OinNEP^O,reCGlqGKdeI]Du-An]3^%93)r/FcT>s/=Lu<9lcKocM`\O)"V`[Jlq)s&#ou.'A&!iBGPDO)s=@
%SG9&6rsdM);obl56S4A%P)HJLRb]7<khko=Bh1EWa(uFO-lTI)S=i@%ioBb)G#*+m>S>j55ZTM:Omt:-fDj0M_-h!Hd?EN*#c&[V
%P(FkIs"_7pKcaVW;tY;@q(CZ6)G$%.,OK4/@nf@@OP6Q]Sg[2Xc>.Oj9PsZXCdSrdf4;P[,oKM4D5%^Imi.<@q%+G=c"M&H$J`N!
%TtH$YXf)57WH%b+C8(gc3)kptR@1_!@jIBYJX7.bSMe>ta32#^0mR9F]W!\J02k2Zr0j95Dre]X'=DFBXBEqcg&\=qZ"f(q6`c`5
%<\k>-hLgHq$idZ6mAkHihs\Ru5Q,-ShiHjn)^+RQLt4^moGmeQJ^5BH+l/P87BW%OgUT1\A)O57/O?)aFYhCH5TsZ\$ZH)K0Rk>P
%=0>f4r7`;L_gh0:p;_l/kE^ilc+b2ICg7U5IfL.*lDF$)aRB:>ILfW\r\+fEIs0J!h9sHRbN+)Q?q9q#AL#]Ri^h3*F3\SXDQUH+
%"=?VbGO2/c2?AN%=4$c[fc;I0]YVmO>Z,e^5`cimkkW&_S7N0t!jU2Srao*g>o!AqW9tnAd.IP<hP%YHeCT>$+^TK1Dqq*%Kc.%T
%oP8h`h]ieI<k)W8j_=X4a?89Se1gZb#q.G3&raBAg^rmg2$lGRSG\BoQZiTSNG%"j&&Ef0+6,YM[0Uq)1,GZe0Jmj]p+;RV7Q;dT
%%[jCUL(JZ9PH@'^&eD5u3'@tRQ3JHPg%fsT/Z>C4?jq=lG.f:`cuKT&r.*dmmQCnQ,g@N1"A@MSdqEM#22o+$-YuB:/Ht%F-@c'J
%WqI.j52sZd8!?tb7qeX4\1#47cE`Ph\^5[2]JthUW:-^oGZ#n'%cbe.79)YJD%Ec*.NC>rig[qM,>&_6M*FM#r*$Y7n/,.&V"e2-
%e!:_fPZaM@C#RNeK^&USI8hg_XLq;rpFlF(hYbqJHdBTGGj)&s1oY-^!0?ICqgWs5qW@[%*,]usqYp-3bLb)>mA3;D^\O4r:2Tp0
%'Cf!#q9r^?n+V.g-_(,"YBp5@jlcXreA"PZdr/"]ptrO/f:T@u+'_P;L0;D5If-VRLqg^5)YY?@LDQCkI/0mBJ*4qD/auSELs0+R
%Rg=*\=Yf0PT<q7nnPB1r\*BI#gQrZr>.T*t5?hGtMM29F$Zf!on-l%NUoa1Gh%._8)MF:@d)Frq/NisD[P,mWEW..7O/M$aCXFnq
%k4sqJ4C4%4Y=71s>3@R(np!7q]G;NoBV3''bN%XXo5Q;gJ9_G0(e'\,=N!1V--EmH):XGX(piPc4=A,gQ*E73mk8%]^3TDdVr0aa
%p".[=62U$?Dul?A+[#Dc^N_=\q9Ptb6r/.*o_WS+nFAFI1]H(l5N'rh*WOT'gMB8b?G$3lAeWnUV?pflTe<NSIkJ&6j_rV$1n0Sn
%f<.?9fnB",BgS1]Ls'So@:JRRoP`*0Ih8U3GWq-$<f[3/Rm?eC9q]/Z-K(Eis09fKbI_UNWBtHPbOOqff)MWq5G#Q,U'ad(P[1/L
%V5+G+*EgO(+J,Z;aFK;-W?ci^7m?p'I!giLAFC1B.qCGFTXUY#I"JsGmsDt4nLjj_XZpjls*&ML0ADd]]rLXi%L)YeRa^4=*KXX&
%Gnauc&/fT>;\5dHCg0*B0J6fFkpL-"r^qZknaZ5F>2MAd2Xo=6*KO-[<P3S*5_RVD?bLj_r:J\(YH7W8daLh'\pEr>?Y*?RqW"pF
%pL!mXrorb?nR)n*qsUqYRq4ZYT]Q9G>M)Z1<AA"[QEtV'k^XFOKmMKZ;@sY>`)Fk+2S;gN/[_1=r*)T8"X2AIJcO[M$2d[6@QHY`
%\_Ji)(X8W3[nUuD\ln]32OQ:Q+?]ial!?#XD5V.bX$J#efM4S78B4?i\R))98NfFU(\K&L-9IUad%2ku/4u)>:8lV.OjjCK%3ZFm
%>6lt)@jHl7g]?\@a'*:(2&FqZ=Z];267Af^Tr0f5OQ-7^"\]lCBA#sI*f!3$Bu6!5f5q&Km*gd=aka\5e;I1%!-,4JML;LAqP/n9
%h36\sq6[@p,R""RXlN`>(/0!%V/TCeP+f4Gd`57mTOsn'HU)86Ccd"SBR$<eXZKT+]b3d)#Q_B<;=IEDGDn.A<B6@A9BEY2`S&D`
%/:A^0-bN"HTONQn*t);9=!3"'b##!h<n<05!QRf5TE%M9DI)nXMTM#7_Iuh(L_cGTO"`;'&!`@lA;$TOI*p7?R0-KBFcoQ4l=:UY
%&R]S4gC&%'npkDlb%RRY!P%1`<Z*]iLt:ZVUZc$`OW:*T2gUV\%::U.Kq3dH@<fU8DqLdB/oL`#CbfF.c0UT%XWE_C&(n`fcbX7T
%X9`O0Nc=8hWpU#qIA+Pi`M0bGqE&VdrQ*sKQ\+!IMWioa.N^42of!\"a#^.r.<ROMa;cOi$Qn\C,^hsE^OQrP<^j'?($m..?m%2r
%q?Hc@((t7MgOt'0*e@1R1&\/#LOZ1cbd,N)DDeSuOY>-04Xl&E3A4R</2bX8=`V&V;aKM+([<n^j(#@9'H.]'p/q]hKgOuW"RbB7
%r*$$.\<EjSajM-d8tG^G9Rjb%rd@.Y?';?,C2W7_+Tjg%Fjf!KFaTa-8!b:T074>-:UHJX2DDBQAL1i[a]PFF#pE8Z#'K</;IMR#
%.OPN.)laX)/.[u/9hKSN&o'sDY%X_a.XcmF#&$ZZK=ObZ\f%]@Ca4ZcUKYd?dfqd[)-rUQHBtf<S!76F4f"k+?jQIG_@//CKIPKS
%'UI`W;GHN\"IRd%LPAP6r\dTL(I@/_"!M*+A;?7)AJ2d,EF3@N#Vj7]853-$"&-R<X:+cck'G!BI13WL1iOK2-k(*LO^>J`fYG13
%&DP8."EJMZ]V+_/%D+*e9#5KVq:)W]D<N:9qBqIt\,dE?HlkI,TF,I*qA?Xt+`Jf?MbjukCU"=.YsR7@0h&Q_4Ht.:!WHQZS*.g\
%R#Eda\L3d@LFb^7Du&)rW3b.@1@?@e<[V7;[2@<^-9[+N6089X5nSN["&k@in?!nl/F3dEWCuquFu\pcFq?QNA`;tiSV.!`pWi53
%P;s+f#P4n*fME!762(\R[R(fr^mJAnqkj9qgQ:.DVS[r/09Kd#5;%Q(K/3iF;3$6JmP6mf)6;bMW>sarTJ*r1@^otWCr5=N[r+*L
%A=LBk-!Oi3/maOHL+KZQaGtrQa,2ar5c@8p2Jn(B7?M+?N3*<t2XIDf!c2Z['VjEQ!)k*CRhBHhXXbQ&V2>6t]sb[n)o@DA^B)t;
%X7&ImT6t2([+PPrOO'jLn(Gb?g^['mTjh+kVT-qr!ETl04=jVI"tR.EVc+GN7l9^dcDS1q2<,J`AB:[\0!$fXV1_A?q#YPF-=mNa
%QIGoBADR8o$cajujZW;NPfb6=&dO$+5UF/f@12"J-;f?0,o2_P>Id(:+dju=<nuiBa5DU2h\]?+0_&'J:L+RZS_"sIc=QahU>.^B
%OV2[58<WEP^85f]@4rMP(ecLg8.doqp;FQ,%hTlt]XNU;)(8H#:H%_+j^)PHAZ7Am?:`GqpS*RB6:b4;&ZtIN+iW5=Dbe:'ZA<b\
%JJ(/?W"qiG;l3#mX8Tcu#Yq)%LKI:hP%]Lo._h9(3[OUU!P]_d@?XDPqF%46'\nj80@[*h:_H+6o,o;2;d$;nF=PE>-eun)9pQ6e
%X_G>.KuF=K>a=D)8h'(4BqHctP+A!gemO.r(rGT6nujd=W*BH5*5^LVFLX"J.Uh"_+=\E<I:/mPaNC'#lDRW)!>V`'F_IB\FV=nO
%:l(DY)bH[SG)<os*#"p>Ce$Z>aW-Wrg;)1I^`aFb].<$d[0uitm:,pUW+N>7AWB,$-'QO1Z,/Z1/0WC@]c9k'UiWM4,\8c#1`8!3
%'X:,*2pMtj)t'4]"UYe[^/"*MTBK2W.mXGlS*HkCcR^E#.!O`Y;E60,]NCuH!214jYiE)b5L7ted&"O;6M`=(+AtTll-KcKqQZNo
%,2oj`2CDFsN3%@SfTR#U<qZu+U+CjnA6(ZUh^7ZY]AS'1"Gr(SN,5JoJBbW&<`p'$J1QoF,X]Kb"$V:,58W&r"834m][H^7"W:-@
%'NUT<W'R*+"p1]7!:Q7L'LIP92p2X]/>;>?K2@8[Z?NO2US9Z2!%H^GR@GU6cfTrnfj8\/E8(X];sFCe#+s>h'To^/F%;iYDM%7n
%f^2CG(?n@A!8,>9Xsm>a%TG(-fQ@E$Tjs.@0F>+mh&\rm\^V\i>(%l`&0iM&lB**BKKa`]Qn$c0-8LfaN,aOY.8u`LcVBST;<JEO
%WSJ7[WLaJ4atEI&g.Z>3H^iA/?Hn7uk/aiJHb`C4Z9XUp0rMn"5t*s@XZSs:`0TI?;n-b`rbk.O64&=Y]]oD)ob*[l@)!qR$JhtP
%Ti3Wn2D_rpE^CMO>893a.j.)^i"YX>r.<``bGD(!9LO9`bAPEfJLjIrFAU&43thuf"^quJd`.snE?[p+"&->$d0M67<Z-R_>l0n0
%d3f4d3l>Ek)&c5D`sST$J]=5U3ioqAbQHE9YW*2-F97$Q.s-KMl0IilZeP`p$u3`EJP]oI#pI.bb&S?=e?m*gH*)uY/V?O<O*7B)
%6)9k_-Gi;"m?G`&CB>>qeGu&]F@"/AdMj(4N=6\'p(mIj%5TVkXTT`:S<\_Rb2+#\`e@Q_Z#W7V)0qdBU23]VlC=>87n)iM7e`Vo
%"R67AE#X-Y8nJdO0ZWZhFBWd=#pqgt<hqUj=gX%m0e)Ps\S,3C$V&'(SRG\MPQS@bX#Mt'UP*mpq\4?/f[-macs$7t1i4-tjb+7]
%Y*?8FMUS7:'*SD(d8W,q`H6IFnq?(hK?dgIkcTm3Z!s^l't11`j>iT4<$r&/h8q2L<!\]Q.j`N?3oo(%F]D%<E"kC0-"qN@<]LMY
%&b_rE5Lh"B@f&Mh.:bBK5_S9epVO>[+K^_;@;_p/,5oUmIFqdd(VFt>4Nd@gb>LklmF49H/.Eck-SU":QXYLWY-U9$duEE8@'T&L
%e$hSBAH61"eGko\"9UR/.@M$Y,K.;u&4*JO5KF)V?_E5ETTkaQ14k*sIALcZq&i0UR"qE`GGS3L(?JNR:,8.Bha&KbFB+$h(bq:a
%6c-ja/MG7=Dp=7>g`?#c'4/Z`9jc"m0u[=SfG?H1PR/6^IF0auV(W"-JJ>#S+]AN.(p[!U@?m.LO&ee%C>1#UYeZI>-&,47/0G+B
%P&?_2Gq&D%m#g6&GYZ4A[Psj3q2tl;$4F)!g"rsS-F+l;,*Kd]_?#]eJI(BC_,=5fR<$d36AE;EME3ViCi/7uBEmiN36dVuK(/Tl
%ar2Eu$o4JM:&Ue0,5A!t6>8D+9[_#\P7"%lFu-HVaC(s>W5TMo!g/QY1b/a[qI`AlL`dK^euXcZE^GOh1Vu4^"!L)[[Pp.7b+GCh
%2W+[P-Fgju*jJDCfqGl:K^3>hdrgAhL,MSia^A*W74/U>CR!%0<N"#=2n1;t"M%Ps<[ctS4BS%MfN-W0Ym+j_gc$P.UrEWaN*ipt
%7X\q2*\S51MeSO+@2<`(]0]nH$ZEQWA$F2`Mh2\2q5i8tON3'78V\M:(.J@m^,tN+#fZkk"5EGY^kS;;$?61O[?\X-aGkKK21'B0
%+)U?j9jebm7H.a-(AE,WHqE;O+k2R`T><#[,9T,opgDel>?0PeIg%?=*].r%3BII6%tJXl&(7Pp!TaB*lS@gK2!@ORd&sf]mmLP2
%28W6.aE\#4aC+aJB'8A700FBhjCg6/$f<)!7P-GPG@Jg\&E!j4`\;5_D/,"M7E(,iGs89m#E&fpRL1Ob#D.SW?&ZAFiF?PB_Rubc
%4CB8acnCl+!@+V52db3F$3N/)-\@+CQLcf,N<GVZKi##"c>jYC%QMq19!TX3@mW^D-PC*8-Qt&,WgCMA&`t-^+D8kOT-/@lPtbuf
%88bWIZA"H%2RE"p9p]AIPf]\-jK6[-T<8*eWZ=jOm?%o&a,Kb3SUo.M)@-D1jt*C0B%!i<dHhMU4u:D;4<_9_#`J4WQq\A/$[u!R
%q;@r[>W8\k(cJjmO]7s^Z'1$#f>0]Z`A!J"2)V))UAIs<G>/k[89bB<OQN=]fkBF(/_tdKI8!9_$6Z"-Re[dPRR3CFK$gZ2S3JoU
%\"Pi.mF7MWOK:FP&p8d3r<sZ_,aF7p(p"l`LUKPt"G(A_#W/$6:uIu!;@e+'.T[jq"-V2"H4U.s35,ja.JH/33W*&-XN[.>YlKcZ
%!KWh)7#?]5"jF@9[PC_8Uk<2]&+"Wslp3)]+E`m4MTcubZ%i+Am<(*q(UA`mi/V566Dp$+:+ABAM*9@]^)+\-KG0]a#\rhjKB#E(
%8u5+BDQ`s8K),+!*/c-q`WmZ"Q`Ol</"pqA&2edLgj9:Z:VD>$p7IN?h-dC-*!fc1%CiAi8'@@8Z:6cBTP[f$Y`J$\[]+\='R09!
%8N;X.^H$+F#A.Oh@t;V)L[\=_5=*u[$53]78!ORB4e"\[**oIqRib.%K;D.g`E_,dkrU;LCaRVn.;q+#D*n0hP@)5:Y1=^u4tpMT
%OpsI)6WWr$XJUVI!ZeueJm:@5Yc'1T8?40[j\]S$$M0@n5\Y9lGX)>/oZ<4.X;Q,L4\u4r%06l#];@.N=Z$<f#+-_mYICX52_i-V
%<_T`]&*J[Q@IC(XT*LY@@*DQX+*<d`03#%n2lpc#DO0$"U4=.uRmH$bX&fII1ETb*F<$O?Oo]n?FsHbc3MCIo0oR/=G[2H<fBK=n
%")g)P'@dF0UIcS5b"bd$TgpA%V#@Qa[6s4KPn&7$)ZC)6i6s._W[K-cEpgaUKfgC":<YFPA\]HL>O,UO4%@oI814V0j6S5koY<=\
%lQ3Xai/A4u",T1J-Y$6$C'UX?X$`'`hI-()$mcWrr1O.O7'#k1l@'7tE-?ubJd):1@@OXf*0b%H42BP;"REt$;To&A<"lMF%R"$[
%OC;<6He0b[Rm,J_I)jeuH>lZq+&BR6O57h`,/RhT/*=4B<Vd>']>i.3[N\q**ig:d<4G)HR>k#P6;k$f@:"L-dm+5O&\DZb#lp5S
%^5ab%U'=R$pbWgT?k4rhLftB%0f9TiV,T=5"Q<OgS^>X3co_n(&Bf]CbD)IBC^&<`X[rf*7gfQr.6fZd:(X;8"Y+r8dI`hbe>^LE
%.VLUCN%QNebn5IZEQdtW<OKaZG!2'aRX+e-Sf5[O=P_Rm+Z#ua9PT64=-n(XW);?Pi!PQ?LV5Gf0LuTtEi3J'poT2\.mIoMo+q[B
%.E7>fVKJ=[&;l!O!'F9R(5<u3]/U3LA<-a!S/SBb*q/=@XM-$)/c$;O>c-Zp_*-Gok`MU)ag<UT5h'#b*jdh`%,[t*MiEna#5;l4
%lKP1),`c)%dnjZjB)CZ>UgcD!.7CR-&0SPr:<^@O<4MJOqojZu#:#ICHk)]@gWg<f&('!/0eO9R'LSSWeTPOE=:7'o'9!Z:<>F\,
%U0LQHlNkU`LBW8B<2r>-Q?Tc))bs9COS?%F811EKC7$B$HgpZa%ts_OO-;&W_h.auX<6)U+VS?Q8CSD%O+Smn1j1olK^-i,3eKLj
%>&j]B3c4.u:)k&$8H"Ah\ClgOYL*6jR&FjTS,0Q:hd_J8,W8LDnX0-RZ\At+=:([CC,L*aWQ>UYN3&ZQ'4,!)Y;EP$ELUEMeqc4#
%CP'TJ2VeU/8DKtN-MLXqWeDA"(q!'`jNhjhWf;r<:=<tc0(W!7YNq03=ESFiTk&S/6\iH)Pm<Mmg6c%We<(4jp.#Zn<AS3E!E2fH
%nO/lK.u]oni1eL=5"6:o9+0d[U'4*)H&f_JEgt4NBiE:th8pu6*N-s\aldsW7K<?/q#<\a0!&bL=r@(C3R*1]4KDq_c8]!]$[tmT
%aG1%5=p#oe_SHKYigWN9gTt'K'hs@4O/_pmL-LL':70`Zq)cGQ@>j0MZ?fe+**#[nbY?P\2A!B]8h3lDVRB[&N]Dc&RR?\_(b8R'
%E#J?Rki^(C[<^IRZPlU1_*".9qBJBHD-/kd#sb/u_-Qm_oYn\g(cKmhposg;'6YReJ0CE"\HP8R%1N?Np,,.p%"\X$`@7e&)r+"=
%44M,)/p:j;;R*Fp*_(U3GGo4tdj`OdNu7S"N*;*NnH"4;%1!O(8H:,hPnSK;;n#50>Xkr$@A&6%1F4mo@@4!Nac[&gDuoYjq3cD'
%W1&MS`C$o00n1]gS3uM_DK81m)("NX&j=`&YR+EaFb+A/JhY+i0=IZG_-Lp1>W&m9),oGqZjq!=ZegTp,0iM:K@t+hKB,(<)jfN\
%k&bD#?o0WbPb.r8$em0<&CfZGdk\7`#WjW.*27mKL`&X(Mc`Y/K_:4>*]fn(h$naMk?u_`L-Sd!X(0[N8k=)WThB+)jFJfYO49.$
%9F.2jR1>rW(Lb?.iH.qdhCM`+N&gs$:B="EpLL`UUs'E[=3k?FBNQ6[)VYjk3CH>2_0"$6&[=$-LA^ppQ@iM-U2LR%13Ep>'&CcR
%LpadY-!V"rjar3]hom^0Fj;SBR:HU&hkq:p.QRZ/@[lXCoHG[C3ZudS:VuaZ[73.h/n5g9404+@3=)hKScY0c1di0s]&<58&ESTd
%!gQVV0:VA5E4WsU%rWH$k_QJGT?u2@$CM$JG'&#FBa8\q_`G,i_og"%OSNKCL*qLDEOS4.CDuq=QQ-8B],C?'"kh<\$EGE]D.BXd
%U`>a4B\%\HC%2g@nFh-5h*=eUW(hME@)3<n/MIJl5D%OSW3W@f_\t)A)MFdeNQFJn%/:qNI82Ld1r^"T%;LHVM$URrb)pVIjumIc
%.LQfAZ_6uk-QnGf/O$<$em+/p?+W/6pQ]Rc'nT(eL4iosY0L3M5t>m8R<gTdNH*<[6)h;*+i9Yq'SLb_doW_3RL/+ZeHCDL.L7ic
%'836&fi*?mps*PijR^2HgU^""1uqNuJ^$t9TJG$L@BubU19)3H_4G@^6's8Eap]nW))Q,VM(u9049jSprk#;rqn[q>GsJ#+*/&$:
%h@LYVb7d:tW]%3MUE1??\Jsbe+G*?H9-5G]eEA#o`r[eoY#Go9N>2>=A!rUVBh#0r;L\fi.*s&E#3.=g$!,(*/;K%[e&T`"RqeoY
%i&Ot=$AJQXo2Bj':b/[a3s'D06f\X].P`>sa)F9'%md"7#qC-I+j_iuM$&)d$!AdM7ZCPPeW_&d4i7>!_%F$Mr+I"OS!nNFmU#'=
%;)+LLjhYXC<B"UFa^pGnTR7!r#H4^fEGI(:$$[R>mO#Qde,Bna*+\9j-hHh>MA$E9#aSQ^NKZ4j!G%J'RVJ^q0Eu-q5UtK#B5A0^
%E"(\*)171'C@>OI/Ld0#rQrBhq]HbQ!)FQ9qg9obW6d)Nfat.^3Q4CHWkgCdF+[C5:9LU3Qasr4-@T6I0i^5r2an/ZMAQ6aZ?0ee
%Ts[hj";)XeVns3##RXkIWP#*Z*$>BZBQ3`La\B6EO;[7L$8ZsrkCEb1:B?1IC8uWL^X[J`U&>[?i"0H*OPM-j*rKSA`8$"'7A>5C
%/CFb5\RK&?3sCdjVWnR><Sl+[n.5^@b<ZCl[#EI"3Jch(*1cVpWP=Jsk0;$B+hj+m`d@-mp2s19V$"@*fHMOYKiKrgDM*)JZAYi$
%O"]0;-PIZ9b^S5=d`*&Y[8-iR5_@TEa&(V\j$D3UDOCT_l)!UXW?VTXbajeU06W:`Z0Y2UN6$k6gVGt']$\%:>u)1P>mEG!S\?gn
%G">-A1M/3:Z8)U(VQ0,:7qJ`j97pskD<#_E7KdRZj4%qRW@&(>Y+%/hADT:.`hB4.,;JPI,5p$AaNLjY0kH[@fS/;cN-)-+gO6JH
%gkot"iPfmT%q070@tXgiko7;=UEcQgqm`g&=74@$q4O1pLKaUc[^G0!o<gFJp<Ud`iF79N@7#Ca&6^bdOMW]*S]L=;)$:(k3"m6B
%$@#:Um?XO`9P2l#O"6MPg3ms-UuNY7jqifa%7R0RSVXTl"[q"\\NbZG"h6MIa]OSf<`PE?l+NkqfRn'%Ymf0&g1CqE=U:t)2VQE_
%0B)M4A@?ki:$SLK+!8W*/3jfe:Ll[T?:\!XccKL[2>.mj9`iM\Ce0(A%P_E'!6XF^L;LiI,sF4Xi#&b3ZCS)Z#qK)ul\%W^2H)TP
%Y`2$HVq9#X7=(b/DhX-`L-p=qp"pNa30&qCf@]LSN<Xr='\hb[WMn^V=]Flc(ojuJ3MZ;Bo/"fB+k8An!:.G`-+k<E:Y.-a]b0H?
%/53-[2YII:,*U]QCk1\F+e5&.%`"n"SZZ`&s.JogJQ=innK:b-E?%V3l=$WNcYtaL7%u:@KTffrG4((W%d=lA?=.,U,i7;l!1<um
%3+tCgp<fb%Kr:U"(/-2Klc<]"ika=ul>iNq!="M/L3oM!+WMCV)#"`"R6DA]W]eHd;Nk!s4WUN3k<>,1Q6Urh!EiE]q.\>@OA^u3
%#KIr-,U*>(L`/VFRC*'@]'L1^$_kM0cbLXDE>2<IQP,g*i,IJ5@0hWJ@JjofP;g(TE!2`2>9$d,khTd+[r@9">tBQaMQ';mlcf"6
%PFtHp8ms7o*9C,H@uX0qKcm7tLg;A9.K%J%aZ?4KZ$tt(hRZk"TF3Iog@Dlne;*MUL-L;`P".lBp]uL]P%@tc3$uhDB#Nbh:Bt%c
%<`!E<$$:7l1\n:$UQJq":OAIcfdI_TL5CZt(_djo)3YW\`uqUj-F5FYOlcb''AQ\GR0S-#5rFG]i=VC/0t1>Gg5!Y-T7m8-"plK<
%Z)Rguo@Ao*S(BL.h]CN'MBXa!0Wu0=&u.+*SOTcJ\VhmReBP0qnUZAmdjkMo)drA=f8e8F]b!#8"sPdS+qQ+rX-:Y:pcNR:N'Nki
%U*lTgD?FAcc,@N8($=[Y'b>BsE:["]EI5KNZY;N0N,b6DM*;(hFQdV"&Wud-[#XP89WdmNPsA-m/iN9C9O^g6`3<%K*/Dd9KRV;$
%&Ci,*?\bk2r3iR<+.a!F;EGWo"&CL2/X^rW?cL=+JL56@*\jK(At[)mXuVg?<[VW^1S^bU.kIVcJD:NY_4nNuEDJA/G+QF^%[QY%
%m6f8`+C"99ll'ts'jR:ui/9$%+I[tgrE8Y$4Eh@94c(s\@mR4r=!R4=/.'7S?mQUETu``))?_:E*j_6%/-0$RR&(ZX'Q/OGNS!<c
%/""*cHgY4K^^js&W:ku0I\IXU0f(LCU$3?LnI%V%c:6u9Zo:C),?Be,c"?%ji-*l(ra:_<;<dZ]mSWaN^nQ6@+bu6L<E6iTY5!$'
%3[rjt[+mB9e&&FS?QTk=1Pe.IBceZZ2m"5pO\r8.ifSal_Iq64;GQD)g"k?2$%harg;X\d?$4H]VDXBKF$,M^p7bs*>5/`d`RJF6
%QHH9b5=Q:iTVg]6&]CV+ohAjs@U(L1IFCGi;!G#N]L9X/LoN?gU&\W=nW4(Y.RH:-e.aAF$;EPsY)eI=CoA`#CjB0;CKUG@o3Lo,
%QASfr<Q04U[1Ajtn@HT/;3mp;Sb=JCgnDic\>[VnnRIU\Pu6+k"A&1E1egh%2P-W],'Jkh6Msa2]ZQWFTA8ef$m-]?<SVEWJf98?
%<@r5e<DM719b=.RPbOn$>rFDa3<fr:Yu&u7RR;q+!ZmrE.Y@8/m/#e2q:0#qA83-WJ3sG/So(j2*&c;'/0VW/[L*9KZp6N*XNelB
%@_33mnl-MCKNChM8`k#'U-."_n2J@7g#/8CPAD?i)@fhTZ)iGn4i5ZM/903@GuagHFL1&hW\H$#CKNM$E,6<5Jt9k[)ss5F<!hAW
%e0i:@CmW,f269d+CmAI<cqHo<m"^?`Aco8&&h[4s%:.J2bH+8oHj\UDXg_]9afN1PX`f.QFeI0U;<2i@_@St?Aet_lmXQu#CS59f
%9#]7i1,oR=3\n%i2!jb3mul0XF'!!*dR82/FTSj&8eN52%%9M@6"[IA4RQQ"=JA0O#"a`r87mIBjg`ui![.m&)N^klnY_4E3nuBl
%CPnjJh!dkHY=>Ljh%=Y]SBkL$9238pC?J)H!A[b"1$[nl4LMXRQlNq;djd^.%i052FI>LWNI\?!R\pPscL7DMbq)@P!tl9R-&/W]
%&F$OX1FsYO$D7\b60BK"&sYqEKdfI.@u?^\jt=.m^(GC?Gt;5i29ES#9U%-IG@Q1&])<bu770ho!sJaC9u1un&t7r!Y$%?29:Yer
%6ROk+c;\mDMfsti&=HnWe`3^TV>Nf.hrAL>X.GSd@d9H\<csiUJ!h]2kd4+H`5G]4X7W!^2:0?NR!5g)gG'u.XW"n%46Y*p,q>9Y
%]=)`!#1fTs?:+gA8>&UXQf0L8a9JGO<Pr7^_+U]a:g3$+qqjXh!0[nmL;T<n@!WQ<Q42j+L,f*6.h3)u=U].E-jSK.2Z48U#T<UN
%'-j==RP"!1>,ir)[b?<9`YAWVTjuH6N7s1'kg:o=HA("O-,T1Hj#nMPi0JnqN?U"QQ13HL!Fa!fd+MP:E/l"LpLFCcXe&&e6S-)-
%SRA$R"Q8CS5;nsQM^Hoi2+V3[1-:BJ>6AC14(7ZhiSZ.YC=rOD'1_+JQ<Xr8=IQ(rlZUIiUu.<35'r4kE#R4^""`BHKBglYf*oOu
%7[prU!tCBf9nLJ6SW_<H$K^6D@Pf7jZkIaL'Jh4*/NDe<\rrIWe<mJniV/QDS7$B/bj5P40Rmn(VG_>d7bCMR[KN!mC9P'G_=3>L
%kjB=,h4R8a>[>;C21^Dh\:XoP]_890-R;)^j,S.r;Db.d6!&V1U@9n^Hc5ebg^."VAd1"(5t*%@e(u2R+Pq[J(C4Q)Q'g?*k9]Vh
%#f>\b4N##IJW*.UN(I0)QHVK+LK#foN"rnR:t;`%`54Yp6m:'.[1:@pB]_`N6mfV[pWO`tQ32ngG*FHi=Q!hdYn1#Te9kYBj1[Kh
%q9g*9isILs2:qo#5td?8%gWi:HNpR8<K6E']\4<WEkcMh50JL/_,ucE!eCto[uBl\Na3)D2KIs.TfIeQMgCEpm;7F0K;"&LYeWiZ
%oZF9+,BdIH:9]5uk[EE\p47tF#-o^K_j*#S@#!.;5it>`-/MjqL7tA&UoVD)6!C('lXK.R)+_d8LU6dpki225),JF]WbLb#[]t#]
%/ts_oc7BEUV$/UACr-MPM8AO-Rchuh\5c6d<H/90Nc9YH0h0Pa$(2=@CI:9TgLI_>F@0HgZ\o[;:-0gg4fF2rhc=BUEU.sXob&t8
%pY9N65euJ>_]M`qWEI4dT@kH@R[VcL32g+5MINroEk`-#eqDKrXZ$Y*=/j$ML[ite!b7f6<igHo*,+,_2H+RN04[<iKVid/%+n?[
%?c%jTq`W^&Th?h>Alc)f0o<sbBOf:u0?WgSEQS8Ed:=N?WSo(4GmNgd]/",p*O$5nEciB`$HRVVDTs:Wc'Ve#"bMI9J.4d@;oMOR
%;%].gOK)1L[q5UKd?,+[Uh_;;.$P?&e*@:iO:2DK6#'F5-AO0(rK#GKK`YqrP)J][o]K"Q*76B=r?08Dh=!6QdcaqP])KeT1Q>61
%WG6ciAWM?Ys6@5"rc%o)rKGk-?[j@JXK';_r6:F<0>>#Hq<_P(HMPlT5Q9cFQf!:>rq:@.lt<4\rEo?i+nG..66;cZ7`3S7C-!O]
%A+^%nlmuNcS234]0l0m@=o^b;$@eQgnanliO%Z^G%K%%u/`Kf3lso8@4nT,0%+SD84HY\uK@,I`!ZrWmR>?WQH]3<YemXVZ:JkVU
%4_>iP$"u4ac-7u'S&RON1WX(E<gns]/_HL/NXC#9&7L=T]AO\SqE*apiJs$T\nR63@oA[[C66Crg@7c]Nc0[-!aakga#P$WmK)T4
%3teke*G5ZA1$qNP3GDOM&aD>[^o\b#_gYh:84>Ql[aQ:ZNY)f%W'U]19LjI?44#_+5fs[>S7>Yf@Z!7k0bSTm,&hH4ir`aT"$&h1
%5U_'$3%g(%3Y@Bt?dJ5$8K;5q2b#ZXh/IIG]WK\2#&[](E$P6]Ch(D#-KoB.D%+BY;(#CX@h3=FaMua1^aH?@"8("ZX>+gNA8tW)
%?<bmW=U-h(5&L,5]6qTb]T+#[\;^YX)@OhHgQ$g(Su$"C`^l19:NneYk0R]F1h2?[l@UrJj46rfF"H@;/LPt#12^_%E$Spj@VDc]
%+QHnPH3YF"jHXnJPG1'/mV1R!'P#pRI`*p0).n@KK^l97!CJPqZitaR!+=T_\jRRR(onRtX2>aKmEd["kf!fSK;.>_`CpsMK5g<h
%DN_r[4+KV8-HS;n1&"7,+XVI(%!t'd(Gk?9:kY-V]'3NcI3H+5lt&D3JQ5]i*P30E&!O))(Q6R)QhLhm4=njuOc+?n!ts1HMn+b`
%E-=K!<pIa>?l0"R%s7r>D46T2J1fusJVh:+M^d`:IOIYNjoMu:Qm(""MZJ";a<cb=7:JSt8'p7h3T(BMm+RXJ(([`K*<;!``8YgM
%@MgM$;g5`\[%eJVm4?^c`&4c.X93.;*kI:)5)/,N:rNOjF=@m&R$1'QYlPSL4,&cD^aTI]/@7-e.5!t2I3#2p(^.t^V79XKU8&D)
%irP(f6&G^5J0Q!C(raJ\C(=+"`+Qa)+c:9S.@fU^=U<nU7t@lG'Jk8'oncHQ\H7rn$;X?cY0\OWEE*OG@hZc"Nqmb3->&ihN=J[A
%n0qQH](9(M`rVPe>Lnr>'*CV)Bt=?j1Pdhhq[o,2/q^5:a(/$I8#R_0:h&3="h`^Z3K@5*OMpdn+QcH3M0%5Vd/tM21</R'`%ZQ`
%n(Q]U+`lUua9*>8eZ+`ON&]P"jB0@`_VB&'[#em9j#ts<&i#P6&:gQ9`5('!j"S]UILU*r@>Gq(_bl6S-<(+0G!?=&rV`<c>V*\@
%+c,Y8K)Q^rE'Z6D[\adiQl.&WLFHhI1Qg?ICD-&V-m1&:0N.J8+ZoHQ;VSUg(^C?P=@@u*MEG-;rAL<WZt5"9L7"DE:3]8L#0Jc=
%SIR]>qaqP\[3ab&l)H8p0\l]DMKQjGY$**b.$EN$?1EZ30Sg1]iJ,OQ\6k7S>[T#1`7#`C(g_DW$'$kO,ibnd_4&\H'Z8s]1^po"
%ihceeK?)>]@Q;:#4U0pH1L(XW_*Nh7Z@hB/(rHM[<3[DdL-`1pNI2*-@/^Wi%'GbSke`G/#gd>E_?_O-qJ^7Zi6qZgkQ!1C%k&?4
%aMJ4d*$J'biG;"_*,pTLBsHb+.u^D3_\"2A!XpcMpAn51.$dDJF\H5D%VVt1$3LEqMgIl,7bh7kE?Y`'o!=Pe.#`Km4`S7NN^KN2
%*)8JnOjV!u;'qPQP]05U[gbnGDJW`1'1b)/m?Id60YDU,_:^i*Wr`Z&Gi4H8ElSb[(uC=@-4PMN<"C!9GiMIgis\7VAhPl/'L<R?
%Tam@0"gTB9Hj1\*l006&4W(3:eopQ@:&V%]lsP@t[C/F-Di/5e^qi-ulj+Ph]aJF*7h%rc-8q$D)P!cZ*&*"rr/5u563_@s]JpLU
%LS?XH!JB@MgY0RR7NPBt@):57#nIt.]W)fJ`sUrr.IL$K6c2KV8AS#Ge-$+J<ZdPb`sMJ:"&,p4*@5s/FhmKr!Pf&5IDlI]JgnK#
%r"1=fl<e0df=YGkJt;-#^drK4]b;I>VVD1mGgMYF-TEg<"sD8P2Xj1i>$(/6HT>T0*#f`7.*NHNCuC:]DQ+__J[&MrbhBj`5Nd$1
%KWd7Ti/L=H+W\s]OV,c%(C(2"*1#<s#,Z+GPTr"=0I;:rAB;PADo`kF0JGBTFG:/SWtd/%iQ;-b66D!#!eY:8ZuU[#7[I"lnJm1@
%nD"oqORuZ+7[A<b"]i:AY_*!q#287-^bFZAIY7iYPo>`4NX1TB*bOXd+>C=Q-?J6u#E0)siCsde$mZ$(96l[3$rJGo_18:$j(2?.
%bk`[!J]7`K*g5gi#rnC*c%1E(mT+QZ$UH@Z2HjO>+h/[Sf3s3WeJci;Aor\u_Rspi!Ht2I!$dN#pFn=PfdfHD=^p>%(56J_#f)6r
%!-<5^@/QTuA1IY!1)l_Cs!Gp1GPGN5!&0.B8\u]Q2uFg'rX09g61bbc"&kTXh?s2hq#h\YOak4;!#b0s^'1A:'OHoO.I<t'8C.$^
%r9O(^jPNNcjBin)^?%)#J'Z*h>n2TXg<e/Hi*SY3Uefe'O=cl:!rjHP@VE!i!rO"#3L;,_0:nrR^k$uTR[ThtE<,taR/uH1h@#3e
%AK:J(0L<"a1Z2V.BlGd"P1A-Uj8P4YjrA>i6ZNlYa8K#r<eF.G%h1lh&9E!0r?W/j"rSlX01r7"`,U85A_S3JGRq[o=Wq/^pD6&9
%o.Nt,i=GR$*FO@3m5Lp`p6QlB(ab%:jfa9P-1=B5Z!/-?_uA'l[[",8rc3P18.Vr>E)il5b[>qJ=6`%jfO(0NFMY)`^N@jXUt&:k
%M)7jMOeMdFp])4(&#d6fK>q@^l7\U%Xu])OAYh6W*ajIbFD*sqrFM?3_.k"aQP@a@"7@h#C=o!6rfY,07*#60L"RD8gg:-Fg)M7%
%0C5E,qjP=8ZnKj;\DmM9;lAs(J:D8s;J2N%bY]pqp&P!uUl&\[@*ktU6ckEeL],3^A9qA7MY]Dl-eoX(0-=t@a8A@pbb\DRIpilI
%!'B*lc!Hi/@[Oq*'Qr.N0Rq-I:3Xe:&M0*]&V&c*#R7ZN"9-.U8U,1Zr9Y8G1\#o[+?'0!m^G[o`cJLo&/:>U^jb*`El@fC)LH0[
%dP(!/aj*U;6bW_E*g(pIh$ijsW*^$C2k-B[,a[$WGsM3Hbfqu3?Wb0Y=>Q=Ogd>g_;1:f($I29P(Fl(0ehDQ0Hb,Ie`,F9:Z-=G@
%Bq4A!EfW)$8&_`<0n.6r#aaoq^[-5LXUX<WSV>r@0Rd`UDeVQ9nfB!M6i<*Td(h`]YI]6VRh3@"UD\&<r6gK*e:n(D03V*'a!#o"
%BS;B#+b&r-MOh=Fr:5@FfHhNt(EB%ta"Vtq0?bA?6%2DE(2k>19Ho8*gHg9ST_IFGndDI-"'8cY9fFR-q'CT)d]FY,N8?sUNe@9#
%J<uugClNoEM?3F."3RgeF3=A"jd2#_1"9$KK0p:mJ:9e\?c.GD4mZ*eIKO#?q@Vj+6q0a/bV':TfcB4A"J5Fqir"Cp.tFn`r9?i^
%UH6[R]^"Qd#Fo-tWAHT[0*h\lEL^AKR-D=/r@1gY_NB:M&Ml*MknaJ7]H!#^H&;d>_NB:)1Ba;pCg>jm4#eA]l>^Pr9r)-d7)VgU
%Oa[nmSID$48,?eu[fV"oN(5eiAHVej4fA#]oLl2FRM9P(&`ZI]#V'\%8,ba2r+_%4<.>-_8U.BOj8d6rS^H="S6lVR\kW^u(EI(Q
%"9\KhVL\Yb!;Zk%A%irH(DPW<%-X#lg'8*Q^L80K@5u$'MboUto8C-Y0e<WKa8*]0W\iit^YGsA?YkOC&:s$o495=83X`2ENq80\
%Rb?j`^ZZ(pJiM]d,#$n`M[ehc;bR95*To?q4%Jq!o?/s6B1j.H%?mWCi#'`mKm,l/X>mtj;V#oZ?_pj\<9SZOp+Ilrf^,Kon2o"#
%JkO$;JUYFZ),"g3^H)fn4TbSF$Gju<ISi0/ZlS?H"E%EKTO5;"]4)R)LsBUoo+(DnKU.Za^N^h`g^`u"<MElm'YCSn(uX-iE!KGd
%1/]+SQ[[@"-AF/j<3PPBoF'enN_U2f15%nO_tgFm4^0tar.;Er*cKYCki#C#?\BFeb$6ZMGq>YXO_Mt=LAb]0i-)JH"Sh)HbN_nH
%Y%'8D?:4/"iPK.rqc31,d'emf:e-=e%drZW/%G&D)7XUoh:Y)@!G'A)V%q^n=YBAp8F`Ptf@OnA<*q!jVQVhJE>+)kgGf,<,5QIU
%]6?[#^6tn;_?%4kclDP&]4F>kShKA_qp+/Jqkhj;JEGVQGU!IbD&*6?=MDRY+B7;,j\&k1S0jCPmmE[3^+a__5oaik6,]RC(gl'.
%`]/i//E2?Y>sWkmAtDj%nV%DlhD!">V+j(,,D9tmBu1I0Z2O`*lj1>M:OZCHHi_Dj8"04d378)84GWC-;*t^loNor[kErDgPX.^G
%A+p%!WT_HI1D1A2A#YcNg^E:[B\@o_JN;:j3TB`fj:UXh#29N0Yo[qaTI9@`Uiln.jiOu*^fATbj:???K,\>Sg(A<;mY]Z?`W4K3
%!.1d2N/lL_#WBUdX`1sIFp!(HZsKWJ@@e?=mp=+feN;)025jhG;1+j+gOOSNmm6i3S`dejb4'Ve++gemoHG&FP=Fr5Th:Y]oGXOX
%!MPk,+$f<oL5fDnY7AqF!$VYqhJQ`:NmEXAI\q-'4>-\i_8QrK]L-PX':]l=.o5T;jCuA9Tm8$1OElDD6SR4W,+]#7'pa%\fT)`t
%6D$(3!Q1dDBX]#o[\NDFW^5*K&7ZDHfhm$oW#4=XEgS:0VjPcg1'lmYU8%N73]ip@8F;;WMiEaufhm#<N$a6uA5Ztts82n](E+*[
%KoX9u2Jr;T*V:((#O-c\9DJW2m$PF8=t#uI"bPDF_Zrll.:"n[0*lZN3@6Bc9_VjJGq#JmnV5.Y(^_<(B:-=BKTtdO^\fZ<H"j5[
%gGiU3P"N3u@IgGs0!u#%9<0%pqH$?sg0>ck3$p:U1K_>"nd^:E3'd&oe#E(',k'574d-WC2<oo$87"Fo;l(J?,$G%VT!lP:JjV_h
%%Lr6O+aMmgkD6cEHUR00LqGQO@=C6]0<GUYgDl?Bee*5W=%(mo<Z3/8-R@91,P(9c?EAsq.ojhqAm94B?=IH0Fp-l;Lj`=MZ=8"h
%'KNT.aLgJ_XFRqlHc1s4J@l6/<r)s[`CNm>3WS^p5m;S6,P!&!MEl3Nr&aQ3PQMmYU8eV6SBMN7CfDdBXc-p`'WkcU1o;tk`6``d
%PZCT3%N=1>adioL]LjGKYf8&r*^rNh4O%Q[ENWufC(4]'N+Ge%IU&AZn^<@2_\%qGL)t"]%`d=`^H!2c1IpFaK(0`tQQbn-maseI
%T:.+/*H66h9:E0.\@cF1[>r,YCfq`CGS+=RKIO;s1]oFS#i=]VX/uZ?bms/]!8c9X@Flh69K7]q?f?3K('jW:U[M4hQs5sA]0llE
%oa&8>J1"fj)#,]pTQ2IpH^BObm>/DZrCdY(hQ=0J39kB=-fY5LQbb)-`(TP_N[TaQp91Ar'h-k;5jn40CA@*'EL.!sThiJ[Cf+LD
%]NrMYN&KX<EI9#u8fV[a0VTkbU$Y/YKmV(\G+fMt4sni5mLcRMJD*El$r8K0Ug9RQ'`%sd"YaaVU?j'c'Y[NOfe#`ISHuh5_a2fL
%!FQ_^<pIWT7JKV,D8P?X]E_'R!F<1]RPZA$DUJ&FQSR"YIRMaU*^+#_%K1q-41%AmeO<(>j0_rj>p+=[F;I<p/TrhPKBaX$#XHfC
%9O/3<8om[3aONRD]H%kT.p3I,&abV:?3A\/QH\PYM?$UHH@X;$IY7)0,>U:)kXV#LNi%`!>.??u@(O8J,KJ4QFu5CMkosB#n9QUL
%/g=_4YBM6t`)f="G9C20?c1*siok]][_q;=Z^j180(/[,'1J5t!IUQ8kdom46$0^BnK0H,Oh=4JehD3$Td`$UmP"b6!C7OY#f_[#
%2e$!c]8,??kc=l</u_tJNh@<sD&UG_d%q=;l3,`_FEpP@j=,l2`O8R#T0qfH5BUFhd+p4QT$:n1d4oa2YlLQb!CN1j%(*P^L+]%'
%4G;NEFOaH_o+=?V!ZKDXBR:43pQVs'RsGY4G'hk;N1rDXlu3*T*I_8+60Q2<S'9/LJHYk!0M("_!,!-Fgr.MZ_pA*5pfs&Y([$=?
%bI#Nq#!mk(%a3[N86iRFR;f](kA!m_M9CN2\;SX<#LD3H9IkEA-$U(k1fFtN'$nJ>NkFQ=2$X7h)@Sd[^R6CP-UktEVEmX6HVdPb
%=E<V1bmPHK1pM*n+WSi04-q7t8/s^Xh[OSRY]K"+!BZWkAE"UHG-7\tpG&poktB2,B"J$DD5NRZFtO%+URKiGPa)ssG=fN%O9Iqt
%TlXZ?kL#qD=H!KJ,5(BN\SP6f'0/#HYn2qcbCg&'fE6.HWEe_04>p\,L7CmpLXgN4cD>?U34Vc&IM5[$3#;_+mXUg#bnP"RkZgSa
%5a?HT>dB;0O3"k2<7,]GS;R^!mF.2=e_?M3&NQ0X*>j5qc;j=[$kk]=XoW_2!BZVr.ElN\ls(+#!]kM-\eIb"@coMt!bNk$c6XV_
%<pl9u'2ae2\a\itLDT^)&(S003>YI*9?#eNEtO['PG0;bde/Ab3[?>pG1(u<CX.j@T(DalU^Wi[@)0>B]l9\cJ9+#Q4&8:fTIs+@
%G2uo<M.h/q+QjC3%6CO7kCPs'VBb8e!.![VS4b-'X<q_BG9A^T"9h0<AN=B"XN7r'ES3?HjBSJ_B+m8se,UNl%r:<ZS?#u'/PY;2
%[_&KfTP#Vu_c]&DkCT_;1Z[>QMWGruE\7[Fn.*OMTJFm>O`U=8Hbkeb=`Z8ZfGt/%6$G.j)h8f\QuT<iSN@,_nD'RLkddX`[LJ#2
%%?-lRl%ko=?S7=Mo<Du_O/(n+KG?Xo;B7nZ3(041kPEsrJEMYl-Z1QCXJ#eXDD"(eHBQ)c.S/PqBhfI$ghBSt*&a-IZ(r/Z4gTd)
%53i1_:#Lcnc<t_h>6pT$gg!1'@JMp$0&;/+lDgoPdB^n1gg%]PDVQOoRu=8B&K6\!bGAd1mIg799]<g<F)ahY5mP[=JMPUR3#>PK
%`]A,m$$Lj$L/<Fd8,J16bO1)bBZRaVqRV)R-%T%_T^;i%/r!Qs<K<SB'SN=gaD*D-Zp_k8E\:i>U*A:V&s%bM4J?gNrHS+h&NU`h
%ik't8"=A3_:$>h[kTE)TkH[PY;EAnP,Q?mLGN`:.1lQ9AcD<p$T<'4!;J%41N$IL@/rh=[$ZbY\:?5[J<5["geU^,<&cV0JS-uXJ
%/jmnfJM,K0SBFD:Q?>XA-(-">aLMYkedY8R!A1%O_'=%SUB'N`G3E1aW[LE(gWY6s.35[7Bbb734*E7*6Q%prTX\5-r:UjeQPrZP
%M8MV,*0"qN%`#V:eZb!W3/JZLWt<;61ATfmqI`tI_)iFb>g:>#'/^Rm5.*3Pc%W\Fk3`=`DH.XqKZpP:5X#d$]B9,8!HWtI'HU?=
%$A(D(Q8,o)m`/;0BXuIolWU/?dE8/'/Um?uQ&@1bA49V1"ccDVL_i-A.]U8T!0iDGE^1<U:bKt,a=_W=>!N'4@c[TR$R4T\*@2L[
%^o^Ck>bhoR=m,jJM\,O!dj#SN(\`R&67P;SmZC[r!6?J9YcJ;Sa$l(QU+L!C&3EQK@f^YG)hnC6H3duf%!p*<"%;&i0_YX/MhiMr
%4KdHt_8(V44%%"^Pp`];Ydb6%,4l:2`T9sE>FM4p5T%^L5JtE68HT_T,VC:t$ZRsR%0QgdViHSCTY_N0J@MN_na$o#2^LV=p5"Kn
%Du`1'1gIP&OTsr(##9-"7#tH[RB'^h-sW4n7[clX;#Z;dYQEe#hN<"!>U8%e#-DbD^qFXhC0=@=5m2"ZA)O*.+=`;;/2fZboRMIM
%XA+_F!T4S@!IBaah]a`V;f%0&7>OXu;*gX%O/NL)_ArIh_BdHh?STH+DP`99TPoqt4(3&sjZX_^DrI0e)Kh3T-l<G>M_]tZ=<VSp
%QP258<3nE$87ucLG`+8]W/.Z>hCUpRi49,:M_<p;1)hW8PX,g)gm)-sob>*&*Wiq"F.Z:<FRAgC7(NO6P)TS"H8;nggsY5D1Zqf+
%>97@<njL$Z)6jBdRk0Qr!-4"=_l3'k)ZG9)RS%aZ>?H6gEXrGb`8h26!o3>T%g9\8nqHthq[q[#6t@i1\h,$cOC7,,[Wk_)YhLUl
%_eP/Z!Je+;a;'&jaL4V?b@e>nN/9e^Ku)IEq?3k?:i4SfL^Q@rg4BTCK4EU:'GJK4LU73rG\c7DC$QTnNbF>t@([>N/T).NE<*@7
%QU"So4PNge2SsE:O@qn%]qX1(l%o^cRRi$C@YkcA(.hM.L^,>4VE;Rehu)s[%FB;A>BibU42TXeT*bMb0XeIr&<!=9iZ?c1#8#XW
%2-G98fOgU<$=R/[Ia/L@iE*9(1':npPd_[J()*$3&1`.1&?,q]RN$EFqF_:1()A9RF9h;=4cqbkfX7-XW&o)QQs&ljaL+J,KI1YT
%YT;85CG@8Y35X6iT"lBoC2N-MhEbq^BC_6fbZ]Nk&F\HuCLN`TJ6JNT?-Up2^t!1ucU=gN(8,/F[F#V]NaT7Maai,#Z"bj#G!a^l
%f\daKQ=k-u*N3$5PmLA>[g\T_^sp6L4Vj8cbZgYE@3Dt:nO[@1[7OpLLT$3@G<8,CPFkK3!n8FhUUCJ)$f.TAM8tKKM`dpiS>4O_
%qP]%q(*<Jn*1I^j+u:JTfX-I-:bWp-VM0TLNpYEeQArGj.XpgD['8C;fQVPPriiA.AH573"QQ+\p'+=3Jj+_6,$G"GaK]G"Wlh#L
%iBliV+-C92fL*Gp?s9@^6^W"$g0tAE#?Y.`W1a6d#+dO40sl<Ggc,3)Y'ZD3\4dB($U5rS5TPuQ^aq>b!GRI'FLk<fQrN""N\_%_
%(%[UUBXBoN#)a.gH:)F$/6\_H=Lcun711:t%>UYuG(P;hd/pcjN:R$;$d1Pp#fiW-*Y@^N@31%hUZMT2[WbI*EYR5F\u*Bg2Y/gJ
%0PFn1)k+6%@Kf]I_ZiEmpBLh)-TV6E1T47XQ>M?bF+BlOe0kbV7dNEp(C-S'pFGs='-2D-RG#`FB:C&A*.VZ62k(PA<Xl]1jV3K@
%D&2D`5b2b8R^%Lj2@IWHLfmFEUkNtB1Jh;$^8N4#FouB$^fc?U3O\4+S;$Vgl1%V-EU[9hV=Z%/XAN.+]\.0n4q9O+mD($'S*bBP
%p]56?S#1"0Ze`MY%;XPnZ7FG+K-WJ*D!uN_O9<aNMu5Qob]\&h3m?q]Rcrc[ZTtpXC7j?KAk@qq@a),SNtYt<8NKrt#DCd8+!jDZ
%,k64cFaR?S\\rNAQN\QHbY4$L4"PeuK$1GYm=:ZH>IGJOVBa:$$_fYR"tY\@n3#k9Y,h^2:KUc,M7Je0.Z<($AgnctARU09n9AJn
%Bj-7$b3jDROL!\JRYE6Fe]m.DZ+f3.E3b;Z<4H+cPO7cKEKJh=%1;M'-4;pNiX@j_cCV9caYH,mNAD\[+H(%nlo;;()C^)iO_kjg
%E^5b(G)5nrOTh4@5f^g)'nTob*?\lC/Bf^4&@0YdM.,TbZBMMEaR2GbOfa@f1I4]=oZ46O6^A<BI*?[=Ut=+()"IeH)@H4Z`/mE,
%IAq\0(*r]aG_?8D$Pb"W8TK#`_Sm4P<Q<b)_]]pt#meb75+opt9,"Qn'0I&e28Y%dG&24"iraHU*1B!Bc(JRG=#GC58[O/K9F<R7
%6U$SSQ)k3-e!?au?VTH\BJ!t\>B+./N/JkI4Usf93Wr]^+I&ngccN;.1*Z*u%N7u6NfbZ#m("rorKGDt+#.9_%l9O7F4'^eVCV#c
%_LdsPD?Sr/<qYus"?@ktSV9p8WttYFmO\[h`-rI.NkG0<\uKXu9@dA>@0)=aj;:Q(+LPG$@q[^GTDK\^)>)$a0^t#->[3#je9X5G
%o"^)j(f7#M6\:*%\WeqHG;W*mM=-Qa$BIcAHJF#g([%,?pQ;WZL/DndSA5GlbmI<Rd1.6'2Nk,=G*kZC.P//aaNpE4MegaV0lmiM
%8D\t\(NNKm;(.`U$4>/`kRQ`X8>)c_'J2Fb3#]\%SrOjs!gOQ`B@0X2@0#cf(kuK)Qh0!?B[pdF*dTAXg1]eB3iX5H*+toEY`u)^
%_E10l!bQZ@J]DB)KO2iST^/2r`P_$cVr92m6k3B0Qjq)A'-iej1/WB%Ggb*To].@7]0ui",tp1hks3(Lj#q]LDG6%[jV/C5qBf,_
%:fBgX0]IV@*s0Cp)*t6n(T40e-%2U6?XV7.N?l<Z9q<al.lmQMT)?I3icENm-].u[<*:]llU=tcRh'ReG=XBW0u5P;%MdJS*&=5=
%:[CuHBfLW/eSmKEb&k0K."Slf>pGI6Kf/8cbS<cjXm0?Sgko`9#"hAZ^jnb`$=?)s(FV+;#4R3:YRA`N%)'?LCAJKR#PA27k&UXD
%;34Fu$Pb+\\&6[sZ-5>NR3u2L*nY=bL10lhQpqNhLdbcTo4DBgUpR!0!]#^f_I2r7?DP8FipWp?("!$o8:dTlDK]'\;J*N<YbYB_
%2:@O>Zn.=kd2q2`e20W/q5CS.N;)0[]n'g=l@BT+dnu/if=7ulFth$3Da@VgAe(^MI>:Y;H+kN]1l,q.B/[5?n?d=-bVqD)nNf=W
%!UnsgG(eMh>5c`EGXa[k_VL39PVduP&Z-eu`mE'`5VIXjfV^&Zn<$4Y+E%E0otbOEHlQIa%Kr&1>+8(.9I^sl1-%/SG=I+;hD8OM
%[paI-2Debg&3/@cBhkq"1Ot'[o2?_H7VQh$@A)ci+D<8LSHJKJiPatJ*=VY,_-RG-RIF@0g_dk&"/Ir;@uY1(]ff.-+ile%YQ7XL
%di#0t+eme3^'bn"ar5Md-PH$@<eMQW9]ljOCDk@t$4Qm+F?L-Y&rb%m7RJLg1`<PgTKa#?)Ml<'i"P^4Pb:cNj(:QXicd6N+#4Y;
%PPlf[s1nZb7uU]ISI^<G?P^K1EN<rl2F@J5C>mF5Uq([o_%RsZ9#efP$6%0XBT_?[1N^h":,@/R6/;WsD$VkF%O$np6(QiU<1(/5
%lr7kUF:+`o5s=@>+q/MBToX<p+Z,R-+Y"UbmJ5!R(D64`qEoAVYq]npS1.r:B0m"\8HXj.%QnUK+DAtQ..C=.J3YGXJPu%_NTmta
%*-c-3T^_:R]E6LGU_%kS'/8jI".!j:J7VEPAThl7!0J)p!iF6HRa:n)Ob9<j-lB*Y[`EZ9$/@9M-Q-RN/PH$+PWKV^/DD>eanF#q
%+>H)Yp)p[/Alf@>VWbj;RX$Z0oojj*4$5e5W`Z3[J-C!:3YV^^G7g1Vata"./L2#'!>O\:!=FJm)^pr4P9T@=;,;J6.N\5@/k+M,
%AXu>>nk?:4!4YQSafF'f/b;81D)KH[)mG\OKLrt6d\_[(9^/Q"An2Z>.YXhm4;fd*$"cl-9M$sgXhgK$<.rG7Yc=H"Xcu(_^nPn>
%-^nYr)L9m_O"F;"8@$-Tn-g-t5(P3M;\t9*KcLCDP\-R#S-$Y@<u4J1SA$FH.h2h#'R-2/#D5AKcTI%?fcaFI1?gUMXni&U3;@pk
%S@)nJ`ah.aMrG_'&4Pd)@bq\2DJ6^lBLrE7JARfuQK7i2%,cDe)HqoqV.Ze^4LJrY#LC=g`YC)XZC0$_B3`$>]6^qXTdJX-VRc1!
%=$=@#X)9_Ol=UYCIa`LSc6lBfl?`6+SdblrfenQILBggl>n5K?r4E1e#E!NO]O'3mF=>]N-X50nAeY^\VsBFOo&s-'GrEb!<clf@
%78?DK1K<DOG0@d@&Pbcu?e#%SQ5TLc%!*M'n1r2shH2h]p)$\_`'V-0fYd.T7%J4mGbpM:Ded:#;$MlnLq^'^**dfgVA<_Fm12mM
%K*Ia=oimDdl,GE@SQa#BS'/t6*l12-(IOj_*=$Bpo8$uNb3ff"#XrWsc0++FO0Mu%g_nc\b-:OB6PX/B7ZJ+cM,=fkL,2mkr*P7Z
%-X7,9g;MUlKpdp)#<.\UjCWVoFc.Xn7Lhd%c0*(qV5K)j=+R^C$<GY&7L%7B$lm#!&/%C^M3]TJq*C!=]9f4)8aR!Mrd\@KOjf-F
%m:s.AJ15&dSHHb<b*R]b$l)R5KHXh*HX+r*gUW+PkFp=(O3?#8U/H=)$@%pP#0MP0XCsJ_al!=3'%B0WL?>fWPEHV5dn3B@AJ!;<
%903Ch@gH63.ha.e@M@Y\]`#[HW$mn:i*p%A)A-I*SQZGcRrF(/"]dj1k;dki"p:jB`jBG.N?6TNLV'qI<O/"TKP>f[HEHNN!g`Z&
%Y,c0p2*l.7a9h0_;8/^a*M#]a\QI[l'=7=YD@BLNo2J\5_2.Ma&?'@Ye/>aQ2*o*>O;ir2$DSHi/O5!\4SLLTDAj_ZFK'CEc6cE]
%@#bL/%e,9uRgmps6ZQm5%15V%Sp4/7.+8T-1s\O=U"k`rkGHq/Uf:#HUl7()%n13:,,EDre:PQN.U3fbhjq"i.^s9WFjYiUJVQ&3
%('[ScZ<28>10?@qOr4V[@PiI*R%)OJs+@_J1#t;&8N-j@`j*I<Vb1#_d\&r/?1pF75:NHiaZ=_7J5ab4*`R<Na8=845)X1$"@PLA
%BI93?PT=Hu9P+k>"f#`.?@i+K%-XcYmgP67MPpXmG;)u''9aS61*IbW,g0:J><0ZLc!=(])K1..`#/gN()>4k6,XT?$9eTMJK%G'
%S0_1O@DY$l,U)KR;KVeKg'GS4f7T\Th\l%@bZf`oBMFG9*b+DiU.$1cAg7'0<'#^Gh%]5\.n\-:ar4<:I8KYG,>?A-cfVRS'Zs3M
%TI>7.!HEsk:ANA<g"^("T-UD68uL\OeR6uM@TC4@LbM3?905FV;h0uI9pprpj;,"70ENt5$6C8I#-R6@2KZX"/8unI3s[8j(C%;`
%R5C-?@d:Sm'\'-j,N)<N6R$K0JD<^6(^S?8,U%LNJ4rVkTd1lNq1bR:O^U9d3%t^QJg3%B'(<gC#@p)YVPrK9kY-[NQMZSh-P4B<
%*sBe!^M;4+\]BRW]J\@[pM<:l\5/2$`e%P`]ToAN4]5Z!!_%,!H!\BN"tgdJ5&2/5f.pe["Z07W2'89Z>!/g=0BF"IU72<-['r,s
%:=dcGHnqg$<mhW[0_@IC-6`g'O](tJ'2KV4G)F^%'_kmj&lY<[$9C1WbQ^Uhkf;Jd1,Ug"j)(A$iSN8/^hVN^U)aCQ#sQX<'pfA_
%Siu-7<4,k]gt=WURB(>Q%_`&K<'Wo._Hr<*.*/bSZ7;fETP,G*Pt79CMMI9^#2E[5A38J&<r6@tNJQmpPKM;-1sSm4U+\#<k+`,G
%(gi.":5`0tDC#S5V0roC_$Fe2i!g#,[J1`^',7ki=cP6*,oOK%.P6@%%^AEp.,b&9_(DJ,@ijVfYrImf7R?bSf8?.G'5X`/0K5%d
%KQ4W8.ta7r4N*\s;a=D-2O6kWEqL*LH6+ULoJ@^&iC2jZaolniL&3mIQ\Z4WWB*`nC]lF8Ca;nRV_QaJ1f2ENAJ'EbeGY=[!k[Ne
%NX#>I#Y%MNJ3fWth98<EcCOW$d/c[/nq]jIB=+8)\AY.f\"q#N)G,*&,UWq[^B6^ZRDJ0.WeeODPDup&Cs0Pu6#LcRFNo)B?#!=,
%g`,I6b?[c\3JVjf#Nj'-<;9kIA92dBl#;XkF&nRN_bsr#=?3t'?me<#0P(9-D*4C<CpjoUV.NE`LD(1#9tLTL*-ikTf(Gp:+UL]+
%@oig=llrtfI;X]2b.;oJ#AM\J4?9Z:UVp`/&MB)lV'%[%@B&c>IAN=[$6?Jg4UAhmFP'1,_lVP\TeRds%qGP$Uo`]W$8TU6MCF^m
%W^^4?R_ml4.$TXVa/h'$E1Zt--o4kB/S?:t4._8s@$EI=+^tQ!r7hb\#a6VI_!i"[&?`qBk05F[?<m0EQ))GqfU*/.5_efqdR#4`
%H8GG;CV$2SIH0`R8d9O@2KJH'TADk+,!)-'?][#FM*Y06V/$30A2(T;ja89n3XE3qF5KGPHEkB2BrHh!`k%`79l2*j6O+pTbK`sM
%Aj?aG"A])l$6bhQ#D)b=MEXmM-@c_u1.MOmZ78+cJ-#b5Y:NO2l<%A\2/jDH0H(5D>$<(8aXTF*&V4U[T.t&[lP]0`?-q,)U*#cO
%9ti(eA-C.hg4MX;N&Jf5&#$&hiY^h'__\k2L3aO,U3^k+:cP+-:JBMt@MaSn'gl_LWjEMK3)Pe)4>@4s+s/$CidnAP]nPnHK]K(<
%e7e^q9J$sN^g,eYM:M-uYU\[^XIS84OK9i-7b\?V%J'^eC:O\EX9f,//]@9O@oBWgX96&_ocOs,:*O8!CGG;Z3%T2JasN2Eq)Hc_
%-R7N&Q.BJ9_n3a.5rFND%='po321@d&1Y>5L[L2A,#uI\'$MelEW`k6T[<3MX!r7#d`Ks`5\1?Xj]ZOP2#<r9q4(;=&3a:]dk%Nh
%*6;+=N2m.XaaG9jIHa%U=;221"*s1m1:'uu@&hhUjsZfN#`;*I<u2>)s/4hM<R$X_DBA.<fN)k,#R9tXm%b\!\Dct?f#D$:M\]d;
%6kaGTl>Ne>80CA"L36@Z:t3d\9"LR%9IKPAL0H?X%Jk1TbT%:GlrZ5)iVtS)hQ48Jj%@q;GD,qtDB*)7dA/;Ub1;hG&(,g`+ft*Q
%'[\t8J4RaJ)ZY"Gd'EN"J+^Nka=7VZVC`Z)n8>]\m`!nj/$!\m\V=bEb?O0cA1/k5&;f=(M.e%<",?i)>hH>F+Oj4[i\JuQ;?R]D
%5o4!XJlokq_7F3*+TX`i8-DJ6:aK0i+;Wm`eT;1=^nj.GU_f$dhfY)@Wa@=rjbN>O>.DZI<>3."fB-O&HLoi%f+mL00'l$*0aL@m
%N'gJDQpAIoGV3!@0"*pGEQlF@;5,k"ghd[P]F%bF>o;,USLrUF,rEe,FCC!3"J?CJ>^12JHXXf+UI(AM:29O0>1$7S\?O?u''M0E
%eQ>lKg;F+Kh8N[e=q#VHjZ8]P@L,7q-?0FlS0dNR@X:E#Kr;Tf\WIOm#\NU\_734#OI.f]Dim(LB%s#4W.3&^@pB%?6AQt/Jek/=
%d8.sO93Iu'`6=6t,&C/nlTI'(d'9[R$SBteh\U5G\itsK96.Y-#)0Lk;lWZNPVsu#`)rdc?JHae3h!268_jL0:0KT7"F\1d($-ej
%+fE]#60Dt2!Pg'>8"VAsRXi1,TBM0(1^kCof@7c;06TBIde^"J`;lL9RFb$K"kjTEp`q;7OK>"R<E*0>fYirm_VMS\Bh!+3ZIu/V
%':kZMe/8=m?DqL$8s#[i)j=t%/8R\g?W"?VV?7>uF06XI0^ZRI!W+>Fc"]ZWi+h3VKd7NQJV/1&<`hLlX]W_,l*8?D&=4=NOg&.i
%9Hmc=MlTHYSfeh=Fg@1>b1IJ$Zl9W`<"sO=0'l'<#u-S8(rF2K(F$E4=N@cU64seU-"Kd/^N^%?>WT=fq_s]OGGU0a:KBt6WZN5&
%#i'uUNA"h@:Vegi?VFB]2?^)4Zk`YrlUC)?iiYSI/2G])k"JhlYUtgF?kT[)k$b/$;?q#a#jgaM[K\2&-':7)Gn3n+Tmdc@b"?D,
%KL"K.>5oBO.Q+jcY@=r9A9Tm'$5+PO=f[RVJJKUFJW@&iHL7\D7[>=t3h#0@aYI1^<A@l"ZEdp&-\F-pf!%T5,l+f]>@tf`d%VD&
%B$%'i;r#n-ccnE^mQ.Bod,#B\kYEc(Y!YRK,TS2QfV5%>ftB'`/o%mHUD%\<+.]LAa(0o(bRXse-j(]4Wad\e<VnLJbVX=&>JjpY
%7b")5gr38<i+Vop<C;Y,g,KrM?kP]h9#qfXB.$017f*Y53u9W/ad<*.-X&BFl@DP"-4*<:,<%m^Adt#OTk._L:7C<57qF(H_E?\o
%9s@bTF_,??c!o[A=;5OAi\q^\JRi=Xi>Mb%Ouf]RW=k-1>j``gZ7l<1!%:t[KG$>%6Xq3d27;-F1!>C'n/8Bb0l!]X^h!3oO5Zno
%=gfqTkhSL[%8Ub:PN=(R-FNAD_9=14E\Y_(`Dq_OT&n$>lOQqbB@jN&7E#Ct:lN=,H<1f4#46BR,_j"_6UbBr,`-6`_m6Q<)"LE\
%``*XtN0c9#bm5C*#?]L)#`dMA>K@YK`7i-SPXIah9?#158cBC(.<0r2'foVlGR50Go$QWcq+\MVP=G0K2-eU9/`Fj90):Sc5C#!g
%=FPg%<ncl,\dSmG=$2><&>W__SE,&&W>)#l8i4T;O@Z3SXG3;^1m6\%><5`h.RS9B#_8_IPpQ/jbO#_MAfre0M7>=rN3Lj6c^K;_
%V@MV)&N<S-2n@S_4%YU&5t_];K$3khp(QjTAO(+<*`Z=dZt^k!B.EkU5u3;?SVdP+H'q3NOf,N*1]e_\`'leD&gZAaQAXA5TIrGg
%d;m2-)!Gm:CFpg;QSu6LE]8iXcU#dg1hZ2'IY*2/B2a0$I146e;Dt57cs+V*OBKKniEVX=!$m0)0(G-qT@-S)kg;8F+6A=\7jq-E
%U;-p2JSHkKI)T)#Lm]LE[)=[^S2C!uc.IV9._-m7#5^>*)MCtS;'HX1<-+&a]jqt\SME]g3R0+;,G-5NO\q$9XbcMf@A@BA;c1o%
%G'2AnQoL]-"B78/R!B)KSjT.fd8qp$%o:`[Wo2qm%Ngk:&rDmj%<46oC.%V:=;>pLE@DN!-\_HK?^5r[Cjne;._\#!$a@g8Bf&W8
%32!-_U;9Hb]Wa2Rr$hb(RFI&6@[^r!V!a.dL#rXFaZE`9imosc*D/o2/WoSl8Re[+Xa(p^:c6d_EI0BdE&2-SM+@AB8TnP.Y-7>r
%+bBSok`RbGMBr>&)$^1;+N'JF6j0RAgW_RNem5BM')M]-C7oiL^k.NgGP)V97[&"t`C0/"Dh@&T8N["<VTP)#j'S'D>q#>1Ze_GF
%&RJ#3#PT&1-I9ZF?q\3=:>5?IR#<<<gdjLj_NpZX$EM4hOa\X0[kPk=93reb.FPh<c@J$;5Qkc#>--KW'U)o77RVXR1ag#'dTj,9
%MHOi''hV4nkJSkdh)-nlPF$N1.AW+L#;J/%==T.T`)!Tq2,P7FqCq#i#)g:aBn\tS4%K<U`L&1Fce9\Z9Ka2X*We(hHi!(hMIq^B
%M6',c26^jAF$SDh9J;"[q&;m`cDi4PgNr0>D>q>LBkf:Pm1$!"X?dXL-?4R%CXMdCS?jZD=]8.m=En0VIaLQO<H")diK2E&%pO5)
%lkSg?9GT-')bAX<o'2VCd_tJRO4#:f9L6k>Qp_[Y.M^.IFcu^LN&Na8R\(22i4<^(<J+&6_afSW(6f<TP1W9<&tYJ]K>O55O*Eqp
%42_QVkIn:M<>%`5Pj/o@^,i5p2/'c?,t2Y?RT:+ZlNupliK#OU,M48dPCG0,1F=j'\qKmB(?LHm$<.0m3?EKuL0N&(g\$Phat0!O
%++bk'Teg+.8+G+:>7?[hn!LH`IW_f%I$HB@MF16"Y@MAL^Fha>1fK>p]66"[a:ZRgFOYhrZag4C_So*QD*4VLJU9\Y%*KF<;cS`t
%(Di:"f7Y9teMdYA$!VRM(R:5cKS8ND8P<k4]pAT(A-&5F?CK&D&6p4bqJm7N.,Dl'9;h[q5I*(!^/)VZ_hF7i"S`!U+`W<J,mV+&
%W>Y\8.FNjK=7hkKedDs=Bn4fkJ3#;SYQkZ!7'^cWLq0`:/\4O\h_;`78aMVa6Ls04,hul#`8#m9W@<s!9"%1\1nY(`aJ[-d6Ita-
%[+&N;<5WOo5TW*Hj<7;'G=A$ZYW'*)"BdG/OjGC3-"\C8Rm`fKbt=AVL%$=,T3X8cn`W=bi\2R.A8iZdQ4\nU"L_/a7Vr<s9&.CD
%;E4gE5^6@m.`,,3\&f':S4q&%OU<Mo`(4d1P_^A;:p_ta`3RcW650_U:?"+HY=b[!Q*ZGHMFHW[3s#qlF?OrD;BaL_JPBZZXbsS\
%So6'DAVZ-u7D,9kcP`gF7^ugVbSb(7c0ZZF_2ob`P4X\EHau/[8qnU,3pA'L9ejZj+9d#c]WR0CrWY8593)g<Mgi!'*H!EH^`_Rk
%=&!>*CX,*gh_r$6i)33t`MmS"6noau+u9T`aF@`6+eD<u6ba0tD94ESP.e;e+>qnLbqAEQ>Utqj.iIp)-(E_G/mWb%\3i@doa((4
%'&$D7/XXpu9rs"TO=M*<O@QM&nX<FDPa-d\I\Pn]:@^iJ>PQn#Y;eOeVFPte?q2Qu'PWGI@jhZSRT:p]dS:W(!l`Mu,jjgfPgYp"
%I4/il(h_>+)[QWTMiT_dga>sDgj(p/0H#e'622,1\VNibU=GW\8K1nM)k?-P<B8DEdFLfXK,S<h,!\Fq]63SJ:'?F,aPrBWIYumP
%J`QST\k\u1o1HZ(<_<s@b'quO&1"Y&p_t'lL2b\i1iJVcc_S+s(`cR[F9V#7M6#m@!32TC.4!#m`#oe%4R*anD(KDW3J`TP?1eV!
%i'NSt=8Fj$E$;[[<JbgL`[A$fZ]$)CHr37:Bh[SF?A>&_Yi+o;)=b(%*'2F<6H3^pRZ1L)01IQ()Y(_<VNgcIpei!l9-\R_jXS3E
%Od-P#bIpGPo!I.l-"a_sP+^1<R%ThM$pfP&K3]i7EsO$B%AkuepVh8%-0%n0*AM*:cHkVM'#`tTLkVii2G_c8Ig]'S"uQ$hdG/tA
%K_:`Z]bp($1r>QA@60qT9$@hf`j]p5YB_E[+e.h!h'&qiF,kL<+E8)N/8q'cIe_q.o10#]1s8.NbYcq8.[#Z6kR'!L=Vh5H6om7=
%FNu0=f*"=F`iR`0*][Z)M2HJ04&/_1Wi@%)pC949'Aom&ZR*k_Jb`!\M!?RI",J>GYT]aV$cKW8j/Z3GaF6K%l;_nh1OkWQWLteP
%`5pI[#u"(!1=QC>`6Ke0KKhp>6R8Z5+`l1k4OOe-2"XV%IXAA,emrUj+A*CY9:AFd`$DKCak!d"iqh27%`G=Fn5Rn]kh)4G`P:*L
%jrq#);*"saCSKcC!Nl74c5IaVffb>[%?mfD#QS>\!QmK65X`e"buI+t!<4,I@7^5+-GC+'+djUV6&YB@+pX*u5[Up!re5U\Jn8a@
%<MlcL=R\1.(s6/n/,E8(e:F!!AN1<qHiYCZ/B<Mj*`6Z\Q-:YF/:<kmiSkXfLbD/hXQA7$C`XX-!.]kc6`_<!c,euZ+05r/<erD'
%*r"%8`'pJC.Pe?&[RfE*MWTG`3Z%b[#$udnL/$+&.AiXI2#sb;%AUQai=."u5GZh2Kb9C;N5Z?a.f`5TY[;!rVBTn8GUQ09p8XSo
%D5+UjOa'BgHdN:aEu-W*/[8Gk7oGQZNP%(^_@n8F"adjP)&UprA@6GM6X8\5agPe17L<j=joGW14U,B,ccN]I[+S34Rph6.<YHh^
%>lnc2bYitGmO:`f?<(XcSD[jZ9tJihYa6hR?'nL+L!V;O=maCkGb>d7a49ulXL*)q7e,k:4GGo3kTlJ@&_?N/@Qk[L<#0Qui%3&i
%8H+f/d$d:2-s;P*T]U1.R\PV-BSq5&j.Bj5cgmsk]TA^s/cELSK#'i'DaLoaO9e,ck@HS;/p#lWMcfI=US=b'>KM3Nj<Y4"c>!G&
%he^;T+I*&D+@UglU4JDYcbsBe7]@3KaFQ=(XO/reW+>SXnf+n>N%qJ2hl2n,AVb+7Eg08IC30j%]$eQ)OXW7*QE"RrUh2@W2-5bk
%@^6d+'c].(H8gZio5Eo^\QK,@(!]HPO!Y$.I%lHL7_dW@(k^2NBITHV7>deBZ6<M8["\+(^/M(&;D_g?(KU3mA51V:N3@*co70W%
%-S1&k+dX_a"LlS4/5C9k%lSE4pfFe.-Q2m)b1`M9Q2Do6PmGm>@lIBDWLu_XW$P<H]MJnnJoQcc?rfmXHkg6F8H`lKq@kbpL(B?t
%MI7S_=cI4r<@L7ERB$ra<CERLg.CSe+d@3DUJ9tr#l)EdV3QDUFN@#gUWGtg_i7Zo9'YqSkq*+E9r]>sA/XT21(iFZG8h2'WR,,T
%1!'t\`6.EPl<k#m?fIA1NK.&?jqWQQbf48fO=!57,h5"VQ$=&R1]^(L+mH$&?;i-77Moc8Eu3)Nl.VmdS!`9f-$PoM>R&>YXCL.b
%]9S.)hq##-dnZ.O?cS^Ao<W0''o?`PTraH<V0!g*1UHHD1(/'t+MMWsYdG`W*UfmSGUP+0IoA,9KF)c2?HBG=cB`Gn:m*#U5Gl;]
%P0,'jd8ki2/^+a#@t3j]bbIeI<tXmQ!mZU#5e72Cfh%6`<+1P;#6XOu29m(O:\A(hW+OFk.%)>^^Q&j_O"Xo_i$<U5Uob"M[>AF@
%PkYiN.uZ;bHU6,6<B>[kg(6fq>;=tWr.0abRk2oI$bf$<PA.s:$Y]V1%;PdAL6fd0-Mo,8K=M#c$^E&p%2'mCPgEN6W1NiPoBHI6
%hiM4V=N22sPVp]'A]>\L>_?&[6,cM.?D?&].en#7'f'ee7WCkq?f6/_r)O!d17aXTDjLJs/5JfX]P.U\fP$o<=Q7V,Z$B-VIGm5I
%H.Y%nJ'jM_:!(aR:oH3aOLtEM*4KD&e-d_anq?-gaG#\+_'++_7X)h"3@hEbYXDl;6_]Ib/@q-S`u<r2AEk'JiKBckhlN-G2^o@G
%]^ql#?7Aa(iC#o-8Q=$+jfOLMks\F@:<DhJdje2@`U#:f5")J.O<1[$e,a4"nas>7][)>uJJ`);P]3,Zi,Hr(6H2\:]RdISSQ(#f
%7D7u?_X-JiVM2e=i_#qPe[j*Aj)C!J9WB#8:e-4o(61%/0P&gZ9i.PNR8>ES<!-sZ@jFN#=#"1OI?URO)09?VN%:3V0CL\GNDsA(
%+;co(HrGb&F>90RM:.k$8XFC$M0Hfq=%kU&N;>*h,]lKeLV_nR?)N!ZYmCpaK"%C,/#A4n:?ML0'._E0)U&>cc:RubTZV@X[=Vas
%g^eit8mA$mG(h+72i2mZ;knKW,Ej5_f"fkD8Z$+)ohnkOhFRMdWp!&=E#'K+bYeSG#Z.s6E2N/n)*V)ge(jTff(Ba!eG#]E8*28;
%4QZqOEd."AZ=6UrJ-]%@G[9<G6maNU/&p].Uac@!_n@L-H59+jH&A`32>cDCh7V]l;HQdt7j,.KW@Q\ciY(WmTRho%lb!_6Q8,:.
%\>2lR!W_lZQpd:*VXRd(&A&ID$.)tA67@--AEIDBFMTT\/#H,5Rp*IWM3Ai0UH!e4aXrkb'L7[G=;'j?B2'KXd#]gS1p99RRWoP-
%]ei=1TeSZi<1YEH_c7V8$%moe195phl(B&+3.=Gbi)\tPY=&F&?/hYa<S#D%(33A2Q^#MJcr]16$?!r-Lr%2.(q3WZYeiEc=ma9f
%N3C6q.I-U?!nrWkD;lk(TS"MK1>fCV71chJ']DZ;'L:@2DU/;FM;0'W-:)ZZKQX;WBJO\A,ju*J3D-=3LcFBkZW_Z4Fai8cQk6G+
%9_(Yl\E5)SEfAj#j[.!,.$JX%Ra12mTt:_qn?n=t_^b@tfa#_KaWsi?p"`H\?Mr_RhLTD?@8(`8S_,.2@=:MsU_D!]302?<B@TF*
%TPSl8WJa:#ETZ3R9C#2+LOr3Ijp#FXm*n%P+pXFEPo=_.3KAIGdTkPoOc(O8;$EAOYg__ZkEnUZWl^]>cL1qY`M(*Ybr9:$cVbL]
%gLho-)^X5MjtJaAn7i)I<#2'hlluU?DA@qs?_5dSir&AK0s"T,q2f@R2G`WI-s(XRk`8-sCtRhl66YFIg#Y4s0e9ZhTLN/lElDFQ
%B+:>RF?.PNL%hS1nmYho)I8@??K)L>R*HP'/C$K6H("/`--XJ6"i\-I`[s^K3*lB8/SB/oS8V6I=cKW/"'U`-H8-;CS=f'^=AE#f
%K3+'kaHA8_3IZht:`ES`;-]m6b$ijn2%3SI%Za?;%YN/%^N9qf<F-F3n"au+a>M^sE6;%u-tsA72d`e?=n0uijk.R#H"98Qj(;Y`
%9Yi3BI1Y@o"LNj(/YUrTr>\X/d^*CX84A-'lgG:/2A58m)6J"$7eoMF?sp3Rb6CdFZcS\??5u\RS;6<NF##aO$Um&7"&+_r`iM^D
%`pVkL,4lJ`P2ikMSd/Pq)c"G@jCk'9d#d<oCJ\r+jE"<+YlVs4d_HaRH0"/oX1E.ejF*=tfM3Z(Z<bm`#o\t0+@KV$)r1=d20tc^
%c8m,#'NZ25,iV_Td)Z;HmpHa432]GRpr?e''M'qE]OBo%4\ZlS*9V8rd1&R*,84@U)]!_NCA3`47nj`/c;<T'BL9>f#":.RJia\a
%%Z)Gb2!+R.RddjrO[DfqO.jWtm%r"nYDGDc6R(u&`mI*5<ZfIDj@DZfHFA#)3OTRuQ8-JJ;!&&S5$O9-RQq?3SZi;@LP_g@(-GCN
%\=I)6C<u69BlL<Z.=E2DYK:dl;!ZufgTb1Jj1n?DP+fqZ,$5a2O!B@HZ%!_^Gh#u&c5eRo1c+6RH]%V'4'jbB<3bH`R*]SZe8YI^
%Ubp+13aU&"B?]n?HsUHG6X[^P_#oB=85b>13,Sn./J4QtR^=?AH/j"'"AOH$WOAi(emRMlolGLt@,p`E0lOm1is8fZ.AO:N`RVOC
%NFtn)1X^MK1R*O3OV1hScua6Hi=j>LU?S"U%eL:2?_N^(#b"WYh8mOcR.?u1EB9kqbVR6k1Co:BO;21D7mk!@",t-i.9TNj(Pd$$
%6MUg=*pZ@^Oq8Gcll7X,96V@6>E)=3DSZ2@%9a`s5dNFbq7"/_LgO/ui_TfgL2ON\L6?PX3.7`&;s7?Eesqg@W&W'r,l/EX*5BN=
%UQNDrc>b<mLuRp=E;5fb)-U<.RH03/al+gH*$-2&^bM:&(2_/ric#/YP%B7Y05:]1DE.'!9brMMS<XRJ0]GM5C/,@r!9[mJLdN;P
%Ji,n8nJ"DXh$h7fGA3R+K(onY!TKCRlMU-\(/Mi'QQdSD>C(P!_INi]#G8XY!M%0NU'2,fk]#[kO;FqXE1AArBr'[+ig79iKY\,<
%?'RCJi;dj/P$lZ+P1=?V@>7-aq^7$=+UEt:TTKt)PAK1[(J]u`</<NGP*Pi]Y],\oKIjB?Ku7?C>;oN+2CPel_K.F/r#-9@/RHIW
%iUFhni)_YlanF^',oiTZ"9oej4DVU@1W#@'j#;e`ADo1r#Y1$2Y1jHniN-4`&J5*V*g(:QjElKmO`HFV#KPG<EuiAD)"3t#L'EE)
%WA:_Pal"#h?$!.h$kApq[-A+]"*fEsdCuXqo%m9\X#f-33:Wd_AVXpBh8GGM`@=n^E1ZUB5_<(\@2'jZUjg35%pUo4#7c,ZT:"*C
%-Zqdp@Gm?"'*enm;Qu(A^nHL:)]Wg5PEO(b)">c7]b8pMM4[q`aVtN\9V]'"g^=43dVN&VJ9Q/"C^K$*h2qmAk5f8C^[[HV(Rs5E
%C1Oro^Nl7,A&Q@5,pN*gqHFD\:B%DZ=$OLX0%b-X?#&$\Y/Us(H.*ZLg(;>B(:Ef2AZAQgnp:XC`,?G1n2kseX7<o@=Di*8SRDQp
%aCsHjCb[-Z@,DXbSkAYs!OQN-_SlZO/Nee.#OHeH3,P+&^qM1*0c?RW[-qYsq^HnrESmELa<nR9I7$`.$3lTb2'm*!loQ+OI)Gg#
%R@R(c6[a1D\.U3D3CM=_3k>@g7aBCl<:<).K\!Fec8Te/"cBYFHp`OL@ukWD-dqfBg`j""Fd#XP%H]_a4">f/ZHV6P"c]s\A4eP?
%I`qMH8o/IbGD_QTiIl,#AeP-N#(.YsL!aPQpJ+R+jG*C5:L1h#f6$Ip[0R60*OT"VZb7NTEkObc7s.QFfc/lPeY4'$@9h;O[c)O"
%Q]qbPL!hYnI[9sg&!G/m3Zi4<hC^[a2^1/I@Vnq[4t"n77TKX00iD[c]N@`=Z(1$;.sT"b&A=91(_,\g3!n`.)p]HDcled>k"/bV
%*!XYLF^7*<k3ZT&CR-p=kdZ-\arB"WAAfF^)dk"9GD#JKq'<)<eT_H+Mfli?jZTDsnh+3"og\MdV2,X^*=J(j#hL>?.C_2FO>fQ)
%R'pZRDoO^kO((KI`n]Z$F-8I7'R$@9]^ajTB\T!:9dp_aN5mNFSMXt27DO<+)K1_M1#.G]ia8cbfL8*_r&cJ]H<S/SRfq>(a;_CS
%d9q]<4D"RnOrW-Ung5Q5R4AL4Am?`)7gAN2+K6fYHkh/>YqV^`jNSL;N]5&fMi,4*EkE8m6a3h9]GXX(pN^_jGtCj-q$PK($j*<,
%)TS=E[tNWg`u?a#6AaK:]G\(0E+\3V#GRNP7\Lf?$rEW/D`HS^erFTT]HJCK_D0oaR`bR5`]F=*TB-o.`(Pq#dkKX;I&<`e_srI`
%@%YI/Aum!Je&q3XJ7F$1o&_m!<b!7j8mn<2O>eFAp2<7RkSRa_`plOr3R\/&jNRr[\l.-&DcU8SBdM=3R)R!6W?cCa3CoZGPIt=i
%UUf#BhRuJ,Y&h6Q>Z&XmXt\_G=D#$?]QmL-"6,;`HFSOqmY2rFJiCr"1c$)h)a.W6g(r\-,UcCp@sIa@Cf<]G'7[+IF!l4MmRl!D
%&\J^?,>$`!n7In[Op[\2hi/iKb[EDW2ZuH<<I-U<QPK!Qi8$'o(@eNr^dP4JK.dYhbl[EeBjILGg$P`p'QK")=ouq$h8fZ#,p$pN
%h*"=nS>%'5dh=F<Ek>I-^<./mgC7jpei)n6BLY\A!psS?H%l,TZTBj[,"S/k()&G3X[0R1QRUpm):38Pm3Sl/bMm]`;CE8OGV"A<
%E6[9*]-3KQE+O2kJ9!fmm&%R3hh0TV0f-+og!*l3GlhK!6UH=qQIu_r2DldnFu+Q!O99!9UJ&`h?8K3]1W$qDK6AII6bm@>mH-d!
%N70YlS)U<-<+>%s9`oKsg<Ba1.NKIC2q)F[pap5IdgR_$G#KSr2:p>q#1^"IPYo%q,)Z.[_ffPeP!G0>[TgUbnZ.E3k(Q7gU0<I]
%>tJ7@2jGI6F/e5<O2j+s2[!:RgOn5iW<B@R\!mGrg_dMi&ud=g#'\P7-[>2mYZ8lZ1N58^='Y2Pi,0U:(rBb?DFh(CU(lBWM#\CD
%k\^tga@O_7CePIf"l0W=<8cE%]34!Fd1qE(Q@jh,]G3T[#3^N/];>L:eZts5_3@n80Q]8"3<n1Yk\c-IlafH(2^?g`MC?$)&t',C
%E]:u&S1A%aC_EK.i,8Ok5TeS8D@-0#P"_p27lV3jBRlm3=>^$ngeI`E8H)6L`a^6o_9(MB(=AB!<JV<I,Ed!#%0rGHq_N9%QqFC,
%:7U)[]HE2c]>`-[dK"L?37A=[14F?0Wb?GXm\[9<^32U-@e4.<mtTVW",(4J>5]\9S0T8Di,7QBJi]A+\=8dq.F+XFD@AL.6lk&'
%MA8upK=dO0`lK8)GI&Kh`&0!RS#S]R)Jm4F'N8!gE48B81;M_T:CX?<"W$7BEZ1J'%9K?9(E0hG&/W4KMP^i7]1AOML>5LC@:iF1
%D*pYTNSFu"K\^Rfh%81@JJuCZR^<9QPIj7MVq[ZqN?=Fk@n,m@O&V&[$LWXAd1D.egJ+"_;m_M<%EJY';+#A6rA-[n5^1-(-k9^O
%Jts\!A.%b-g!Z,9ghoY1[<uu_JO#ks9'rd,KX-Xp5uiDq1V9\>9m0Z>f%$)=c-l5i?t%!O!a.I]Fe,rq<+7LrJ@F`E78'DEFDd6h
%m^-jJChVWlWjM1sGCF1D"-4`WChm'q/"6FqQO.Nc6/D6[KB[QQ5e:1M86UXfK>\AFd2(,(@_$M;ks'lYS**?fF@.1)$J0fGHqt`_
%$KstFbQ0F^pH7]ehr)&7Pts1s2^gX`/5kH^@(lmXFNrqpNB)pqNqO=tBLPlUG72Qs>_BR1jKp`r2[!9i'^-rq6.s?8K?E#I&bnj<
%.0qa%)&e_Y!eqS1R+t\a(.WD_`_%/[+h=)eiY@Rpa?&>#%EMhWK!OpV!GQ,b_Zn.UWFF'h.Y-tB[,,3GMa5L$)]!Y*PC]I<@J?&0
%D9Bk;(AS0Qc-TE*q,7b^SFBtk:^f:S/dj^X.,6?chYVhB=%e6*"ugFU)+PVK2fB(^V@g?.W4<f`J/\P>p1sZ9!<O:Vc)f(C#(:jS
%c@Bh[%;00h2fiFGB\QUD%=&nk9$)-Tn938q&WY>3X]4Ee]004)\bF:YS.m!TNGuha[`E=F74eOtCJ)#lE@#MK(@&1+DU6>t2W-LA
%3p7_DhDVn'gbq(#m67Mcd:h8oGLN+cY\jEQ@;QOSU:.nYYr^B.@%5\kZf,_Ej%gP))eW&M=X5;HnbZM*E+$*tQ8=U?ob]2Y<g[`q
%YRI-eMEE+'MmP.TCdZXF,.j\U"0Ul?D(s_sB4^fkb]_;>DD93k%RqEV)p%a$8Kq=XZHX?K6T3"D&I>]dYt+3j'MeAX+PUELbfVH&
%Wfk3`[;R2BI&kI#;91YN#Q9>\fqq/>_/%+M.tq.[`4-9t;+b.%AG`gtoYS#9*ttqSo-7sY)osqV%)aj@[[8@>)b=h7)l<&E)R<(a
%(aGLYZAmJ;^S-a+cnIIf2N2K8"3J24`qDA7)e3*LHImHU_[7A@Wn83DPctD3c(igRhlV0'ff%..L.!`#MV)Ni/_?6s@N.Iq#WkCi
%@i,Ogb7NFT#ULa6K@h7AY=DT#]^k-%Li'tSbi0idM!^I0&_jDV9Lk]u[NT(4gP2q,>R&O:7bA3hT.>%LfEd9Ik-D<:Ch!T@+I!JH
%)."^?_FiJ#CR333%:L3dHA&16@N.mSK"9K\oIa.6[X;r1a'!B^*Z:W&8+gfb*/\d^g!I-@5N6EqG\u/q(o1SbD+_rF]!b.fI$8!<
%Cl91mL=bR+8jVGo?<^*tPMD&VhbB<e)P+(fBB,Yg!8GRAU7oa)g2iGk[,\Q^>ndI;4m:UuoHV(JmR.<^V74Uog.a@H2dgJ.\S<$a
%]31H/@C;TLU,>pi7jFu:YND-_Y[M$VK3633G(\:^>%Gj6g9"Kb\H9/>A>9TI`R@:JTNP42l"4Pka/!;]]JWO2`1XB4B`j2]?A6e6
%CGP40_R'VH'2S9dBihM&UEj]`ZbgBWo?hG(g16m*>FWGC$s-D["k,ofNB@MR@PG/$6p]k-+gg2]Us[-eg=]s/2?7SLk.63hdang%
%!`rsNBBLTr;-SE+6G4Wt=R"KElt>mu_6^J%6>Y<-#YuY0`R*9hn##hN`=H5:Hiojtr+)L+-oJUB1rtd33*%cWG!jK.<&26G!?Z;^
%1sHp1)Ne-RITb^:MrpWk/\>]pjjht=gYAO/^#5'9Z?bBda]Cd]#^rD1F2Q*h-_q09@^:oW<]<W/'$R0(eJaTVN)!fCCn(Mm['8oY
%ESukQTf"#53t:R$7`[3J6Yis+7C2KlJ8D1^XPdoBCtp(%\Da\)Ou3o(ZD(iQ46@D#],.N_W,1g,2%Y#W`^Z%HUNd6-%3?i*)+MUm
%1,G>+*mr;bECRsemco=A/2dY)Es%=p#7E7)L;c%mLf:PjQq#Qb#)YQ&X+m<Elu&=l@q'Yg]W[IME:F27V7IJY:^n2<c(e4c.T6G+
%9egK+L;XR4'5OtJC78:N0H2>s`1<+q@q(Y:7F$]DZ%LZ:feB[4/LhGR'&d:;'KZFl!8KoG#o_d71FP0[hc[cj;IZ4'Ln&BKZ)K?R
%i@lZ<S^-$Y%#]O<di<PK*uKnFQ"/7Z^k7O#3tW4Q`!0n*"dfaU%1OO1,C;gK_')4]Pl\-5LmiNU*]C`&0A-Pbc.$10erkdD'kqND
%CU%++EeB'?+@]hOWEfc4-c+(t_d7WXei7K;.e5]8fK@S*\A2M)1oFNGm3#T]W%*%2KjjT8;B@B*.d'r-CMpm9Y"E24;^1;LAm$]_
%'5lATCo4F-WF:KhZfd=E9,33KOpqg=h\8hE_6>Xg=e<H<f[.C=,jVO?fFU^?B7jV[Jl&p$LLF+m=2ab]#oF!iWKkK?#3%sa.gl]R
%=7F1G=P18F/qAhr%UNVa:tSHkiKCiC@8iW&R"bUd+Q7(2-u:Mk9YoDTYc3X$pKC<86.4MYKFNc+2/H+A4@c^rQEdXrErqPY.a)+*
%6(-aB'K-KQ1"Uun`aMs^?OVW?DIsY2>GJE:L`u6*:tRm58_FW.@1u+sFh:osq%:dm8MUXj-B)j16:$eo*0%J:JRL@sKsipo@8i7%
%I9i[/?4eCU)MJXpWP/L(@3]5Mb&eL.)qW.ugRtdm[\W`;:tYEHnnsG+%@o\bg">R!RPh.eYJ^&\V,ih6NAIJkU(%Eueneap.g[.U
%W>l$LKafPcf[i#0CuIkV3)J7d?'GYp-u;MCM7,]Y90?l\",/<\1"))_("OfpH8d6gg>n6PhO.O]oTWl7Cn<tIotEn(Mkb;b",4u@
%#f/i)fW^8_6=c(mL0/q):tW.Iaiu7ARhFGB2CNBt"gt9WCgJJb6rDTQ4=JU&TWi\q'%DoG7M02kCJduU]3MS6@B[V,_o>K._8[nT
%1dO]P_&A)gPGT0&rPE721;dP(,\nCn&/u+K7m[M.:`QnQh^o:!.+:RNj$3u[7"^&pl,V9d-mR`8d]TUF/-><NnsC^CCq:f:)f3d8
%Q8!]7,KeRglK9r52Qu)%GltpL(i'fu2A!=L9!i\ofH"AoR^Gia!+?P73meD=+Da*2#g=t62Wpf')lu[IAPl0\KFL5DA(O9([$2/!
%Z6<Z*c9u>uTs,u.*DTG`'M&qV)MQGF5X2iRYj$b+HIn%kL,hP?>;msH,/ge8TI&P%cJbW(FQAZ!29C$"_Ii.+ZjIXT(8;tdNJ1*u
%$Z!Or=P+1Kj6eI79),]NKhVlk.lT"q[`A^u@q!gl_^aoj_PWl9C,\uAe:==F"ArYJc=+*j'K3W?!kVR0Y_Uk-f\HIPm/r'ek;K5a
%",.2hN&a766R&40L;N(1%,'@-YUS]b1DI:E%HfEIfSkBGZ7P=K5K7kAb4\T9?WUBB*/71K:fPtk^p%Mka-,U>D!!W3I*rk`co=Si
%h86CAlj>7W[tkXVUUji#_B)U/IBi("Q7M-k]QFSV&^D>Cnl%R&Ej-4LF#\1K2I8<m83$jcC6?%Y"M:\e`>R<./^fZpSs=B%-",&6
%FEEDJ-M@uLok[!7K>4!lj]d4/R)R@bSi*-PbJ$I&*$_nVIEh:[U7nb&i'M5SL4!h\@OGM-k_tFj_5*j'#&h$'&.3,MZ.JJ-:%NmA
%dtcK&%H_f_Hm)!d6dW5#Xq3pmUoWI&i9//oa8&5Uf-k[VXDkqpDJ//jmi!VnAG-r0g&P*4]1uBLHpbM8^_]ZS`k#d#1R&G<?%Ypq
%K6*T@Bq:-l:0,3a.+e*-:%Jh82*BpY(fSF3nfCn6gDJO6R3rrl22(Vo)W<_[W1jm,i=09[mg\1nks%<@]J[>?E[oG0KHqMf0AjRI
%F'"mCZ)q^sltN,pX+d9caO]htjV?Ac;)1Q)):f^k+*a+kWcci*JO?R04VFcSBoRj]pY-gm&Sf].%POUk,i?R)JCXuKj8e!)XAS&?
%A);1U#d`K=Bf'W#_Ps,E@+IH99p1-]'6F?IauIuI^`l/cN&;*).O;s$LIb*:@p%c,XE1^V=Mo[L.3;/,c5MUS"Dbp\7P,lJ!7pA;
%5dQ__boiH!G'f[m(`pNqXD<3kB$<9JRXklMge.4P1=Td!.gER';J((j\_9=M#-P,K,i!@>=W/[0fn3qcOia`Tl=?]B%CI*/Vq_mo
%=q-3Aq2*+m/rC@s+KNVc_9#-&e\s4M#-<OZ-DN/r)H(2*)m1)%)d<3!<fLGoNj"IQp5$]/=Og74Lo*%/2;RIT6.KqBd,&E*C1)WQ
%kmUL]1dl"MWD6d4;'FK26kQ;q19/HV@hdUb;=0Sq6W?DqgS27^+^d:QL/=GB,_,oq!VGDU@!l_PZZ#?_8?%fk92.aiA_aKm:*$B1
%h@5r8>1fLAWSnUFHC5IgX?oA3E2heHk*BF\C'[oC6*SkdC8GgHe;G@j+9I<rB,b4#Ub5oeDBc%f=322>)B/oEcj$;cpnl)P_kSj*
%opbNnYJam"%V_b:_cfLHqM%Jql&6'A%\q<Q#MrV59i>G=TW"45[*Nd4&8st`?/%Wo)Df"e:sV7VW>&R*6k>S.Vbk]-0AhFZK?:u6
%)9/>@oc.WJC9u"=i(n.4QK+m4'qA+sFL6/%/Ub3&2T^JFCJ^k6Vs/63Kq>0:`UYf>\TQ)9mPMpRd+#bFSOPLW=VQU]`o,D]N(b.m
%LiOCPd-7@KPqf23BaKNaAgY9u[[fC;N5$jQVpqV`*\(>p?>'!&^9kiO)E4eWl:.6qZo*L;S"?!3OQ-f&1i7E;<+)qEQtI_BemQr8
%8=`H6nQ?9F[0rBO!JscM1tqS=L&Hck'OYVjT'D1kS^k44Y\@Ub3GZ2o`MIKLe$)=JN`/NuJ;$OZBa%3IbCeViVL]/L*b1ROYX$/&
%Wg%3'RU._/7jY/I>T)"0r%b"i&CYTb>(NC[\l103=RG_dIH??di+Nh+2YWs+V<=L",8HC">N10+pE0Zs/R',kk(spZ\m&ka6V@Nf
%bM8Kp=h4j?/88L+Un`c`:bT^ncmQ?>9$agZdPe3!XI18-M[%mfCkW<t\gdKmV,d+_SLNrX%8toU:6^M)T!^tG'90e<Stn;-B`o-.
%Kh/%]:hm)YUrUM59\Q;fOsUOJcN>KLN6\^P8L))5)daL&<@]!8AfPLjX9.ESPI5/q7ZhR(6tOI'<n*\O@7Z%?,t41)+['$E#9ucL
%*]Y@r):ETRZm8"0;ip8e8CLZ^apimnCq)%X8'b?QcM5eg5@;SCHo.4Xi\X__1dXk"o2Krk@S$;G2sb5@P8QEMoLldUPT2h:Xa1A8
%7^eTsR;JNd.&Cej)i`ApWk!RTUFD1:5bn.g3BAr70Q,n'2TY*rY*Xt[NdP_2OVJ_X"N4D[n=i3:UCGIed>0B9";Rb%oBD!O!u=$M
%o%$XbY_c#9ZBCr%6`$Y3.,#6kcABP80t#Ued61&4neMmu3QU8IUI9<!"YrX@\tQrrT$9K9M!/!s@uc2MeR?XV7e!Q'W0Il&=rSN[
%;kI8pGiOMgNT^MN5tq])H=*A>)-5Yk%5KbF=N%a"(`K"Qdo7rAS#i(:)@I##fW;(E!iDJ%!+o&@38)C!gb>F;OdnUJ6K=S1m\iFF
%?*L"h&#j$3X0SLj8W;\LnDl$N6DM8G'Mm:i%2-9f#_NJT]7dG,U!V_='n)JAa5PeflQAOS5S_i93deb'PsLCN+>aRH710iNhEaD\
%EJ&lJ'UOnaUHsOl,c(PV#2K\]^4JXP%InHS1f&BK$l1\)Z74Tp5uWaN@?@/LAF(RTSt0Z/!J8<OS%'A`k#kX$*!6WN8aRH(1cSbl
%k\:fF,$B41&EoUPd>K)OpNfXAoEV^nQhGp:r:cD)94.\`ns-XO6%Rt;hn?c%_fDO(bIp)dVXdMYs0V^Hl>Jl_amZt*hp(_9T3f3Z
%o8U6PZi@\N4LmG"F]<kid<,$&7mEE%56(&GT=j:cDirDqdD%>aqX6lHh,-B4mEpF^hs'@Tntj\4psDm//UQB\fc97+/g-R-4B`Lm
%'cu6H:/Y6XGk:SiL&1I8]rU$Ds.V*33db5Q;C.5Oc'9QKQ?jk_Bj%X+ZN:'0bl$2j#?[9'm4S-rd!VX%BA>>.4qY\h.70Ui(EoNh
%QIUB;'<3$OF[a$C'O<B;bA>cGqJoAJ2D)i5kgo2Uhu6dtJ8_IZDj%Vd/mJnH+MZ<$LdrL8]E+C2]Ul^_nNH7ZgJ7e^dqDS??VO[Q
%!e-Y#"d(V)8V@]1-\[LeOWU.!i_p\,@316;_6,1F;\l4bDmCp<,<*@gIF7+89:NTGfm^3FWf8BB?[(A55;A[.Vlm4t_YeRcnd&f%
%?H'#%5sfkepB-p#Ka_%E(3C?nH')tKZ1+6%2W:Y>Uf<.(VU7Y2L67<se8#m!ZCA(en4"eVrS+c/@;g.?>,:&[hMj-8/F2c;\#jn6
%O,O,EqDVA6rIOOq;9k!&A!?Y''-oI6<TIG0]bp"Sg@0-4,$Xb$J'Ns9?#7qCHXDG?[V&+r`1=C2@Wg9+-7P?n;t@PTA$`,(6"n:k
%Y?@c2Lu%Kf\ul=:Ecbs3lW;Q?@.AD$JeR#<S")(A&D0?Q:-puH9$Z;>Q?9Qj+A/hD]Gs_TJ`olZJ-)i9nH!dmf%,'$r"ga!%f6()
%;i\<_fs&Ct=+5(5+"H=sOZUSWa,$03]oS*u8k1s&2KBm\WCM0h_2Hk',fX"?69$%^imaZ&/96Dbb]t`_/^JTg=j,t@FYW2VD[$QC
%]ZNWihOQkjm\R'uC52/#@Ib7/^*pM^b,Y)%<Yct+WNZRIA/I`2Ul&t6E\4qJa!PG8W=3\nO*VUeIkjk5d;nEPXm^T5RsrhEL1=Et
%_SqQ6o%q9!GcNN&)Zd[aHTEtF?EohN+ihMk<7b?8P0*+_TXMsCo-k.=NFp2!e0NsE=171n!pBB\:OU*jn^uo>$MoEK94c1_Znm/_
%i#M\&F+#Z7*kT[mYilrp,-4q=-GhBX[`h(M)4JbWCS@_*J;mM%:u[?(:,m8:A9rg/RWpUE6BAJ/"/$C_CoG19dqZ`=]bk[eYPsC]
%l,)KfRYhU<f(Df%AWh5BmX=ic*m$)/<*Q]C0VUs=JBiZ-4hOn1i[N)0k5)SNjFii]CU/p!-B!DuT^"jud)biVGe;&7EoaTn_eP8E
%k-+>TXl\8g#tm7hoA8'-]sKM`.[O3]o=c;@PO/AO:)FT*i9NNm?<"EcY::7(W*S/i>rspW2N`P@X[[+!`iZ?Z$/6MqKQ6i<_*$kb
%F(t(jdllC]q]:T"SGQn7@A@uf`L!tOG;*p;Ljb84KqmgbM&?::g7llD.eu&uM,'eM_](hn3l7Cg?Zo*,\gPEsr8MUOnq;qi\q??M
%#<.F[rWZ$f=C.3I*08[b]\7m++H<D20Ptr\ZNX3iHKA++R$5bL4+HdFr>$4"97M&/39+UgImpQe?#QV"SK6V:c?`K,^$3/$@,:HT
%Z)]_$A4m,:X$l/,WXU/QI4Q54$,WU%CdFR<*B:$B>:&TOGFWt`/ZH/1,ZmeLG&d&O]4gg`][;<'eEu(I0T:_B\&huQ=;67%B8Ys9
%[%h%[gU*/sSB=2U<@ZW8*=k/"*=92m_=*E*;ch#$$@1V$aX0cQ70eKME-9)=_Du?q;DohainINm]8bHS1SV)Vdhp*6DqroiXOL^[
%=GG,_cSP<'.PCX_,#$hb&T1PtoY,l&k)V==CcY1jrjI_J@iY@&1L=2(7"9'^Mjpnc\\%?#-e95MGGU44Rr=sJRWVQpdC6kN=B?iu
%X1BR%M6OtL#26X;O*H`>C/):Qo0duh/\G1KICb0/mF=LB?E*$bd8c7LT/ng+gg!s&1Z;Me$)(N%MCUb3\74?24hC5+G.G<E7gtuT
%<TcuVfNd\&h1K4jgMD)]q7sVKrg>(q?*grK]M."N:prf#aR8:66,,1WR!Ub=l`@!dPRL)DYB#c#YpLoXE9bh'Cr'.EUnsu^(T[*;
%f6qMEA[Ro^1YI1b+K"h/YdS9U/4Uo=?Gj-bU$,oCq=,*no2u84GSf3<.7+`WQ<-]`rF&:C@^B@aN*$F&asLr)_'-7uXDX^ZCESF6
%K#k<doL'Nq6VV<'UN!C-l5$hsiRl,b##f>Z%$>Rg1*o728FCf=j3<e3D\!mREaeMYK.\E+#9<X6^%g/YZT_0N:sdT:o+CFoc&k:M
%Z11S3`+/(d@dg\V4r;ZFXsG((o"K.ac(/]uEkGTP=t4Cq8?9'!SJ7f4e81\4d<$F.e@Osr(bg6Cns)><:6s*rLHsRlkJIV""sW.&
%<(ZVV*B>XQ@e=ZcLm'9,FY(XnNn+-*Ye#V#\V3OTORBFhb=])CcopY&Z[=[c4]:<fr@#M3TmPC@^YNUap(Zj%)o]n!O/Df>I9;4H
%pQenSOgU_<H7&:E"pcK`L$OJ/oYkgY-Wu?\g,Rm?>AL+Ze4g=b-O7&ji5aD])sa^-;XJK&E3*>HSGI!;7-nj$7ql)=i'm7CpQMA5
%L-")EM!qqX'kSO[j"(i&8pL(D*7msbEiZ6*S+gsDbC.E/'"n[PgZC1I>@';1n!q*2F-3ID)O0Q##i"u-GqgYH-8Up_MM4rO.//BK
%rit[ES&]5[[O"#]\gu[LJb?]&I@uOD>hrW4h$8[44$M?V57`/Ma2:eSW3Hr\GePuO'XPrp,LJE%eM6`ghG'\W:OMpP8WB'DS#]c<
%B%ncFfo5*Xgd$_1N<>s@]!.@_\l2[ce<ml@GaLZ^T2mOF<?0ubR&qHA[Y+-e9BrYB]2dI!f;EfZl<9ajR8Bg@7n<d1Kt?!uLV,RZ
%^-Tq_3E^NG5O'Z'&d!+:[JCbVHRG:-dVQtFaUQq('2fAh[dWp"eT0j&X[[]e@i:3`%B/,IlaU^,/\#L"ap5SAZ7k5i*T,>+rra`3
%<RuDSFgs,NeXo+Vc"pYcVPb,n:L.9OK^,7E!#"Fh4'VF!L.ZGHqI*V"boCa]C,0k]Se-L]<8SgmO+Y+\GORG5%,PmTIh[1>fo8P?
%l\PBamTsb:-o3D'CWDr)ac[0CFk^>EpJHKZ(Obmsmil!0rH%8X7]ChdK>)HjXnc7(KQ8qU<>rYj(G8bk7M\q+#YVWQEuDI;KZt5.
%jlXcg$Fq&mZ6[JK0WW3[74/[Ul=2-3dqBo6W:s?b*)VJ#?&P$)fo'tXc'?J&-[RFq8?1POOmTRA6`gXF(:=>inCd5KfrVajFfiF7
%Yl?%(\'9Y&*c<dP:9)jHM4/p1ElKZ1>ZU/nX#EmXeTcGQAcL0%'Md+$L,gP9(FRt/.r,V;<0N_KVc^53BiN[Rj@?;QZ(07JmMkp]
%\#>YqHM\c7F40tjEU@NCj1s"%=Z%c4M1],>RV7F$DqR;F;"qh2G*?fDo`N'AC8!,T[r5\;]Wgsb&h89;nl5QQXI`XqM.-!QL*cD<
%qW-p:1X-ek2PR2-[Yc2e`[r:fVr.IF]BZ:f)mENPWcE-*1#\*e=TA4S$["h&gL)`=Pip_d>Ag8O,5,#io+7qm9,rP$`g#d]f$(cm
%@C;"nHbAA[r:VhpZJ"$Wm)4b6bV@oTbq]h7hrDfW(ZC%O>nKgi1ar)SMV8*`K%n#?q#50eJ_S))fH,Ie$g+T\q5[u]/UCFi>*W(W
%\)7&UMn9oK>;CF2G)WLOR77Im)?[7#LfXbsB(l5$7\E/&KDBkLSHM?'Mkb"cFkt=Te1E2pm2PObJS^TTFn+Tm^2S?*BdG^3BtZ\s
%LBh+=0>*#"/a,cf_JU/Kfn+,!_i*'7)@$?kJ;mXlB3Kt>MC\s='[:Al4F0;!q>RgsS'NEa9@0W0q*q,<DI@m2_8BWImH+(#l"a:R
%YmRC@bC^g^&3OfE`3L<%nQpRN[:E<62D6s_@SYp4\U>"SgFF?:e+9pbj`rCV.G83'blUsm8c:fu/g8#80,E(f'b;BPZi3A]Rju[d
%NID8g,B=X+HY4^RjKc4TBLPAXikjbJ,=7:K)QGL46*#7.+cN`6K,p/sOK#6?:?ko2:^qX$ggnI=I1&D`/4.J@ol[cY.%cC=jY=%:
%Y<4.bC5^m`_U>Q?TfD&c(/,^"?)o\oPtA82ds)UHNd>%iYe;i"W!\-GjY2NrEn`9FED97"E#?`:/E8Po9jV:>hXR(`QEc?INc%Jc
%XWNd3!>u`$4/b?Lm5RoM02-9(>;B__is1T<7b'&P80[Ec`bFiF5f9Ul,#ImM4hh1EK<d?Y1t<b>RVf9m]BgJW4X[or)YK.chBpu&
%A#n0OMbu-&`FMA1Ls4,'%2ibTp[6m,=)0A/UQ=-tXLcpgB<H%Y$I;_Kg,kp$+Z&-\_Z.fm#;B/aI/($#Yb/5@aAr7L/!<+>03)lE
%BV8*IoT]Dh00M(BQ8."=mX;"E.F(-RV:4*"3'ibWP9c=5U(0u16hL\j>:N[7%4IZW/Hgo'PWUb81;!,/7Z:`?F4[\=8J'>G+?LNl
%c!JhgZi=.TG$@aR1n<(qNTAB&(FK[5W"PU-+WuN'Np2p:*<9Wag%_=lj4NGTM3p_+&n*=Lgc:lJAAY9?$p8BB)+8IAdq:,V+t^0<
%LRHN-U;^_s^!P9H\@3#YYX'GD%[jH*%>q;4ZeST\ETVIQ^@S2IH=c@g@2VlRRKEt!Ks^+FO%IG(?M\?PWXf5iW)0*Q'AK,b9.bIn
%ZeNu5n=W:G!0^`)IPHMnkV*J:R2,;bbEGFG2PHhdQa=]LZ9G&i-cpU(DU%YdbY!MDDjc-SYVHA&c<]%;5[_WYXUl/ekN)[VFJcGm
%`eEO6R!lF.fsnYod83FqN!A#&CJ12qcoo!fTSh0s6B*IqXqX3im3KF:IoVTKmGb.H$SIGt5`h*W1>@SbG`069N_A&KM@:(BXTs4:
%(;j1R+S2G[\bOW>NE)Ntng8,E^gZ#_N-YaW'6\R#Jf!<\(#r[:@;NBUQRmGf"ljN!<Fj)PHgs:X7a^udDZ*QSYpcj9#,jW.-mET4
%[MLYT_>M^*iFj_jlm/U9YhIU,JY]%LOn[D7iJIeZ;Bomo_2KrsmD;?:p[Se5;:=JI6CVP!im5kq^D_NQ<gsu6=cp]CR$'I/J^>."
%*U^4XMR?;EUEJ7=SX#I>1Nf4B@?AXsJ6$7\ffLcs[\]YY;#L,YI6k7GJ*=Vb;mZ*3k2:Q%Qc5Y53=-;;DU5TQ@7X>c]S3BJmIK%%
%+&5qHI8)lXI@5L'H^[p:;0f:_k*he:MCtauq&!XF%11CWh$6qM9Y%;,@uPNY6('@!o!HiNR6RS>kUuQY3>E`sHHq+C+Km$bY"%9Y
%02fUqD`IOVV(('/0=lWu(eo55H9/dDrpShImkq8lMAhLQ@BSnGH6rg*6uLj'`\d"h[Y%R7abqiSHSfe7WuK.20&pQ)?/Ee7fee3g
%]dS&67EpH-T*,hQe(=YPe<c9E1MPJ!]^,D6Jo)Zp/?ZQT\K_r3NBMfp2=%Xn7U+u+ID9GZ9GRHdpjP%!J-?:Hma8pu<#;53/=+g5
%N#L*X)YQb2RRL=+'@)-4W\@YlVWcDo7C/=l4k7RY+F::!^RW!4$CR?].rre-KdgQeQ`A)]UO5QfFYDu^*]</^.>qGT6tekkL"X3o
%m#4nbeH\sG?e^GY,I8G39D*h:.P(cgIH=MSUf9I6*q1!WhoY-o!2D=(OY"NIT!PA`V5i7A!48iH7[`Pni4*rW2K`3Zf,0X=1KB<&
%q%WQ6OJZ`1-ef8,MS?2rh#Bf&O+Y/-B!PCYd[t^o2*%u$L2r93ZQE1i%qJNg>MmH:$j@Y!]=*CZf-\rPF%b(6_`2d.qDM36AAh$b
%Wd>ir*!K>lcr;)l>^['<_1'\8C\SCPh5FqdC8Q$52nCXW<CM2=PC:]YH'RT"W%-s1pJ1D'B6@qNT'F/#le.ks(8DWg7YLZPUACPA
%P\G=2EWYqn.4SId+Ajuq9_&j%R61TRKNJOI5eY[3<>hbSrL0up7#SC3*_M)2l0b7r*gcqZQ.f-8.3I<`_p^iL\lL.Z0U,Hc_QcLq
%jr6>'Wqot3pnJ+92=6bX#&Q9Ng>>CW2+hb"P%4+!5W%e-JS^8$,i3,F@Yf7:962Ri.Hurg[T2rcp<mNU8nsCooaHZhi=Q+$HfCec
%_nFmf#Sh3gP6#>N0@?dfF3Z?/C`6FM"Z[5SDnE@.@TcjT7mo:50b(gMiF#MuNEiJV>@pS^;l6&+l9**kUC;iGHj6Z/&[JD`lYdP_
%.It@+H%c,d+(LSIbVC0Dn$h4I<BCm/Z\qmDPd^+pL4Q5Dk2ItWB'[+K@V1e@FSsEY@a\)c-!OUYMo^,NQDZ^j<HI]/2QTqFAZ;'?
%303PO;R>bu9sQQeS4%1.X0DbDqEmf@XT&/2mEc]o>?3!_;][0V9I_%:Gk22%E4;S+V?AbY$`6d4)nO[MD#UQn0Sie!<U$O:-\+6m
%L_l@Z=a.2)CSDfmY#M,*O12oq</$Mdh/P=`7k[5JEP"igDO)[dYEZREl)Da%$M)8/b`Xa@:6shS0UBW[iFGGBc*G%3`r\7&d>Bj/
%<"f;&9_EkIB3DLtT(Gt$jG,T[Moc+IEZTbg;`,?`XJ8fsFTlP#6g5aO`LI="#]#uJ&"^BnVemt$'"P[VbBkY/e->rQ`m/!sc/*3>
%-&b;4DkUjG:2pY4*]e0.K]b09+cGQ)lHe[36cif.fDF)$iGeoeGFP.+BQ"fMTd>-ORcFdqHZ6AeK1o10]E=S4h5r@ZG?-9,h(l?f
%([SR2p7t!j?'nHo:^#[Q^e)rN9iCpeRO($K8V"6+d+jcu`MBXGi)nrpoWu-=g?R=mLU>PnK0DqR!P\_XB-Q1mc?f#NC^$7ad4Z*k
%At/AHlY)u;_JSkR/Ta^Jo3`fbD?.,9.XKcbih5#*_)@2df,npulj#*e3&-(X>:>ef;VVW\i3'g:N'iMn0teD6[V<$Oco%:V1Rl'.
%WsBW89G&FDlIb0p*+1Ygk'3BN@D$XOg$'qWJA/KTBrFYp#YEOKb8se>Vo"\S&X7sblMaDIV.<+k`LhMNgk@R3;>(Y)mF]uFe)g8F
%B#eMVr49:t`"E2FX1D4la:lX$2,Y_LH_>Qe"M8AjbfMh&H*3I'doDZ./95KVdVZ;*H?0H_!Q&Tp;%OY&mar^1#o8c3LW4N`_QNd1
%Z8fK#ZarPKZ/ZFCA4W2$0k-1q&Z?-C!M43f7k>PHqT).?^1Ne1lkp\:6Hl3Y(5tsA=+<R^UjeIPVg#\OB9-+mf*MX\oRO@&-cVB&
%rJp5re`[AV<?6K#9\&`IF^)B)(N1*o6nteRgHck!>ckl*1kU1.d6dHSnN'qKbn1,]GUKLKOR)`tGQLoFG@"`a?3;9[Im%k]Lo4Lt
%GUfc\F\`fVk'XT/_F<iK:]!6edIVSk<Pm`E\+D'a#I1@u*o&>3G=t>7n@#f6N.<1NSn"+"$Y-4%/&H<K/TK/N&9+HnoLqX:-#kKi
%0Ssq[10]'ROR*nuk!:M3^?aDk^dq2#>q9(96F4Up=cskK$L$\^8?PH`qUWi\dme[(O;c3@`NKM2![k,,W.T&4h'C\WV>^#=42]*r
%kD%"om,E;rfo_/,j;:O]K:Kp^Q?YQ>(;A&Tkbe>EDn>.\BejFUALrFfXKeO&]D>-h[#"*@N6fg<eb>='RUd,-&;]UL5nn1fb%iIO
%Nl983<M7V](BZ2u-c+rs<;drhVdaS>N@ok+C2*-1U@@cAjcn$d/t0h[dCNcL6jl_L<([%QB;aJISp?hTrFMj>8'a$F\/mY:TW:d&
%aKdkh>3mFeTYZZ^c*K]W*%&%,eR&]U/\rMh[ZOr%(#Q:e0X4!:/Jp5.1'M*lJ3%FIcSd,<\B50:[?^i1r#Pd*D.H4*i?7bl&ZXs1
%VUJ!UDm[;mZfu-phIlQc/aLC+;mS'ifabdEq)T'6^Or6Yiqo;b8mnG#Mbj,L@7l?Z*iXi<c2JaRfQ4NQA,_WHo'2roH<'/`\P/$'
%>FLtWJcnr,E!.mBNOg_\AYmSUn$0OX1ZOsRJ&FDe8tn_Qk9I%S]`*A?QDAH3!Ut1Y$P[-VlXr$ng8QI&'AbuiD\dU[l_4WRVJgBB
%#lpmM;_=rm];]l`CFkei[T62%1e/Xj<#l;n*8dNL*cOP3\S8NJZ_J5?R@DG*bhA\iHg"4gU&W!si7ZZ7lId=Y$<DY<Q"NLp]HT_$
%eRHBnD!s"4_er9j5uk2NC$USPEh7j:%]]hRV)=hMnm),qkPAtnmZ_#M]6QLXo_W)adr`]"[>%1Z;g`KC#8q0Ng(P5L>B!1A[f2Q8
%`]tA4LEu1,3,(n3!UG&8X[3:rmD'M%(++*N0t'IkUP7q;pB*-Eem43]:[S!+&_\06@OugpVrEO,jt?/?SW.n?kj&[*ak#2pEY*Ek
%X_Ba0@68OZM5lq#8\lae?^EY%79<7#jL\<O8p>Scbm6>p_5IHM'u\-K*8T;2L?@Hm*eF$-ptG*TScniK/a+VBGFke_[l<'UOsNTM
%K12a0.Qh-3Q4RUT7j(Qj!NUfA^T>*$:bDRWC*D=G@6)JC&gEHTFKAq&/9792(&]0jj_a`r6sE'=f'_%PC4R1u9W+-hVo%V1M<W.[
%T?T<`j<dnCGHaZ*L-irG$+;Td$TL'?0FM#'&Ra7*bk/!B>jU'Wo:W!B\4?nangM$%=8?QoH';l4O\9I&+q!4RDL.7ja"3EiJ`BZN
%m4tn*8ZW19+>DD&!A3E>KiQ9bAO">V[KQ`.CsA\8Fu4AmS^.jXjU71/0bC5Da1dpgVDXoO3e9+i/U.oIfU?$+!%SXNO6C!L=>`6D
%O&p#2[l%Fo>P*a3-t-)MJSI8a<]aei<@hi`[roP1)U-^?#*KoT_anK5X7R.M)JLGC"Nl:VoThXV3_EkW#Y,4b,:,c\1hdp3,d1D8
%@lr(cHW5/AT"qC%]iJ4'^cVkj79uIYk%U+"A&>,'n_Vce]$a&!bG(-.D43T6\fsfXEF;@\D5"M@K@r&$EF2!GU0:25FDb(tc?bT6
%h*s/\ggnJhduM^bQd<#&Vj<k\W5#OB4j+m/#EL9*cUX':lDV9%?JPs0E-DOd$#;=3k5rl1]$,/j@N55SAjN+0Nu]'_:XNHN0P;um
%,JQ/40c/MU_);Mh]b4[Y>^7,a/j]*3"HMRSE^/87NV.hKcS[bkB%@DtDqWj[aO<_H=$O$QN_Z=IYqbk:5p`TTi-0\_7,(+Mou#_s
%::i5CW\.U6X._Vs7/U!ac`8iZ92M4hgsr9b=X]"@GDUoaZYFHM]Am"Wn2Ef=`HE%1B9#\M:LcU'^^[:I8*br8>9TMQXX5/_>"71q
%aa"PGHj0l6:L-D+5Wu_c(T$&j[ZFSO>K"1qXfZUiP!IH#Su_ma#,62B4rBSQ1Cng%N-fjE0>-+S_q!3kRdL%l1(@*i$,k<!I_0q(
%m5XXoQA2M_RdHEb,n2J+(_)k0JHKIdFfRII+AA@Dh<PF2dl?<4o`J6Xb^:#2A5dg^Id06o!C+NWIZ3!sh%#92Q,8g#8sQc$?o#'c
%]h1>V*=4%S*#'n?N=Ng68'*/XHsuY,2R.t7--6gCGn8^G/2?8[=`Q];60eH%h;-5D'r'$Kr,",lK]]Q3BnSo#A!0):kK3H]F)CYc
%QkGS!+X"+!PU+'n&4/UcjXb\m/EC4p*jdm3+If+aLmZ=;_VAau/9ms5j;&LJT8P"?3ICY[U6[SIZIk't>sE2ti\JkJP?aX07se)I
%+O#j6.XBeN9Z2+7bHae4i]d1(?Espmlm#KE>s+j4fEGS_`ITFI^XKO?Vrg:g;%T2M!39='gK&@GMjl68PE:cLAM`dKFES;&63ksl
%fqB/?k-L=K9SKY#kFc=^$fFA6Nj[SBp+(u"JSZ;k'QD)#S\u2^Wsumb&(-cjWc?bp*AqmP@2r$Q$f,#8Y3A:oe.rTRC#.45D@&qF
%.sn\*1^WjDnD\8^l(IVP_VeA/S]r(Oj)@Hq<0@Ah47XZE;'bDJdr!&1N?!sujt\oM>hk2siM*f>8=[8_-us$Df;GK%;Q*HElR2uE
%AG+"EM4'LqA';s?A".f</WdthPk:URMl@)`kdADSW"sVCGCLT(4&]BAi!BjVXLf+V@eZo7-4-*-22$YH+Dh-S@LLqIeK,3B/;q4M
%@^_WZb`\2)[4Kf:$XT9#Nako>kg9[(A!<8?&Y;ii<ENg#'S31hJ)#\Ogh]MLDmWUKbq@uN.9af)/NVC5R)A"('ap,acW(@nT&nmb
%fejs6)"B4Fo86Luif?+Sm=t!?:ZM(MjnpC@'J)S6V?Cf\H>5m,(;.eXh`\7NL+QbCk$Z#&=^5PM<mT2k2\Uo!]-dEJY?p?AAVo6C
%(Rs6a$0M&tluu\6MTW7n,Kb%B:VI4HOiqM2Ur*c+d=S2==':fKD/H_`bgT(eiZ#;+1$$.D(4X?ll%IhcPuT"_O)<K(B698GY6a;'
%E*=XD9tMUolG/6RS1U(c`L)Z[5!k#^49<;2hV([OLi2mbZGh(3`jMqSbG\=c4eO]:"*Pg)MA(_>@@IR8R">]t`4Kd9KL7Es:K]@1
%lI$Fp=/;iEWlHHiW^FR!gJkL6.oU_r].^3#la'm!\'U)&7?K&-@ID>2RP"65(Mb-^HOgO(;['A:_7+\jc(]lZK@qIsq^f@nN;nHn
%Jg-O4Y.<f-[.dQ-TB5b=fpu<V/WX;W`O\tln0OOOBWFE2aHPJ5/p*RR:Y\=H32r^o^Q*T5UKmcB]t1JGMPk9hai-S@MqX^N[,I\t
%2>-$@R4G=Z$.`TZ9BZGo_eI"-AU-3H"s8ZGQRJFJAq+3PSP33@R;TYK)TrF;ZGWklFdc5DMs33i<-r-kM2N&!C_'Sh/b4c]i3'Y,
%%gTjY!L6YV"?;rtRK53$TA>^Q0(R-%IY5X^U"RQ)o5q+m@F>6i8)+d(R'uN'[/aM%89Ab9H9Ouf,f!RdILC5(i+HO4U(c?!+cV<G
%73%t@-'%@G7jgE/8Snd)$,R`^XWgEmXAYA(qdAP]V@!+bJb@h3O"KiA2:Xei_M;WA\9D4?Lffea5V('\4#V@5[^fD_M!<"hrLa@o
%(`Rhoc)Ro9OJjE`g!YrrJ)6st;Ik?C$Y-[=RA#et5a4)MH-'6tUIR%7ZW.B9lHg0L$?L:?6:ZkJ]7hFV(:7JVOQQ?7cF>:C!4\H"
%%tn[R-kD5BcJ!f"Mu%CE\$aTk"npHOe4^`f$Nl*X=W;cmV'7_3e6=W7YDn6D67EdFA5_2gTD[2i,pTS\+a?]OU6`E2MA6jX\m).I
%Mf?'H2jp1WG:p*P%kk#<m!11hDn35D-!S$,4El(,j4OrBeY#DWem3`G7X1s#V;3\8<a)HDTA7F$MTmft@tX0nUTQI*!@:i\e'5ac
%4./TaJJ#="$_X=)WQ08rKe^'B4.#-mr]-&KA721b@PV7eZmH7UM-&Z`8baadc$NJB=*$gYM+JD]Y.[E?B5uU8A%a2Smc;8EWL\@T
%&lMu%=%6#-aKd"CrLAR3231;H;[ADOR!bjXd#M?W)?HS2nsV..^?Km_`?Qg#j,IH&/O&&m[c8iOH1H>>0Rp5HFb^hZ*rU@8eog(%
%KQsr4Pf\Xs!`s5e0X)nl/(tWFrkA1:RM7/42S$eTN;5Vt@pK`]W<gajN*#4oHRO6@ZZc%Yqg#\O7uB87jjhpbO*uT/NrUUSZb\$X
%RJoBd0b-jD4T]>0!1kcT$:L=Qae'pXa_,])'TJ;mjRp)s+nug>qjk>M$t"QhW]G6RU`E+K1hd$:NGLVYc2#0EKm6Y4V7`O&?UBn[
%9$WV;DIi7gQ'3M=U4#u_5LD!iQI0k+6JG$ki6BTsO`]sTXTMj,D2s&.-G704GsRNc3;TKIhTW0%AM^qPGo?cH.B#udOOH8F$F#Fr
%\O519%mXq*SBI+k2=b/Q(_u/`/\H%m@Ii'T+rgE5a_/kZ`3dqqj)lhCbEgXp:V$g`e,pDr*g2mOC;C0sp%*a21>fYH^H4pSS"#=U
%Sejb32S,]lUK6@QE*[2YFBaI%V6gTcbfOS9g!U%%1)jTmDf:,4DJdgGRg(-=W.5[:p2C^=m\J5->"SB:#`HaB%E0"ODSA*J*[-V&
%>,@VQ%Eol$P#pVqGgRikWS>D:4hep<][_f)n7?lSlcZ4YK+h+if^"e=ZW!4??5d(=LECk!jsRmnYl$,2NnWM^i5Sao>X-g@'/^0s
%84')u;BQ8YGkOnJJV?9sL[pB#jN)m7\-^o:Gd58/3XZ/s_i#\Hbs-@$#a0sG1p_eK@p+!rdD?(L&Xh,7h;8P-]^*9OZ@s:+@&JrE
%k#98@B?IcE('qOM4R+>D=&N>tUe<:BJ/2`QPFCh6p-"B!Ne;u74053u;G*tm!+ms1-:OE[)6XB&KX"YsYba6oURakl%=C]ITPN+V
%N%(moK]s+qqprbm:Mq#oEaTgY%"a2)e6%YfSigM[[b6O*Urfnal_n+qGr3i$NAmX#5].&\d?K4(\\Qm>4)a$2qI)lIGfhgp5AW,W
%lcE"W7MnYtI<[)Q.+OhtX&'eW4eOKEV%X-j[ou`dU-NXE4^%Fsb@5"2N!FN[@_s'i(qkhKZCf(mj!\Y8O\-ZeK01*4MGI`qNh/+^
%GrDs'\0,#&JjD0N`A3d+2QG];H[)ds,gIGf*6Z,B)Y>16.i?-@)$s%1":3OE+.fZVd#.ElJf*fqJbLW(-!E(Hk4dK&_XP*=VMpRn
%:lJ/qkT-:IK-FYl4i,n?*3ZoA4p>D"&P4Pg8CMuMOis\.=V@!"(d'0Go-VR$[;!!C&8Q`M#*n+0=LqjAAaQSflbsd:\o-/=GZgRH
%:6Z3R)EhRpVV1O?i[DH;7fGr%_cQP>IC,G[)@'IhDYItKQsO0NCSAKq$Ojh`G?@&8jie`>,P:Lhm>TZI*VLkg""m8`Vbt7i4?bG.
%)fjLtH).ThribK7FpUPMiLo;jkIT1HaHl:I1*W$?8VbJp2`@8Mm)MHsH!H_!3%E!a1d\-p-&U3f&>9+7ar96*AnP=]3qi),^US`A
%QH$)c-%CHe%Asu:O[cm]lF=J`a>9itpnJbc(^o7pK>:^rWqFq+]ND-9]j(2K?U8ppK\fQi%tdTRHWA\?\N)k<FuofnM>1H\$mb$"
%(@mL0E&Q-?#%Ggc#"ZEU_eS=Ec`j^7[cYs6RZ-FWFJhGd7^,fg))[t)B@4PACB#YShu-g&o"<M.(TZEKB\U.ch+&0]F4h:%a0TFc
%B+^.Hq;=kMQ0h(qc8[EGhQA:2]<-*&R50+tnfFl+;IB7h7kp<p'CBrna8Q1aC^@31S)Qf?fBA+uKm%CKLL(n)%Di^n\*3)i"+b1K
%nOo($%W$X>?NG,)amkXk:b1UqJC_Y5EpRgjW6W!P\*-?!7AuBDSuX3RkSO!kgq#Ve4I\LFNY>j%Y3Rq,fR%`Jj30>OBK<f))?5D9
%Em3f"kscI92s9JM/2<9T]`PCU9eL&9R3aTK`Od%m7,q_L^O6@X,*mjc5Pj'ZO$<S.\,Q<S:]>51nlM0]5.u:>k*nT*>[O+0?)mPG
%dm'C/DWO+[ccaLqMpk`t'Ha=P.$pQU1`_!rj5K1YIIr`4r;Z"0*)6@gkMP=K^Ft*5mmZs+;*OjDd=;,Pl0-[gV9f1OFKr5;*V!JQ
%itLBU9t%l,N;so0H1(FMQS0@tg0-[GieN#ur!Ng+AU/;M5"u;\SP[iBfilQ._Z$,n?N)Y!KU31t<s)J&o97QGJp$slGK?CNo+3#$
%'MgtY`Uth=-1W_,FKtc:$nLOp5n'AFD]?;DJj$#CHTT)%WNdZ_s7D96JB_rj'!6"sl\8TVFe^X!FY,)F:#$mqIJ`=Pk&Kr^[/.YA
%qp?DDN>rON[;G@'%ak&0mkZO7eV*gYJP"J'cXi/2][%L_eJ""U/N[%q+*n@=VPEm2qo<X3/D,*Mc0II$6aXPQ41fT]P5[-KZe[>j
%J+1"j:Nt%-+o`/;k4fOX?i#pt8Y`mXmiY+Ma<HC/k;0S="Q'+:+=H-;?+X0%IeAJ`gS82HS^Pb`A1(?eh8^*(UE:$-%MA.f`OgJ:
%LO?Ktr;GrtW`dQ%@e6\+.TfiqO)N,8Y55`Ub=2/_2c&X,?g\Jdhu*A<P0ki4LRbc1#l$&9YN3__jI>,LT(fO>LI8Fs89]7<c9'D`
%l@KTB5J:nt]>-mT5#,hbAe5b(N?^@Qr9![`&DrXd46N=qh3_WW)*VVJ_G_Re&2(-WHY2=ZEjg&gO3rCP&&,uJ/qja9Dg@06Vn?>2
%DbGJ/?/<c_\^C\o<BTqCg"2@C3$]NdP@V05q=+nShWUd.CA"amGKTGFMoj$.hBu\/mbb_;qO>%O/Y)oMVV]_V+ifs/Wp70"pW@KU
%DRU_*IIcc8]C.K3q-*dC-/6JWm@1b5B4p[[3;5U1,_XG2P4.nerm&L;8&FX8]m/^7epA_HjRC=6+s1(9*]JS@I,!=9+2X!@0-#E2
%mHT,UUWN>kER-+Ua*P*uB%B1,nL%n]\[A8M*bM%L=uV1beCCp`ZK3=1,#m;^`q@u16<l[,D*,&gs7FKAHuaB.bHmPeB<NsaY.d-s
%=3,j1Pa4c$Spu4]MpJQ0c7]-=oWq=XrT*(`[hjOAI=6^*It%#C\Fa;/b@_B`<L<Q_(UiV]0%qR=m!Nk/hV])KF)][H%ss*#f\^l+
%lO'FprpKI@+-n"\?@M@r1R3"l>lW&=5Pa-Er4=Z)?[h^`J+N!4o;/FIIe!mH1HP)bc[U<>]@X5]q<)T:hsjbi+8tQ0([%..?Tq\3
%nETA@\(@Nrf\>Lb?(Kc`k2eO7kHD$`ja"e>?i8[?p%V2Xlh^Ks:\g>A>?88+Xrcg'U;*4g^X]C!4*u,KbrqD%lfV9k%Hqs7ZIbZC
%k4J"9hd#Ws)nYU5](=%YIJH=#VCth=?_j"&89O_U:LAkNp[RV#%fO:6&(S/@?iB``bNhr2^V,$&guG<9s8)^YIEb@UT9j3BDg(@"
%k3@`ejY"I@q].`hrI/tL^6c=s_I*6Pn%6no>9^9.?@DM?r:KRAl2.*+I-\HV_]+*0%_]V-=/TunT'rsYg4^'fSbW2u>e[oHrQFMj
%^RX_tEi^pCW'4M$rp9LJqW3-Pm](&@Ghmk>SaY(;c.*?5Ucb9lq`FN%ad^ad?_.22\'*"MAW=?BrJlf\I6@l)lG<A,WmgumhkIBe
%oln0+#C/b1]mb>$o(4kB-f9Aop2UC\j)PrYj)X%D]X,fYerjl7ikop"hC$#%`p7P=Y>26-?gZ4,ETmSOQPZhY^4#tBm!?/*nfuro
%<Q=dj^b:.^qXr7VLQgQNFlq)Dm.0+GG<":C;\u&!amSJqP=<k`s5!"I2i"`qSXk&iZeZ*!io+^_?Y?tkXHSF7h;N$k38,C5G))jK
%hfF0INXg3kZ!fX_ZnGlo"=5\;YQtW_(6mp*n/+<WF%)LWb-Ys1rj\.uYe'OjlKMBJ(U*kEK8.,4oR++QErM/tN;Hr8W[G",m]se&
%We]l[an^-.hs\pWjTojSEjaq96`tg8/mY#sH[`8YS+#FgX0_,uH\^[n;rc:2;os6.8REWSAJ\'GY'W,Cl.,%MB:&AY&t<n8mHMac
%06`jUX(rgF<-Yss^dGW\g[gV7Pc;pH&(RfVD,fi8fe<AcI<^89[b!`C&)Vb]I^[G#H[0Z2o!aNjLRsJu+)I-%$6R=Q.$WiNe'[a4
%a31*As*foO`V9+lJ)!IOYmVZGLiRN]G-TMTg;DD;=6K<1E0&E'-cV!=cG0>?j9_2#G'c5rJ+@?d==R\Vo(4SJ)MPeUWH*F_"5>2P
%F7T%LS$S=%:[`d;qn33H1]tqihqg<4+6-P/j6YIn7GrgcXTq5TUG,[8o.$ts^$j?""!=t_mJV(0_lNTSg7]%eBV51+b:<5K#@,2j
%0XC]R54A*?%sbqeE8S:]oH??hp:.HK^\=5Xajo);2]&CD]Bo4je=5N/F@:N7*r@+Md6kXshk"0QknF["+[*2Q(C)&P6huO^8>Fjb
%9?"_;I..^iI)H73n\I`nJ\=,>L^u]/#OBsipCY;1I'SAZqbd0FWJ82]*2ejA<(RRKiVdeg4;oI6_(WHVVlbSYGe_j\=(blirH=OO
%[R[Y44;!qL%ePZ<Dm-l]NZ"H@g\`\X_"R>SlIX;`DXWq#mn_9U?[qhLNgq>TI(A1gbLbo=g$s!0iP@&R]<2LQNkioiHe^+lUG#q\
%^:?G<gh"mFoo1!dV1%).SsG)3*%YV*$e`?_G-I(Ar[4q3mA+>6b[c'7-50DMj$-h?SmHlY*+2N+?KU.uT3d$FQa><,Vq3"tS\Fsq
%p!q1G]tWrfrTjRA>2@#`H$[2Pg<m42](Ws>VKmq\Sc$ge`S6r>@".2>Rq[=s7^`/=2tY_:r0TF[F2G2beW4b'^\RTqjg*KD*ARrp
%ctjDfWnh@A!hZctAVXjKk1p90-#S3DYK*KrmB?Ncm@p>):^>$B%Yg=&iT4Hl3>c'4L6mPOj^<<n(gc&\gL+V*_i%],BR`#Z?M=-s
%HN&qGr+#:?*t1[F"4@G2aCfhW3EVC:c@Y[S^"Rg#dSn?"4THr)E@!S/]Df^iftF8Sa1)O?20S[G!.fQR;=)_d",p\B@dj"37^7:?
%li(g[#8"jafGpLrWG2)9J+#>9"/Y7d0ch`;J+NL1YW4n4c1*ObgHT(a4V4%lKVjMCVP-,K!j+P,k)gBlblZ!26)t!KogL?1rsRNN
%pSGs'bFul&DP9]6O3`+fSj;hsh)b)5bI9Z,`l6C]/jBrj`==2-&!VtW>Qo:q5Hf65#@IH&!B8l=^OC6MNE:(AqJ&O8m%[_8G'QBc
%m'a)=E4^NB)'gu_Ib7*b+W%?>^T0Tr]km'Q;#4j;q2YF,qsFCKo@L0Q8\"6(IW^,1o$8C"M<OWA-SNfK^]2pMq+_jEpUfNoa`S+V
%NIHis50@%#Uc6S)VprHL3cD_mH1h$G(JeRmpfiL.,OgL/@d*N*I6/SLp2j#UWi=WH#N>F52`p-S4l3R:>o/1s_=+?7r&F>?6CjG=
%"I#V/%U6dn3U6(COTSnPT[=c:\q;'ri>TVoVX&U053SW$Y&d,N5NkN8UcQmH@=3!YU-lfm_:X/iG(8^NIRk=5o7c+a0Rh*$4!]b,
%'#kHOj'd!kjGP,N`=Mk*_t7BppVfM6pcn$"p_YU(Ip5=umQ8ia^=Wrh*8e4aoAaKiO6:rhW-@b[8&X"\-SMZ!c@>TbCmS(eI.+c/
%_OH%:0)`iFX0:BOT3gqPmXI()rR37K^5ENqo'OEbQ_F5ASM9$gM]\rtQ`iWc5.c8hTBC'Tc%>9\j6V/k^2:$%W6RPuG&TTnFn4\e
%f2nmMn*Mn+G0*"^EW#uX-1>+up3S+#3*D^)JM?UBf'qQJhgY0WYb9%HKR_(W[/VZOdA6fSlVB-YInq.f,m^%-c<jrWp0D`V^R'd)
%RbRSDoV2L5A%sD=Z_mfFq#+.:omO9$]"7X#N2LAVHc2!PR!%psTZTEkamoJdp>0_YJ'4kc#TP1H#ePLl%sH#=Ho)5JLTPWE^F"Ws
%]-JUA'^CIE8=tB[HM-U1X/BM!q2mSda645O55Ar[a7(LYPOW;krrkL^^N[)'D6A?Ge`>>#044_K;(a(hBokJr8(5ja+(i8J%'t^1
%B&Vu-AtM8#E!VLa8.#9VX-:^c?ggm3@1UC@H6GcO-`3YeR-M6VB:TRYO?/am%]5<%iN4fpm?@/5+(lmEN$k,+>p1;J^&G9j=T1j8
%n>'eF8NiXl[<H@hr`c3G:XOYqqsqK!RNIZ-^2K(sWMLR&n4KlZ?Cedc7EN"H+0$ul=8+@>O'FL9mH^fk^Nk8,qG014W"09m&%:EH
%_h.X4(;(Yol!_Ci/9js5_2FLX=BlWU2G%IKX1ii*oUbWjpQRMJ=(g\D]-'$C/)OdsqnSKcT^k7VQ1$0$I#"!UYk!3=>4#7gJA+rp
%*`iO;W5])16p^fWdb'h"jF8DX$1bXg+'LmY(b!Hi74n-Z:^R(s#Q=K$&p59bN6h1G8lqG<hj4F-6Mn2-n;-<oO4a2GNnp"W]g)E8
%_!7!@nFp@r:PZ:6iTtbYBDs@*IQMA9LU5mslutGdr@h%*$1\Y"f]d;ZoZH.b[pQ&J*F@FXn96ki*=dSRrYuDtLVr#)*AD__?t_q,
%EX2<tiS\\Hi:%R`f%oU[58sLgBosBZTE6.L1ClHjSc["'DlL59BU49V?I6E-*-YV\+%nf]&&W=5N'$F#Yg'm7j$-ualf37>5O)Mo
%c>#S.D_"$u7pUG(Nk4mDH3XoYE/rc_#McX^*kr)#[n]&&-euP4Z,[W>*V*tU(6&Qh4?GsO*\84V*km$+BH/QAHTTUrb?I,31`lTg
%3ES*J(6-#obbMU[I$&1C,3;DUN!nX*V^E'/n16bS(u3q.EA.AT,)uV:)#t/c.JI%fHs.[&:M:V*KJMoKC#fkmU3uS"l-%u!^$jf"
%j7N-*LXq*"A!^)7Dm-l=H$T8>4">l"[`?YS&(Rk)*+YB4I.e0fd/WdNDse.ohIluJn((">m_MYH47m'OE,X&uY$ScTHuj^V\]]rC
%rKRWRh[VMmlu%=G=".5B!?E.eH)(\*jj:F5hts%ns6T5OroX=.Na]D7m/%C)m*pq8p'gk/knnnpI<Kma]UQIq?[fZBpe7UNYqG&A
%V.VHGSt158pNk./qsL#'H)0,;qmHQrT3_KUjQp47j=r7f:CY+OK.d,cqhUR(52`/`m_^Y-fUj7)!S]nmqX]+^WD+K*IeVg8GI?[&
%GSFB[hJ\9!=(g.B>b#-hZ;CKuDiTnK&H!\@pW$b%IG@+R]5'K(o6hV<Ii_&V:H6;mgt/%oM#So%$jF.,(.H>K"9jKV_O&Cie1)oX
%4b6.sJ!,J_S]9sO)gcem_p]*>H:lj":Fk"1QTjd5=r<k"OMZ;lM6mMccOVR`Zu=.?;kf47KuIgDVW2+T3\4Tm`=%l@#F#1_=hUCi
%M,;[!YQY!ABf-D]_&m[$lk?2+J$mJ6pfQ+JSYjNcch42$$JHYLq*<Q`^?l54ItqHVT^+h<ApIafb@.7(j#=:</+jC#GdD1;ahq_V
%m'Ld#Ir*=NGAq')pu^Z.o(;jde+;%T]:JD/J*!C#pW3oJV@W.QmB8YADY)&X2rC4!]KEke]tF@3ag[=ObIKT8RbP[Aq)D,13uBap
%ci1Juf!G,Jk72E@n+Y/maSpC*l]5KGa7jeDJ)'/,?l)#r)YX:^SA0L(,-g%kgK-HV;]j>KYfgk:q^(2Me1'3"$htf/2VGRmp@Zu#
%l2U*X2uWU>r-Z!#WUkmla5t$HHL2X(L&<,r4]F@8cG)I:IYY'WMqdpHeW.hG>kqcGAd<bWoe+t`l\FfDeLAfSn*eB?X&ircB7JT'
%q];(fR&[O25l9j=:HNDkHJLr2jmr*+/oTq7bI8:+hr1Wn]V!`n&(Rd&[\\-@m)OUrDS3`>g["TYHiEm,ou/Of&2/C/I[m$9St>;1
%A+T9Pr8hj(muf0*](A9a(+5G](HY?[J,-A;i!Jo-?9Y>ZPUAaYIf]k^>t3?f''0[]ni)N/V\FundkobT\c*9e;0G6k*C<W1DgN+S
%1@9%85K'9YUi-!m@Sr`:>5].E;0Ge,+%\$+:0Zm)(?H*cndjDj%^@GZG1Lq2Yp_\N4aXqn506okE/6r./F2'6V\G&pdqmb8-/fDn
%Ei3OJ<3,@J`gE3c`omY$["j$qO.3D`;rlZk9ftW%`oD=V5O)N:j;g?3bTTi0#urd4d<c5@Ndj#7mkO7[#ES8D+'G1g(Z=5V]q[@g
%O6r"rZ/$@SmCk1L=/Qk<mg[T,,X!-1*e(%*\-$XEOS8/d]fNcQFo(daj\BqNQR?`uErF1Pk0WDILYL@NA/`B=>Lhc[K@jni5%I"H
%W-J5"VN6/HKQujgC-../m.nKc:_iMkIG#Qcm=uF*3g`Rt5>klANOaG!ZC4I&d-;iqq58V>'h9B[Ybt+dOW*>Rf"V'5/Zb$'&A#b(
%pnr-6+6MBD@,Cjtom\%C]\DBW*9Q'AI,=hoPCEthQbU+Zjn"P=!n!@LH[Y^FV%o4QJ+cRtT7Sr)rgSsto"/hB*WG/5hd:d(qL#i?
%03X0=Zr33>lLI_Tr`MGJl/s-_8"Y2$PNh<&mlpTigQ-gSs1Lk)IgO6cnZSUZH(TSI:]J0,l+\%fG=VJm[n$JkJ#B&CbP+7$,Q;TV
%nRntZpq6?-N`n++kX%[/4rs5nmH[P"4HDc2pr"\\kAfed1!`?CjAL@tftPO'iHab[9l27Pc_i33g$b_.^W_%,4rrOjaW[+=VLj\k
%cVq=H_t]V,21A_Hm!*mrG<K,m:2QTDo)5c^Y^WQ9.]m$Y5/l\6LRDKXb9'[CI;Bj+5-MR5erSBH[HVrg/P7toTu]b%7%2//lP;^1
%\)^Ip)Caoadp<n&\8:T/KNet3LqG\;FnV-Gf/,\GbI/e)I.u*n0Hu#?T9kp"YE&U8)Af<pUg+B9(mrW1#&3R'dcouE5N)o5Mp'SQ
%o9$]1-BJ2u$i-iDj0)WJqXim_htlu:D_31;hr5%Bo[@C>r9$R7kss4o\Z@.&c)5Q$fAkS4Z3Pa.Vjf?uek:mi.2+X=k2sk%@t<2C
%H?$uUg((P1T@RNDr5K+?j+X[lpTtugpA0hOT2pU)k29B,d?jTgOn?@BZM[Y%^=$/QZS@V\r)Lp(7dg'&VtYRSl2,(O/48Kr?S4Fu
%oldD9l'M4E/iP^B$S1Z6(OnP13L?CIr8l>#on;smAKs@O]'Q&[T=mAcm,c@bZJtoHlKm($3YaU':VSHl?`gL1j0B-,\\@(Cr#`@i
%rUe:p-U)tWqOEn<5Fh]Fo_]5t='qT6]TsSu=-k:ASY,o7)ihBHrmbAjI=67OC,2lZoS_AIDr.)!d`qfi?Xff-&ejA>5<o#Bs/^E-
%h5fts^7&qFC"]r;dIOL779rC'(N%S"A4)jYcV^mi2`J4T\ufD([N.<8B,IGj2j8H5QI/mQSY(=Nkk4\"NmD@^8Xh/#^H^k<8Skj!
%B:gjNH-DZ'VTbEIcS+^Y/n'P"'!mPbfW@H30T4lO?T7oLC>.JBp8@BSp<C^c<C^*'MDsBc]^]TOI_P>!mf.\+.GfO!r['OA`Y[Gm
%hW<"kmA&XZSYK]B/@M1gh4LSaU[-d_nTjK;'qJm[S#Ts"+)B>bYpQ)u_W))_^,+W^4%@pVRs-DE(hRQ&[=-s-bO#L_qjX57qotV"
%pj]H4VIbDH3A"$Qq*U#gA)4(<9Q=2tSsMI&K"m3BcfZ['6<TmF:,XS7q^bMslPo0$;i^1)GpE(O&^*OVLHXYqHUPbHOK]DRg]>:>
%-f=29&9^7lQpMG^o3C%_<nB]ehWJIM?p(:KF.8jXL&?<qS_=Z_p$2-ARBQ5R&:2u87l>,5R!dKBHTBTb(nUJb3DW.,b:dd_cT]PH
%`dOtlj3=bGg[n8V.SJIkoUC2NMtV5<gBu8JX&2&5-a@525>01\4qG2hU\b"spR^2t,>H)Fqg$N@s$1N'A$FIG\g<lf2E&"K_)W,;
%-CQV-T(>(ZrN5?c,hS^AE6iZtHZs*<9&8%JQ)fP!6,OjZbM9\FImEEKGTR+6LWi\>=G8"#M.j*$8M2n*cXM`LlZ=hkB[d6]3fkah
%m;!ul=]%5J5;9!;D@T-!lfsd49[MSkT\=Wck)F!rW\jOHgN[lin`hcJk,(>g:%B/\k8Y\OJQgX?dhne!DA<?nT)=J'!BejW;h63'
%=S3uUR0L<Ii0`Lk_5uio!+h-&'1`hnCoK*XXEjj](0qYP@oTa#*7_9g._rWs;P*q%NG%TGMb,s>(/Q`-!E>FQ9bg)Vd0p&RRUJ&X
%:TFep6&6X"7K>S@+9hF>'U(9XJkuOE\?D0;5'CaA2+&*t7Adq@A;FK&>?0l.">fgb33\hdHE"dDROTY;k_tlO=d'O#PUNp`\Z3VJ
%U6snH=(U.d,9$n'E2pu!#lnO*@qMm:kn_M0/i!-#Zb"=Z[FRR8fJHIjN!bqa1(2,]X9)0pLd`,)%cBK-`@IoG[rgP[D!;#[;?3PU
%Fk,t2c+Je-^ZI;-*qi#_[o<d0<(.f-/I)$no4fq2/=Bsn$L<VCPK:?"0kEf_YIcJiZ)!beb7#3o!`O1b@Am4;8Wdt&8YRtR1.6-4
%O>(opT_(q@nX[8q1R)t"i-N4Ki306i!5Q1G1)J`q(2b,mdgaENBjtM.!RF'tCs;sAO=]lfFVFp-Ea&c*9=.YU[6W;3*m.nXY<b#S
%8fYK=8T1QG0H2f79V=!eQFc=<@V(!$YqU]A-)R%j5ac(mIAdA^;[$FT-#2^r!i)5M@OQ<?_1=LV9i]`S`f);]##3GK5b0Zo"t%5=
%D"j\BgdJs*(b0'g"UhJ+I"DJq6WaHkRBDuD9bF7`(sp<C+B'$7\.;"D!Wb;Yh3D1X=jp*5;PKQX6UD"$$K%m4J2h0oV0X3K*^.A[
%<Qt\+I2U76!#Z'd"@CH\!iS]%<Guj.WGB?oWk.21b.pAcVM:lpVFq)V1&31'k63Qd"%*%peZ"6>Zro/cBVF/'[pVUUf3j]52mO_`
%+YS8+)X&tl+>J#IYms^`c,NT1>@t$1Ot(uY<_u<._3:@h]`s`R28D&;E!8TN-p4.08H:IS8lKiTGU,u`'i\q+Pu-!cdjf?J=`k'*
%8Z-/3@B+/>Hqib;dOi"4.Amsi?_mM->^.]F-70%BG[CU6%aDC4J+8m()e?pLkPf4ugB/r_K?K?Si07d(0&Ra\?$F,[]KFdlc"p'a
%&[)Kh4u##.%$&Gq^d34V:,iFj;cSY^##\f"kF$ii6t6?T5Xom&$40Ru(^s&!'FJ_Tjn=]!/dp8<?HiU6Z`nsl%BEnm87rjIQi]0T
%H<)M'#2"H<L1VG-ZDAM-54E(c:k<*k@1^pYib9$O;f""laC*dG2/l3WDG<H/(lW%B#)VPk`i:9mgr%rn;.+KgI#7/L\.>Gt<Mo$M
%9Q66f&_nX=/r%Tg/F_&9"PGa8B"M+ZK;l8H+W3<u)]O_tBR#KeCRQ!&^8@QFWnZJ;n.C:kNe#9QW\m;H.>h\#9K%1"1#37sJAAI-
%&2;K`393i7\Y9'*+9Esbn+2Fj":>P?1Gr>/2MTA0ku8FO!Cqj\'!uFALlY(b!c[VFNMr6(&T7":,X`CUck-2T@3U4aN!`EtQnXpF
%5e3l6)9coV#CY.4FMIoD;TVToU,('U^o]@`ZM6Bi\!LEo;DUbcl^4VQIaL8UT2UjD@_F4<4_[9E_DDuJLoMl%#+2fLHNlX)9A::Y
%?T6Flo8=Gm;+-#3!qfrSR'p#"*3s``X>S^j;pCsu8\Aehr^=49'>P>W6t+&pOruJ-3b/9@0f9Q/#@<,j+SY2^>Gg1aJ^uR*2)E/O
%T;\]$5VEO-nc@4<W4.W)"UZ"g1B`02Ba$q3'I`!BLZL/l8K@jOKd$pUnHH"i"O2aqis,156H1N1S?*.*<etXZCT=(dI3NW@5T)2=
%!At)5F9N=<XND=O2'>4X4;\uue%u7`C=nT-S,2]c.e!ukMY0An?XMS8Odniea]HAID:<si2f;WM%:=$MDg2Y/1:+tV+)1b8;4R;G
%%*km">OI9V08--"`pL=.A]*<4M@A&+E"J:&@19Ei$4\\821]B<#;/]8Af@^^A/$X`29Q+V#:c4J83oIWf<o3I6S"<:2$4Z97M\bT
%cpY_ZBN7V<'VOTo]grTOE(eu1K"Ig&Mo0j>iB*eaQ7<M'@g+)>U&nMsriNOmj[hNIE((RIOpKPHAn:t*Acd7Da+4p]Zt>Gn$?q)a
%8[@TW.Sk&h-s%+`N7J]J64H:Jl"si/F_':S2)Ap%0P\UG0R0.UCZ96`aal<b/KJ@qAf==Zol-Q.m`0GB.TLW?F^pLi=6C^a1#6sE
%Q7t$uM*ML"LhamIU+!#Q-'MoP5L]kJB#9CmNtYb7@-3+kHo-D92(N:k<t3]:GJrDC!5]$U_b#"e"$g!WEc_Lb2:5%-CiKLH1\`.p
%g7_+N73(IV-=OhFSZmq%Km8EP*pa;2Tfbhq)=*`i/qFD'HA]e2m%?LS<Zc/X1;;J8.h#<uFLUJeJKtpJB\o8cKusNF%?:gZ4l#L^
%@XXp/Jujp=Q,ZKr,s&5fF>,_B%<o5`j!$<JCI#ljlj@&3k+hcLmpQ>dpq.[h2YGU/AXkF">qcnC(3s2fR@>u'ZpP8JY4V('.OoVt
%%3>f""IU26Y`bCn5.H?`drl+$ZTK8g.n?bN?j77p+WP/C=259MK1&G9W*+D1VD:Nk$r_hC5spb0JgD<D'hL@T5ugYXiQf<iD.;`f
%pPL0h`!&`L9aQP1TZ^6HqK^l(W[Y6p8.B@Fg^lq+Z>Nnq'b]QWZg#IDl7--d^,u[mftaoKMa=g43N!4VRMX@OU`[hh$lo^*>guRc
%Xlk6?!h&'i*OmeFm^UK[f0;Q,2,''b2J?P'MP4sA9H4KM;?s-50I+E8*[\>"YKCoa)(\HZd'!cYqnZ]>?QN7fRSYfRV+)3;CLP\g
%/+jIKLan9S?'9>CFn*'V;j\>_b[iL4=5rUi$SV3Lnks96Gr"7ujXWcWO"VHi`+C<p@%,?lfru?K$sX7YQk`%;-CajJi!u$[TV?uj
%i0'=EC"'kW=NndOoYoSuI0Q=OY#-@b+!!<5j`*"Vd*6W^i-j\^j#]Jo;hC0G5-TCYVr3.F8/7@^Ou<&"Fu*4r7lPJqSkmnTE?76n
%6d9+(.R1E-1V_#nM'0oS`9,AD=M):peVrdD)AgS-$5K[XD%P^T(ge6""+3.,+9L=DQ^rZG/PI$@BbkP$lY*1[VAgq&ZtM9[#?#M,
%0UN6(eS?48pDS*iMc$r._%dG6ptpP>k!V%-SRDs4;K+o1SN2=a`=TZ5p]I'6,41IL.R"^-IjnJ6&c_`(<U>5/Per35btkb[lO3Vf
%c,Slf`b(K?qR`#>nIZ%"5P`\X[oNlm8#pW(f;mHn&?FCaX`h(7T@%ZEZ@I1A)+1Q.QffMmYE*d.(+X6`qhYgp3m%D:n;gj>d)E>#
%G7&hln[EJrboJo,iCf0-j-K/0d]^;A7_Z3+]eKkDp<Y1YVCUJ?)fh6QX'INNQ=6(`537@RD'4hs-(dmRHm7Pg&DdpqnTAI=Ig?r"
%<Q3c:IRcpti0Fa2A3kJ;B@.9roJ_cg?l,Sd3">1WP9eL2`2nCM0[9Z-5bI0X:1CpF>grPN#Q-`e[G6fH%^V;J*R*cL%r0\doR0O]
%@^Chd`B+<a7etjlrd`;qs2_nZ6E#r$_0SER^UOH"M8B"LVG]&eQH5dB+'KGtC)!Ne1URlQg8g_CJ=\FR8XK__M2:2+^_P"QW@=4A
%=LW@G4=]h*0F*',)7`(r.sT@mH9s?H?o[p-"P3"I;L5q9Zi3Df^?+D<M.A\rQi:8C//+6*"HgZ&3&f&\:8>-o'"pt45#kh``3>i#
%H8>Af$,1)#)\hY*TBG:c2\b3X_b,^UbBss`2jXIUXt;@uc59q*B"N<ISN@.?7nC'\RJANXN)rGW_:;'k\%Rm0:k&!8`#n6EWpt]E
%.t<sn"o`XC/,cNug*MO+:d:cn%sUC"Vr<+PL]7sD?/AfpY/.mQ(;&_GK@rLd,%2,G-AD@r`ajm<eqm)Ao<s\VKAZP')s2@<U\;1:
%o0FhlgVT<3LjQ'XI/fAcA1MM7oJh&e6g7XJh=laQ3V,9ZcO%iSRu=nD-C%ctPA[AB\6\^u)%AWdO#msQV0b*U)fO$W)4ino]-SAa
%F7_%[pi/l?k!GtJfFXBJID>d@$b:602cjF,]XmC_.TT$&L%@nIqXnQLZ><,TGK/<b_T*2MDl;0Qj$r`HUOQ<'h]I]2*Nkoh\;V1s
%9iID+m))$]JR%a64l?'I^*s"cngOp;Vc7[1<]:GA98plcDsh`8-d7lhR;EW4*N]87\:nRU,ZVha.T'Jar.@J,_+W&jeKb7C$L"dM
%-d(A"Tus[d:K@DSD#'GgWG\J<s!pdsiY[-[U0P$D:jb53k`btY;4Aaaih?%"L)K/tDr#j2R26rEkHZ(=VFG>FR:Ps;m0$)LhQZ<*
%61]JlEtVb:KuTGq(nN,;f3rXE:?<QCJDl*I,cdA^WU@[CKfRH"QCNlkD'tt#'_>YUN6t[J(0U3Xd_pCWJjAK+=eEaK@\qh0>ZOOo
%=T';`3TjpW4a>,ojOqMKa"Z]%c(?>`^X1rk?])6[S4/2_3sCY+OOa3n$l>9:F!Y#D/2k3`Wt=bW:7^G1L_O>he[cT4,OetYUhl2>
%.dIFc?O#%[?*ui12&kiE)^Pkh5`qr.%LqjO-6;+Bl;ANW=VpD$\/.N#@e8+.W4h&iR5@aG'V2BW3^:!jW/g&f*@Y.XOj/?D.4K1b
%!l9i<glYOjJ@?k:pIDDs=/t]7*kV(&Pc9\Td<NIBTJB-r+ACBD*_I8eCB:s_2AG3R'PT%(c\,PmRDW@tipP+.0(-(5WgY.tM&;KC
%!WfLF7j,>-M,,B;Drp!c<BS&)p`Mgn34KBJ$/1c&#u'ntQfrs%Te?"I\DGOhKCN8u:aV"=:sDh7fT^[o!pj=HO?<fR45j,i,^qZV
%nE<j"<E&d:.W-)\3<Ml;HNtkF.)Xqm;fWJLW4F>IBZg\FZ9Y:f$6P+V=`Nj@792[Y/7][ILBOMu28^S6ePo!@#),<O@j8gu@h-D+
%\<_/ag;jP?:Z:Y=*/R%7TW&\e6k`%e><)aP''F8V>S9juG]3]$n,sVYbm+tuA12[b?#gs/AesEW<K^tH=p$W$bgeuLW8_hd'Xqn4
%(ZC/L\UYs.M8WRF@$\Y@_+56;`as_A0m7Qoag*uV,+0Y)()b(g._n/$N5g[n09["k:Y.1'S2qB25oiN63+$[H>Eq0b+9d`P<J3u3
%Fs9Bm%_0S5]((a&NDW"XC6"^4_]T/570S!G+pi81Q:UD"$I(I`.B5O,=a&cPJLGEIL6sZ>DQs4n.aGs\p=9>:-OpY,m`HGh>U\H2
%67ZNV\L.@u"(ruJKZ8;2UP3@s,#tQqdRK%&A3*Y3DZ(KIG[&F7IPFhk$ZMDZguO!J"$*s\YTKSQj%bK3R_ff#?f]35Wkp-6b>u-U
%a9HUU3V'T!UOZM/o2I=,G[LOQb':].oi)[J[#>Yd>`rY5MEkoZ"ZHe\-;[UP1`292EU2%06(=P]E=[R21u=Vbpe[VZGSnUT,d^`;
%NXGtNU/_Yf#=3I0)ZLr%MXXeWH[+Jhm@c*"V[6MZ(<7sj/ZXoNJYQ+3Y`:/+VQ-"DY`T;2X@j2O9*+CBXY4o2k?o+hDRb'%0V.b:
%$:$;mW),X+i>#.;EED>cVP)E30uRP!iHD"$PB8nl&Hh't;?Aq!#[`P2'<HOiG2,p(@#1$.!:t?MSH`$fSQ@rIV4$1t=aEFEr.H/^
%ph"K1f"#e1(h`%NGN()CPtspQ%9@_0UUnBrW6feJ?W<#GD_hs"VQ?`OLmcGaK(a2t<@#T+V%U"_1I.Yn[_!RBX:V%L_AjWsK.r(4
%em4(T(LR<:.Wa;X-?8&HD&:SjYs"d0+X3GdM-!3)\Re^a`DnCt!5cSDRu!D<G*-='HUuok;l!:Nr,PF<6NAf,UYLkL?`V8:.U8Sh
%Ws3d&WbhJiSL:=9AZH.KKG+>J:5GTWlnXW*3cP_kBki)+LT(V&5mKj:)%K>0k/+TZQXWC"1\>pD(QViSDlFR/j^&5pNlL*'KPQ2G
%<S&(/.02mj;pXMBfqIj)%)A.&JA<#RF,#fX(^8d-E\U(h_lRRXGdGTPZ@T(g4Eai.19`>O:DJ?(N$$B1GrUGtX7Dd<=9Qg5d7M2d
%Rts(c(%/%Q;bQXr":Ij4>f<Isb6M+ni]Z0E%f:W,\lhp9Dlhp"SUB(8@?%.3Ko.NmRN]J;gd=mqf<$oOX+c"2i6O*5!Pc?jjr0%/
%OY-"cRDrt$2kP47hcKZV19%[/jE&^#l1QQ@=oBMnZKabn:"R&C^T]lu_/W^O-3[?2)&iag/I?W6LdVVFQU;%5(p`'%VQLd6nD,M^
%QWa$+6r*&si#"'l.uJ;W$4m,\&l7V_LO_%R/f1BfjdRRu\<D9?KVnmOB=uo1:,,EV:9u9UcKaG6;']Jo63^*%D'Y8&MZh(Z8_g66
%HrV@7+F-HJ5-ffu9R*?5[jU]J"j*3$$o:eN/t#i[So/V38.s5l&06licVUsom'4oUEp!sUQ6K3s*RB7/:0,MIO3H;"3*VMeS]<=Q
%k>R-%S^u"@/'l.C7+6Cp/*Vr2IBOoas+`pm5Cpb0nAqRp&cqf@.#n&!mpoLdI(,2X*UcV'_%o/?70`;oJPML[s1^0"Z]Lo?Vmp=e
%`n4j/8QED`UVq3q$%kG6FHS)/P@h1W6q=%%:lb/BJ7icqN/4;?G"@dMm&\R-=>:+kRtWnF3c08Fpj1Bn*mX<+nW(qkrGCKA^?3A"
%GIL/!1l!$'7/0Ijbf($=`KJ0W11)!`BtUiicI3Q%QYF*AQ+-m@om#V]Za?BmM@Ak6d2l1#^51h0WP#4F<b?06!k`bJhI&r,l2Zkh
%cTH7]4K&m;H:2^65Sti4>9\F'#%L^4B%dh5Z7*[l:;,`=jI'XUWm>3.>=e?Ras;P;)!5Rb<>sRa'B[FG;GWfo$)2ajB(jn*)PR'd
%NDNklBdcq3ImG-t7-^gDU.C@k9"ChBMStk;n9,FN[1!e6Vrb86XH.o!V9Okp%Kh%9c;GSqQF]jO!<Z]CJ9?Gn]Jcod:aQNc4Mn;6
%YY.Wn95a)-#7Oq>&d>p'0E,Ak+X*eo`StG;=#'M<$jqm<Y59(iD5]rAhC"=Q)j4X@GJ_7JN]5k?\dXfrX=Z\#,hBFI>&`4>.X*._
%F<$7Y.s:;*>FiV/)<ULj@2RueSrTGK_gq/Ya%2se3S?i&87m5maGe:P`2]90"9fpZG9/8/@qVs`!^J(71>pcc@tg"q\*-X%n<1IM
%`iT**>0B-(P\2<uJs:ghc6E.g`HNI@F>GNPK^u*nRSp9i<$UQ#TFBWQi$+T%i.G#`@h);]&\D([^Ai%cR'#<3&&)7_f<r:W_9I"D
%C%u9O<B*$G>u?E4r.@Gilj"1Uj$aRF,'+L+#%P:M!nlkobCHm$Tj.kX-R.Q2B732o*:UF15;6I)$:6"US+[*"CFrS%/E18+=L\Zu
%qL$*trcYS)W%'Z51JH<lMPeIhOp/8RDOK4.]^#Zg1:ufo;1gM+W/tOd&S2gn:7bU1c$lm919m"Ydh:fmJY71NM0qsZH'o!tKpU5u
%1UmBdg*3LYOV/hRaUfb(20^PW!DYD:5q"JTf!$QkrEuh^nEc)eg(7m?*M\K;2RJ<5`EKVDJO^H;id1WCYKZTG_@p'](G`soZaFFa
%i-jL.Q9op\q13D>chC(<#@lo*,fQ^3b8\M7ec5C0?bY+]d<j)er$AUtbG"iFmiS&_;f-R7"0S)ucO=R;*gD,Ab+p6<G@psm]`*on
%>X'L<i:6C4nakf1jr=-r/Mqt+.*LK%mi7Ktpu_S+kKmC^r;<ZP)K1-%9*il]++3pSV`$DBn(7Sa<dj5AoUoK6;!Tr%rS\/[M:H_>
%VjLl"c$pi5oA<]*[\,FQ`oJYbVoL6,2ubt)iib0"_k4A>IJt-8g3BCR9:#)_8cOi%!]l%hF?CH5r^"$_;p=h0>[RE`f4TqW^J!&U
%;&,(O.sMC0@jp!gf/<6YYT"_KB;=Y)bEU&lhgYRor\Kq`(b[WCf>q:;QYYN[!Vs^Z&#T;0]09Bk]D#XBRk9*ss/i<2lTt2>Vq5[j
%?X$lX0m;$<@Y.IBaY?6\I"KOj!SKQD5CSc0iO`fHl#X!)rG/"g-^g6Jd<Oo'We1U'</!e_E].[IIf=u.S='+I5>=nhSYc,7gD!uk
%q:ki0InRJ"<6QEE#,>L9RIB[MZe=b)5&BUd%!V<8_>pA8O$+/H<(='N#p`T^`&#\O^,4+1:B+$]$IYhIUX?,#lM5P53#\I.^VmIh
%5!OsSI,aXrh<??@"'>%N$ZJ').;&@##T*stm9]\90.maF>5o<.qcm?\UVZ8p0cmg=I8*X'mJfQ9fH6XA2>Zs<qtUbpF$dM[IYq9_
%JiWhV=5m-Hqe"U[g#e0i-pEJ]n'an<4o&7sD7BIXnutp=N.6$d`>c(3$Be(Qb$R+";\:p*rq9:;d;)E*oua*$2\9KsAR^76F+<XO
%p?6896$UDqH/k.JX,JCU6"O$ie^,]>ADbIgV]&Eh^:Yob6#<jiokEHd1PIh:Vj\X"XlU=djgOHlG0GUgeB3o.Q+BD\*KbZ5EG%2Y
%(_6k8fll;G>YB.[]Iu:9%"&kVnY@mkCgshu1,$g7Mi#1AGgNQd)DIWbh[B91='`/!QaWA*g@,P%_oBbVDYL#6k;UlGn+JMaP>S/@
%*`bPHC4Cb-g3%*.ffV=o6*2r1:8%Pn3rGud*SpL4_J\1k4Z!irUM5\$214N*mh9':hO[]HD-+rsM[G?$g=jbG=8Lf(j,u2Q8,5/G
%Hd`oRfQ??#FYV28JTZ@MM9iT;AnTggpdnuNZA$Ubm(6q]OJa^CHTIZk-UZhH-XC8<O7U:).fIt5jgF%t%Ycn5m6OY+7\bto)HW17
%9P+bGieNL"hKbe_P?cDLO]i#D:Zs8A:#'U@iX53;KEd\MKm?n5ZkuJ,3B]N"Z3s#kVmMV-I<!C^ZsqI/?;-[kcZG'3>,O)Y37%/'
%kanY`4Zqp<Wg3!@@lWk9*Nm[`qYp\]rBEf'GT]3lJ<q=bCVED`n?!;T$tQEBrRYu<8g'/7br!Dd6*p>@;4Jj.ZPbatp;\[I`\UHd
%44f34M$MAQhtm+5ErL(QK?%I=;ia5&_#JO3kjnYOG]6t0Sp%.0DkjcZMmo9)8"J7:[FH+SY0LZ\#HT98hu5b:UGhN&qgYtB9@,qn
%AF%Q=j4hr:C)598Ik^`Z;d?uc@Vk1r50S`drSL,qp8Ci+I!]caCQrR]Rp^mH\)t09+%pTVc#T(uXgs+4]?P-C7O6_]^2pDkrS]\^
%a[]WglepOeGAFjZ/C\E\7rkM8&`&LPjiH6o>(JH!2I:=:26CPC.K<sCF-4`CikA6d%B]_sr4,Z""3kB2,N@I,GLSUZ'd]Zr85*<^
%Ep)>7YPD%j#oZ%oG-**(rT<<,2sgRL9FFZOn+r%$>;^c?D=7`<NVEQ6"l*]@6QFL@M*,'ET!''-O3Dj'EMZ/!YVH6W=W#X<?1co^
%hI&(-mFEspA!G;ag:EoCEUsfu?9!cU?V,Fe_At\:YA$Lk8q5:_5o*<8cfcpe,L7Z,3Om[&):Y"!D]m4e[KV`#`-XM,^>p-*e_#./
%W1+(777=94*qEYXkr+!G\GQ]d(Qd\F1#`cqqQ3Va5_K@1$<FY"25'A$6Ru2i9-"K3pt9n`Y#=]A-RRb%%t*V>l,tg)8VI_r@JQ_W
%93#^IbXqYR+6TB%1kC$i6-N]c,N%NY[:8U@btuO:?]H(;_rTJ#g!2bu@mnm3Vp(]!/o'HH;N&)j@.I>7?TE1e4,Ja\m5FN$HTn'c
%aq,$%S%-[:hsPP>.($`Hn>0[BV/!2dWZMXJ)HLT\abKshHj9O@V>KpLhuP1lRb^@1LpDECet(BS1c1;>[9bmb[Ps`SO`#9Q?g2(j
%X?=6e^MjJXnf@1b_P[`9]U[q6!QMT?20_=Mj)9V:@q(6^p`:\P[IWXeo`MLiN;1!ie#\T+GBP6t'TMSJ./t]pb!HD_dVm]'Qa:\"
%5\J#3q1d1-l$2KVfmV;n(5)6bh.4Qj^8%#OZOZM.0<^+Yf20YtjHFK(O)^<\=>su;qnBW*F1ScLK*t[<1ED'*i_kBW-.QZ0QGI7>
%O*'A^Bj,?`\okW\=qk/q4`,Kp'AmBYrf(r4H)m-$D(uXj7b@$VIIQ!9Q4pDJD,4R^'!H1RRJFR3na^8jc>"*/CZbMc-%(PjGW+.!
%9\j"$cd8%#%0)\*lnbt*@uTm=Uc:F:/eCsQ1I:rVJ-l?uP+V,qD.Xm$(C&Y(AnQe=*op?nF-U<&f#E4t6VQ+O^?\f=eEY9#fW<M)
%\+AE"KZ[_U^XNs)7K8=)%GBVdNN]_N\\=uH@rI+0m"1`h(E3Ch6K;:F43p)dRQ6a1]'Xsa2s)b'[?qLL;G<+]f,m&qHu@[*>$Nka
%$@)D9r0,.h'3bTDm[#fV(t%-^**8c7-)gsAd?Yd=rH@qN`0\^..M3c-m#:-[-aL^S08YBN&do"Y,uJ!'WT<#tlmb#?X4dDUFtY'5
%#>P?hC\Pe$'oq%47Hm$,`t^4D<YlRDl6:>"d\sXQ4kH.SUW6I?L//TC>b&SEfYreg(=8.I+&1.!ns@E5-pFApBsTXQ<PY^e;,a;R
%2:Z=HAPI-efbrPEojUtD<U9V2EVT3(bJBucLB=ck.<)EJ\:RP'!.h'9bFKYY,Se5k&B^?bHnrEQ+A1VrZI"B2M`5^p\rTQ:DDnMU
%`\DI"55aAU>sFMJ!N&K(mp=&,6c9p$VgVXn'&IE<OX]/WCfI!Ag#0Vs;?)0M^COgae*$^b/pB"VF\Ve@!(JddiUE0Nb[3/6b\-p4
%!>V:>*mFTD!WUgWo-'0UPjeq;LCRkbSZ.ZCKEQu$4k@&toYIaqFjj"-+')dpY=XNl>$*[TD:%Z.\;#>tn_@O48N0[g1b7&CK\N]4
%XGcUXF0f0Pl\L>hc]J_'W,CEeY_#7pXIl4$.dd_ZLt@I/@g^X.mDN%B9Q=NILrNI82RJi<Q8Nk.2V(kgAh7f`3O\g);aH$q<r"V!
%-aql]9Wi%lE`'+REG^`oOSF584*T1JRp`Ch&Ut)iNQ"L<2;.mn'[<m@9jOL8325#4QB:4jp]mo*c/uP+Oh]o#ppSu`NSXk>d)0l#
%[9m(D(H'OF:PVAtgp5]Fr548SEO@so<JDT?6+_!a4QO)$f%na:rZ9I8ik,guD:"&[@"S9f*tC<2`s*c91"$I@(F$8.UhU^GLJQ8T
%+kLB:7Xok8(I%b4bgIAG#qhg.I3rG;QZ[/&TA*N(Cg=#_)toqs2Z39j9ZOPL\+[iiN@+&\I-rnRWR`/@D#H=d&4<o^N3tiiWis+]
%9Sd$/Ci$jNr<n7,qbT@75#BWuHfC^:+1bb=o<9eL'$T4gNoL5c,#!AnS>,+Y0`8"H't6%aCGZ0lh!R*+T=#WKIZj%ric'1U=rE;a
%@_+oNpap^:qa0UEK8@"I';=X<`kBNn1S2SaL#t#)^X.;tU"#P08Z^bhNg^&GOgCjSbEXQ8,V]MW4JheH-N1r"A`=[_>t3@h>.*a@
%@Ep]i<SLX?HotS6Y46Y.O'?$3Id6T99uD\sb5+"0(Ag+*2f;X\NKLhr?J#[%K23s!7+RaL1h;O"3b6n"/N-%$KFjT37WX>TZmAFR
%kF+#;BSK%/HH.5/3=WsEbJuS^gU"2q7\<*VU%,JKA,L%d;Z"N_@@A<:P=7%ubTV5ZgFnqrVu8s\pRn.=)js!Omj`Zbr:o4u>_5ON
%4ajL#kkX>!`CiGDdWVe4-MLCA?]Y"5.i$51J/.":c.Ucnf&8;RG[E[.4%J587cVKrj=G4&@Q67dGM5F*eG>_3$,@\H*dehpOn3b.
%?Yj?!CU&t^#1Yg=<hK-)Jb&u8cJl&)V``cf^cHQa,\XsPZdQ%Ha4=j&hrOpA?3O;ej@Jq&-gp-CWd2Ss.eVVMM/HZ<m70pkR2pg@
%d48n,p^o2%T!7]E7jZpq.qe>]/,dKCf(87VG,]Br3a8SlAIZaZ3hP$3$s5ogs'X'N\pq/3+5+3]?/Mg?C`Y$@B@0[fFO4gB?i0ht
%S:<?%So.V=itZlcR&.WDippLG7,<n?*nF+"UM5_LZK+D\PuT[i8`S$!k&jU+8SgW12A/*@_f9.59X\>r`-/s]Z<A8C;Qkl=KuB#*
%.&G\1HaQNu[f/<H<hXsM"0tU<29tV"-CM?`P^4/%9_J[EEACmiZm'iR36c$aQ0Zq(G9)1T2:IeMWXH)60VcamcL2j<j`Kj(q5E_)
%n]/RC-hj!aO(5joAoi*`$Q[`d0F[,GmcF7\RV=rlZW&m2]nn[HX\$+CmUQhu?Igkh\aZ3CfjDK0Lk+]/qW[Ze!2%j!1\l@RT8MoP
%/'1[GfG?s2<9dC!`cqk[C>#&!*_NokkO"i$Wj3C3SSl/0''])4>e2ZGfXj0O[^KtZ8d@Sg,M?\&-&._^XU6#T='jnRVk\R<]=P`u
%*CV$Ha[0_/*@DCnC`g&!(kup84XQ?jg3PEXHa:?(H4RW)`jWl],rr!ej[^aOgF-j*U[](<Nib7m[3F/]mIXE_KIib^L8(/s<0n>H
%@Lfl$eO2I5'>2V.)B/V#:F:QeK6o.4G`(imeaMOo)LUUjp\LpEV*2C%7'YOrCO4i-<pc_E@2_!<oVu5ZjN$1MAui5DQLdW77Q:gq
%#>Z<IDZ[gIeNdI&?Qsj-*V7b*FnSqE:N'iP"?(9nnt<fX;Ij]!]1FdTYIc-UleS-!qV16JQ_mJ3i&aSGehGH#F_$^*k`?pBFt^("
%6fg#HT?99;G%V`RI?i[:[p$)-H&H4%>K?3c8nEDs7B;d<4,96e]k"ZRRj<nB[?G-h.&[2=p37O0:A)6cc--+9k)rPIO1%5p*,Kp[
%2EJ3uG!!c%9A)@=.H%=],C@8oCEY"B%)ZVJjiCFo]fF4]7\eP2)F(dhk>Ka9p5";'2`;n[JakS?:%-TfXLD:XKSud:R-hu_1mH1*
%jcjk_`Sn!&W@\\KdHVjZ?(M1^jeKq>SsqOaFKs\crlrNFYVQ'^pK0L;bGsf\dE%$mL>d64?JK+md`t=Z0cFn$NT0B79o7eac&TY,
%o(bi=3k#cNae?fta"mHL<\_:<OK)W5mi<e%Sl-rHFRr%ijPsu<Q`g(#\L1Z*LP&QmmTqurl(kP1QT?Z&G@u_^@=XBX=luB`g46HR
%GL5"k;DWbbR&>/:>n&u7:(E#0WaS<(e^GD-D!)rb9Xi&Zb$AZP^.?,Wr1PpMm7)K*#<$uB7O:-QllOt'=ei\pJ59,%l"XYe@.IRk
%,tfm]RB?1#-moQ_f+2T$Hnoq@>a=oG>ZO)(JRN^G;YIrha=t4d3$l*m)SZ<h:Q91mo=egr^^[,E&T2p^I_>`qEd'Zld2d,7gRVCU
%_%j,Rm%Um"9-2uVqCmlOUK\2!'4nUqQ7fh:APWTb=N`OblVF+6E08=,L]&eg&TGPa#+1]WSU"tL!&j%c,*/f%#)(NZ6$BS>gBC'<
%?\=3mX@2c*WPY8S9:Lce]%oQRj5g-jUmsG/5)eWIZ<EV[jg06gk_o/rPJh49HR-R,?MBJRDBI;r*Aqh:h."@@gC*rF'!ut/:Kd:m
%,k9?te>VO'R2.B?8U0>K_k6M7B`Ib`!es![RX]l`;U4MU=.^rkJM"EB*)KqlMXXV(n?6\Z7<>h8+@Z4o*3_Q%jb%Xu$/I44nn';0
%6cTe^AJ0^ug.ocrhW?6R:LY/9THL:7fK0l[2FD*``4O%p6u72i)knhP&aZDW]Eo"!%JJ2Omot1$%Km/i2e<u+KG-B/_iX'Yoc+Nk
%,K@b)PLqjG,Fgc!Z5K(g9ebG^1QIId7XOT?T%TXgZc:.XMM]+S8Nre'4q=-+7c8CZ*d5"5)!6b;-]s3P&&3;^*:`P2n1WY-kVTPD
%?tOj\-\mj;n>AU>O>)^CR6!h<Yjeo!qargVIM#Ma[?)W=-l49Fp+W4&Vip)um49"-h7!ulS[lTk88jVLFiNuo(TQT@Aq?fenf9=<
%F%jcG%G)Pc3MAio=DX9$/fSd=`*p!O!]_otp\C=rPnhc<OhOIq9U\Z;H@#oE=:-X)M$dg0iGo\bS,WZ;E5u"6K^EsV9be3b/CH$&
%f_.G!9Zjp.JC:oQQlJS)Mk#Qm_a688"Fin4mtM]D)eU!XK5?P"j5baJ(hXg0/lQeaQGTO+-C5`9(E.+*d,u17p$/F/+.sFUbk!&t
%Cj+gtj8@n]B<6u?[Ced"R*hs:';E[>_W*B],9+aRntPr+$n:]9E$h;*b?)`4^`mt4<Y(cf,IA#),uE(^eXbLeUqDiBQAYZ4p?Lee
%$FS7r-fr1]_j.jX(3],C]SmF_(*j1u="Pj?:gY6@kW5N<iVQ'o*t6'/@bZ*\>Z0gf*:^VZ4/E39B_9-'`3Re8VOBO%IokIDUn/OI
%MgjnG=dnDufgoO%jF,a9@<)ZaF_Fc@(La4L'I2]-bO<QZFK0"%JNXN^TPDJWd5tE26H$<JQP[:YGW<:U*/uj_(?%f!LQD8lnb)^K
%8_`?Ak?r\g(mugfJYjQrG_k%<:2Ee(K:.^i_1/l@6#;Kc4uSEWc1>phX'N@C/^;#-7;\]Z_#6ss`Y0arrV!)Ibu.Lq3O(2UP<@$"
%hQEL"m5MVah<_8X670Di"&JVscofuMI=MGiSOCcI\P(c!H#,]C#Ji*$/VX0r*Q2O\[8P)GKBS''Nj4prNJ@2H#j9@e$fmLalfhI2
%2SIYtgPq]n!^:$ikci3.4E\F>@QC?8pMd9[a@-*(.R@>3-j[dN(">[/."Pcnq'p&p:M@CN$H9pNPuFf09,3daNDALn%9'8sE\Gac
%7crWp2,g&bQCq"u#O9D^hK+2A@8U$9NV[[eBjO9=f7ms8cO*V3eMTf`6[5i5S[AsrJ`\t2@P%9G\.QqrqpQ@eC@lVN!]ul%>PC1Z
%'ol2T`<=EI[WcJh92'8*PNSj?X'?uV[iRLi5?O+GTf^_<;(<PeLJD\N]3I\j3l,q(_&na)*BZPjqXk[-)9.\8SWa?/+iU<g]Q%1%
%H:i>$Y+Iq_'\Zm1OQ,q>=2IdTMEJXX^/FPc6^qZ:m-#N$D-??^Fro>OWk;O\PZ_Jmpbi*eDp.U?(Il_]l(J"[ZIp7\`22@1jKKSl
%Op3CB;`r]NNMg%0`]<fq(^:%ZGI9QY4qHai@f(1/k$$di=uW\AS/1"Fjibdu#(iC^]IW(b&dhHW(q"ebm,ErNbmg,br3C.JZd%-^
%$4HR2=gI$T`D=^Fd,\B-W]!J0)09Gsd#q\QTI%A0kJG4+FtTQGOiZDHj2O4(%i-O3Xj^OIE8`CY/3-^TDHSMRRV$"Fok5OuqUVo]
%<ga/4rNs,F#q?c4^(8qcXde^2`R8o,!J7FSj66`X3]7:,aR#A`oQjTVi(m7aZTZQsMk$fHZ`.sM]Y54q,9+#S>(:Y$&%.7s"Q+?,
%mZ(Yh\$qi^e^m4e-F`9W-:3;dF>0^WK^Wa6dR0&M(!OpG;CGbu-8gnDh0,YM4=fn(K*D_=D@fJsa5rM86NXmb(<R3dp/eQG;ZAK#
%/8(F)c,%LYW?m`%fikX"T#m_N`RWSj%X;&"^rBTV=35J+J];Bm\+@q.^Cs4uU;f#m]\%Oh\"E:>#l].fSaqTp[(?K6;qQVjjl%uh
%]\V;1*L6!)pHZs+IUq10I]_Qk6]k*,H?K!$P7OiT9c-E)0<`#YF.n-sSp;G[$[L_SYi@<5Hl>_%HW$'Nk-T2"pYohpM=$u[cVMi&
%b1eZLI'E-\PBacII@k3tm,fphOc6pF>e33_a`=7&Vn.1NQcS<93tX\=n!Y/*3h&-8igVO3[@;LsT$0dsU7?J#;%PHUE1Ch7Sr=?Q
%ghMQ2e!l!^C&2T%c5]QdfP/t*1\o`n0r83?adi!qJprM$dWmHeZsPKs+*&#N41:KfG@R:`a)q3'-/$MT"s6h\+3)`j-abnqYVd@%
%<4r+!nB1#P.euiJ\oft(DRKhfo^^^..JFfe_b(go)0s:e]hN6h+a'CH#Ers][1S:g7$RRZ\\.)!kf\G3``k.KfM(*L#j5XBk,SEb
%6r=GH\TIBSd`4cT-C<C:C\Fd+T\&BQZfNGg/m]"[-.RW^VPHXTGcD7U0Jlb5Q3p.ZRq4ZugJso*g@$;1p4h1uDI6ROJ>87lXA=jS
%l>>JME;)Y(?Ski*2P00%q4@mh./&bfG4MP-Rq)bA"/LbS`lB</Y?_;f<e=.3g_gTR\?,R'0s$(IMj*5lX^$')H2%*@SuMIC9b2(a
%E;F4<=2u6fQTTM,BeGUW[pk$ZNLUL8\5+o@\s_hQHdsOWN-96`DEkp<F_C?$mn^r!dp!?Nj5Z[^Ohd+N;Da`*S"X(LGnI8KH6%T&
%:u7qY\`@(SXq!>')cc.*c?Z1&0anJ:]KjLUb8f[Iknu;2fpigrEsZRO%"dqLF8h.n)=$!MlsUI0+QWccEF3oF)d`DXKYjG`AS(RG
%D9+#((HBY+>U\K&)QeeD?nPA?.HOTc.eoFt`bRn4h5QE3R]2EGBIEK4>E_WZ$Ds$Vk:j.SNJ//WK2'o,E6\7\RUh\/9+,p+C++4m
%%?7ELkYPg90!:S.1u>n*EW@>EhC]\C<(N-jZcmF53K!L)3Yp;ea[,6/K9oWI6@5hX`ah:fG)u@OgBdP$6NcF=16p;(!u;rY#ELq0
%9kWa+5:PY75m7lO4@Lt`?YSLF'0C!s\<M2uD@U\+iCsZYOh(mb7\\)8:q%B5mE43bUdpd.U<p5OYtoDpRt1a>rd5\-esj4snU]X7
%1Y:7MLEJeEo&R5?Cl4[Ed(jFs(XV&E#uoo'BUYY/Dtl$<b"dY-T:Zj^V<K:ocTnj7-JrU"+c)t@=;9=I?(-+#=Z)LX"_[@rMtBTS
%&6pc-/()_'_,`-l*?7O]g=^Z01bGn:5@uE!q*:qr=^)HDm=]$MoEN7iFra5C6022j%Pp%L$o#q=OQGH@4(RFJ;jSk[)m/#Yeu$>S
%8tDiP(kI:o<P%cK]oW`l1m[O+hVO-H9YPt95:2XU$AEN1_j_Hh@EED`a"sUZA1d8ZL0g8!()A4*AqiASeku<&PNNn22>#8[>#0<'
%kG.90b24<-/@#[T>AE9pku2_nH[-eue25-..WFS%VVO_akm#%EM\jT>PreXN/oF"Dk1VL[-c_G,giGE_jVk#p[.t%A)/lbS;l#'c
%>`i1B.,hlA8V1,;WpAsQ6bYb(_BZ$%N$ij*!cku%jX)\lhZP^T8!!,,`m.Mu,IA7%@WleuT&a=<`iE`f?gT?VW##OCYf"B6oAhWp
%9<:(phE==U7C.l+,"1`b[&(ZjRg01BHMJ^g/LR_XYM*17nRRXbRn5VVf-S(q.@)NO#iAcZ\*eIsF3.m#(dAm6#Mu:F9&F4?,#_-9
%3gl!$<fQJpfgb\<REqT7=A,*q<=*KVPf%H?8a=]*!#JB?KG3+8`B.+L3S_bgVFeMVH4FZ1H8LiO-VkkZQG]]Ip.j,]=ZlKS>3@F2
%]@+&kGE/SGn=Bk_=ua!VXiE6$0%Xf$/I,!.S*[a\?47/oFRMBJEHHi:fc[1klT9gek$uOEh+>rGg#`-`JGdcKSf:1fl:p:?b\ln=
%i:_Hk_B#Lj7S?j%*Z<p6``ud("cj_L"mP7KE$'+pI;miZmjWIoIib&O<pe8W@XSVXp2Vsu.Yj\.5/5ao*;Q)PI,cA>:O;]j9_'<g
%>:m)S1??p>g>-O/di:J>pd3HHKl>H3VfZ0A/g!bs_l)Sc?!-j"!$6/_cdntE-iNC..3$Fld<=r'o.'/Gcph![%d)c\)p:nN[?Xt:
%/U]h,66&@=O;too\*ssP=luu;)g'3FFp7E2b12>)Io!=t%Z0^IDZ*s#GDPe/Y+))9\mC5)NZpd64`knRP-%_ClWD^(S$64,%Aj)`
%=ko$MJc(WV[\';CA3%o+Te``;'ttF%ZQ.(QZB926'SquME]^Q)GaW%>Hs+`W^-7]jWLMPGY^t[[f"hpP4"t)=MOMel*>F7RafCeY
%c+pY*PTI5>BfUKd8$`,-C9,mg=&t:3lOhKjLp(\gam$86IQ\Y'W4ci>Q"ZeFI*J;?OJ-"E"eZ^BX<-;?l`.&a^HLbQ-G^pq^9\t(
%:)s-dr;E3o3Y0F&9=f"MndB*!leWo%XldfN]2O/i@PI@U(G#%H-XQLGbq!LcH&k[?^&*>/f8[t-VpE-HePD+7bJd0Cfm6YnCF8hj
%7Na6f)2bm][dA.XM\!=%W(mQq6*3!_oGX.6Dgh.k9Cld`(F(&Y5eM:Qhso6hQu?k4/eeQHp4nuu/->T.Ro7P.P`OriqsK+`GWB'k
%;.V_'e3CsQ@S?#\pdaMs/ILj25^m-Rj\`X6Jk+A+^r=`t!qnGH3Xr(7NkRUQ't6)a,M0V'R@2Y[nNo%#$S"<i>k^'4mu'Cu6e/`c
%M&)i2g6,(P<ZIYUm)cgdX_PR\I8FeUMW0n\R@I(2k2S8<nF3kD?786pA5mZj2Z/H@IEU-IEVgBJCtn].flRX+ae'-<nZfqXn*nps
%m0hj@aWm[M%mHn0dq<!:27^dW7eah8QS@n\/=\`ORohM*M^C5ZX0Kjanb_S=S*d4d;2o'aio"pi=LZlE"DeBDA$.GA91Mr[^m\I:
%2GL1);kk[jp?6l>JhE[Rl)HO"G>h6RT9!I;-iOHM<:P6P)V]LR+]tJE;+WAiTLHSeBa?KaZ7d"5T8s^iM"Q4e707VtP?Xnha<,-0
%>;4?<G8=DTb>)n?o@FY;).%=mN@bHDQ4M+p`jJZjpt:oQNuP\"hY:=?Ke=:IDHHU1di8M0lULQIh>$B\A<]<k^Lr>Hb%i6jgo:4m
%CC3;`ro=QI`OQ@r$1j3R?F\o"Gttk4DYH@%;jMYN_Xi\WT&BIE:p"%Vl9=V\6@*t)YBt.O0=ak?)t'jJhOBs,fl/XFr/l0j'Rn=3
%d0hb.b+qmP9mbE>V*4QJ_*p/k*&mZST<e>PoS6$eEjW.<(#IMIHgS."_'"`#k=silRXb+p;Ye5#XYd/?)jB'M5Ij%qIYDK$ej>'p
%1<_+!Bj,V^eX^X&^1$A<SoJh=@G458=d65'VR5Eul$'cbI,Qs/-,r$uHf;A$4+ZLsK#du[OH08t(j3Q_`m#@D\``-<Q?<'&<F-dC
%)`*oF04Z#OT@6q@'DrDs*7ms,P*0RB>ki+!P5*2in#3.I[F(XNRIKr6>:`[eUkt$.fZ+\QNUj[ek*')N%c?C(o5tUB]@jWrFafs-
%g^1d:L?"im=)6#5^0CD3s0>`lef1;phZh%aCHa,J<123k8`&/leWqcqbX<+h/m_lHc4dR]hWg"`Jae4ko9V=C9Qn*B=8brdW6sM+
%PJkFP]XL)f0"t,Z>kKuR>X9\a\<aRi=_;T2FrGjp`%Q*en3)Fr./YS?f34(/ooPGWNK\(#dY@!4BC6(UGe;JopLgBnnL4(s^YRXC
%10\CH`ceMj3nd;nRO>q'Z@2$4O00f/RX04@Ln>t?7QYhbn>C_Y4)OLFZp4Tge*dg^AGlFdomkpA3XPjj>q9I3rcJ-j@JhB*3mZ"=
%@:b+!b=VF&g4^'<kO;P<5=d(=#D/\X(,jMP=-)fYpoqKX^Lghfq'5gKc+g+iI=!'NSr(JK]362hf(djmI]a+<6R[K+GER:BXU1W:
%]D*,MrX[Ria\DQ9JZSti#HOCo"[6dp@eX]M4YC[3=&,c]M-WNin0':QVn$nZoT!93nS9uYZM,EW%i+l_cr-Z>*V$=B2?qMt[@Yhi
%QYo"Tr^lSBYa)>VV*JoG1JPlR_Z#:Qg56Z0jnJ:[/t:Q;_!fW[[^m*dkBm5sj/MUf\]4H%Rhf61O^uhr,+6)a68C(cETuRW^A.<G
%[Gf7V0t3\+gP]/hJaW:t/nbsXA^_@P7d!MH>u+Nk^n"j5Go_1m5jT!M,FIcmnIr]"D6%Y!NZpN2L*ud)LLA,e-?WYKf9M-?R!b",
%]t6gAeG%Qmfr^pi.14%#hk)*\^!:M=D/ch$OF!QQWD:+?R<ZJ`Vd(/%TZ)P9*4(P,osG:$pj&FmG&mC78rmb4U\HMaads2W4N>;`
%fg>+k.P'!%T7:a$NfO(#]uc(5MnV]$oA8)7*Oc8VmpRl(qpR*Cf?C)d#2n'P1SV23]mMh-ccL?ZI!CsZ8t4;jnSPK:npH@kU;m!l
%?6rn_FSmOTWiN7&4h#Zq7l6IGq%8Qk(aMaQIk-])P3,&.*_#TgERibfH;HArPEW[__3u#8P:Q6sra8igqL`"[Sj-%9I.R4kf.&3;
%..-ct+&.jFJ17_l`ace+5.u79Do@VEY3\Kdd)<<Jcm*uIk!B/UqNG5U]91#kr2SeP-n;cWbo^&7N;J6sR8a+mM,aGS%'4\jpC,Ag
%pt+QSJNpO!^%[;gV1F-VGWY&KS-Mskc)[`mJ+Oo]k)WN;@K4noHe0qDMW]G6bSkpV3*Gc%dnAuXeom)OF>N^QBCbZ8Y:!'Z^QDG*
%rUEP\PCL2F6S\C\f<1NkDsuo6^ONZgl;.'6Ld)X3aS=6Y_.S7@D7&<K(#K](_q!^u5CYR"qN%E#Uq]`/IJ0<$8&G8b)U80*X3%fb
%PWr%DQdX-Ts(_BGnD=X4Zi7T"?+a,"J%3%"rhoAUKE%dLD>L;7(F=S0B"6i=f(TONet=egGLiQWIkQ9JmN7t<%fGe'lZ`A>P8jf)
%q8tN**2ZI4CT65q+On!5$q/P@;BS#,I0iFlQ0j)GTA[^]5^SD2"n^:::gcBAIgGDC=*=Y%dHu9'h7>!<E_j_j+TIht"ptlrB7[Dc
%M&NnfT(`>RPH/`^<WYZ"a_i6j>k1)aW]_31\Xb+!p*CjF"c&.i@8YA20U)0&)@Vj"/&=)c^D.0dX4P1$M&lk4j]2n,CJ#kNpF>4]
%cHCAeR(.CQ$YE.pc@Uft.2OO?GBSVXLN>=TIbThdDhI$Ai1i"8"=qI6.+ibron%,C(f(SEq\SKtE4hKa>m[%g2cnQhe#t9aVh<QX
%[!hk\UA6Hh/&oKuqo[dcd(bahaQk@38i!tu'"QRo/iLb^/(_'$_90[H<H4iJ&)OKH:QAX0SX8kgAN2]+XnoN)]6KWOmH1d[)O[`m
%XNIH+r[OHa,HEo(CO<*2WEECfBUuV5:QBY:X!JNSXPO..2lfa1cMMATX\DmSSmRAU_e-$[k-%k9[Im;nHnDeX)m6.kYe:f*b4f\.
%Fts3<X<#Zgj0b)?:4KCY[^j"nGCE@oX%7)MmBrYDYOs^'Z*e:&I(d6P^5f?d)d>8elIBB\IJ\Eh@6J`q:tP;OV>>N.@;gYo\fD]l
%5>>?0lV2[E=mm*rcg-ci!\Z-Zf(X@dTifdR#uQ>p6b@:5,a?Pjhh4b?7u#1bdTYknTi)9KO+r?b2^Qku,]t(4YGW;Hn5_SJ%'r9/
%0>.<ANeJ##1ZNF/eu=FCNmcP<Q\#/rgtjRA0]Dc/Y&17PhBNuE[JSkdIE]?BllW6uNC.9RZ#RK9W,16!)G_=&DWP<%dseseQjfST
%,N8.X@ta&ukK*@*TGkqb8Bo6?Au6NX5.MP".Y7,)jR#?r74*Qn#/b83SqF":P09J8mR.<SS(Vea]m3Wt#<-QCMooZ!7EKH@Wh&Hh
%TO7+TUT8a(.#UTZdH'QhFnE2u*(6tQ2iYO6>b=DGZ&;Y)qKaO.,,tI'(gX1c@u8bJLP[$YKs"oeKq4K2jnSC#eii;B[fT(Bc;sSs
%U:R2QKA'@PHMFji(8!!ZGF(fq>G.#1epHqd.YU42*D*dMG,0PgP*:nQ`Lq>GR^n`akE$GQ@:4@<+2U0T=[!:5ah+Bg9?pV7'DZ[a
%Lg64o"1`n`]HXEFm3EjelOgE]aEG[FqWX=$Cr?fS]hr8"]b"FM_O4;/Tka?k8S]uG8s,s1PXf40TtD+HFZ",dLA(u'X[tRJmd@;:
%p#n:H:iA6m->MRaAZUoWQ*D+hCeQ\GRK^'NFF$s!gc>gY[HOZe]l.dB]!7C7qf"3D1mcoGdIK`jR9$qn/q#Zrf@\)q8sp9oj*:ZK
%n8s&qY4bDAeOP6$2QgPo3B=_&G7G.=qJeQml?@U0VgA5"nR_pM'#YoPj._Z>],DUNg")2RdT?Onf69.5)suDOGWZf3KDX@eLu1*o
%_g&f+Rt5"V=,snFD)Ha'gWj?\a4o_"@puuuIC-^OWCYW&;CJL2,gpVuSRSXchl5fMiLT`*h90\Xs#.R&[o!\)SlT%&h<1i(j5&[V
%VX/.@*09f:1Y'OZe)QGchXfP0WkdJq4^?a&7amq,^!kBhrn4MPgoocs1]*qU`COg9*Gd$b9Nb/U6EC)R^"4,KrD/KFUf+aA-aWL#
%fAuVjFYij%?>67eG<0Xkj*]QR*=nuDl7$ie9FXM"#RloWSSfk?,Ur)V99[Ip\lh2+b,jAllPXkh3mJ_9`F>7UlW,bsHoWWe\(:9,
%fp'2_c<`^0PM,Y!ml%Y(rAMr<DmbPZBqoa;X.E&*#QAsmpHXZ%:C$^b.1UFg\6:sSG`RMJLQZYI50O^2S\pptG42ZEd='8XQB1e2
%a`.#,IsGBokMM5Nd8>-\:65)e_8oKQgj2(t>rD>96YH/Rj5%>FX(*P]$uhg*8KjmjD@=)&,R)("9'aTY6L3q9m3F7[Y>4fFWUrdX
%Z;"*N;VV3"#^^EZ->E2QoNDWoT([=K12!kUh"Fn58KqgAJa)=MHa^7e,cs\CR,<C\(7usMPB6b6F*b"P#(cA%,D7GUcC5Ca^'JQj
%V2Kc`NEofR>Pf5Me'"N7<b(O&FKfmb/NoYYLLktn+]?n7q`EnK4EOVQSM[C6)mua)Aa97SIX,!eS6q<!gRTk^Bii#0C$hHr2:o-P
%fAT[80?.6E?^mD6GPZ(4HIU`nhU'0\\!s]pB`$r"F&KW0]WA?lbi<:-p@4a<GQ(4HGo(B6p@$.nn\JKa)_Tphc1/gPZ1@a5?[o*D
%4bS#preL,\qsNF:3o#)S5K<2IjQ#rJ]_Zku?7J&Ib$F_:<bV!eb^\5lC9roCkLem-p,O4XflQPX'mU+dq<:P`06^`omO,Eb9"t-u
%fhYjY=7-^?;Iu:MSl`BSMT+j\rMis?D,`0'qWS-D-.GOsq7\aHc<':QoC]57?B[kOhUR%aTcQd/UUYZ;C37qZ(JX#\^",<X^6pl@
%c%PYf&1.@&<a'j!m>M;LQ?(j>DABX,=06@Q1hs'%iU-@7Ac09u5:p8PqF6CNr*/D/dX)qIk'&o,>.<A!as:,&r&1WuGI$CXpNA#F
%H@_RB?8&Q^lLg`>m\mlA1=l?UFnq_<gQH^bRk-H8*$$N\K3!,5B1Si)i36=0IMiV>rZ`9B?%:PVhQQO9^rW^t)P]^enS7^/_%+KD
%eY_:g1uZ*U9!#P5:JN=DlMMX;U:.5$f9!Ng@_HHDmnHqh\!\5MAof*?B$@tqhL04XI1jDYLjO)b1Y9-$o!YlJ^XF3!@Puc@WEV%Q
%b4e!36@1gtng_,&lN#%E\(&2N#5^*ip&[SMN=<qAnXT!um2l]<<b"l.+T>h#hElQa2.#$c^7+i_0="CO/&B!+:[p.As!*s:h_bNP
%Wk\OBnt,:onkEWl&Xl%YZNmG!qctH:K6?s)FgE*\2?&5N\:XD_4YQ2p7$&5a5StlsGL[bp02?eB0'o>CSqb=Qk?i_$HqF8%k-n]I
%RGru0paZP?).SO75(HNK'L*./!X?FF8L?,g.4-!%f%>Qb2]SN!*?b=`R<\qmhgg^$q..Tkik'])I.^k*+cL$S0hmk101oqP@t5J4
%"J*N!TkhB@VSj_p*pPSZaL^YpWcF&s]'NqR=J=%7oWQ$.1e'?s4#"`f'H5GgjQ`XV0u]4g#I>Vl,^&)T?i0L4U;p5tAsDO7RHVj"
%BGa0g%`HLhpSg]j#/(k36"fDVW\Id:!&;r3KE8,Q"%G$S5chpA!u8TLobRtk%'XRf"sbrM`cU&+_Xs4i(n-(N7k/Mm@_?Wp+rXC:
%_An^I29%HU=@CIi(8uo_<s9#BY8r<-Wi?rXD]>Ri#=DR?h-YX\/Q:[@$mZKT2d?h=PtKWC[OqcU2aj,bVNMdMGssUc5NIte+EAQG
%bCPKNAR?(/;$S]%FNS0JC[sUu;CJjpn5WL7dG</l0*%6g^q%$bWh_(-)[V?%_[N.nNX68f$k42Ldn#M@3i+G[/q?*L$YIdrU9P$u
%9M(%LM49lBGblFAB=ltXJ).$IF+iOkc]q\!@3ZgXXRti7`lR8`QiE_@$Xl/hmLF!&hqIe)7-0f3;>]a`Su1+thV@O5;/A2,X![_I
%h(PGmr%ObN=RBgbn$hh0WTV_;^@lU8A]:uCQR8!F`'(U_&Qs(%;3,f$=57^X`+l9Y)_3]Q7EBp<elsN;bm:=O)-)"C-',1,rk150
%UmNW!i-3i_JA>1N2M`8+n2#rsUi(^Za_hqsG6a%?&C*h,eGtP"L8U$)C8qMs%BtS-_`0e;(.%EUPlB9Hr[jV%A\n3BG+50:KI@@a
%)P[YK)$cs9bkX($[fumVW(IW3!MCmQo,[K@@^Ja-:E)mBaR?uT"8GE]QOP1Nb'X[;#+5e9@!a<n]BEdgA$p=?'hDr6oY3<UYLs?G
%de\;b7b<>2s!a/"0a,`"A>ZmH5sq2$Lgp\j:fNG.g1btZ)hP,McuBj;'4?j]2?\PE6o,fMcqp\b$atgG^UjrkDW=DV+ISYGru/b(
%Zlp9t&E>uk#a\AJqEeWJc*^[`@lXUj$l'O)-La=Q<?:Ho;:Lu,W!4p&$mloq_'jtoFN4IdL+#HQSaO-:'RMlAJo74_)%k7aH)N3e
%2jBo>@EeA8USuAdHNRq^5iWSN7N-doSP`.aVT&n\qUkp:>n>J_/kBO\<5aZO4BA`N<+?We2iT&5jf1uSTb8)/23bNR_'G.0(kMcK
%:m3UZ)&u0nG\R;&..fLG0YjWL&rjt/KgDRBL8t'2?j`\hO;`;l@0l"0B#LX.,nrUPIR#T@e5X;:Np8S2&&nmNRR/u1_fAP(U0Ah9
%'kB6#].EIf:]T8+!6>S6(X&Jh#01V#2ak1Z1_*B*+WXidA3hU(bD%Qu`6`IS5mPM@m7so/Vj'sg*1Y.pZ:75HXP.6U1l2ei!]`uC
%Nb'ui:C$-r+DOS_U7Vks)9BBa!4rkB(gm!`TY*-m:+,ro*!i10!pru`1D%4A9GI^0.juWICl#+,"'lZL!*j"PA/7;H:h3;%W_f(X
%7QG%;#1R]:i0+mQDs433!YrLb<pl-Hi$\^7&S8Ia^pK20_O"IXLrEIGWNKh5d;TPPf+:>I3CH?VLfFRXYr"t9("%sX9]c3(,pm[O
%</DGYj`H_*cjt#JM2i-.1obPgU$=s`L<;"ZS/O'lO].VJ5Tmcp.#Ubs2+&!A%GD,RPDKQJZ7ILG_IQ5''Lkfb^f-4GF5^:71]eCN
%\G[)&O[@k8i4,Kef%<57"61(0-!7R41"7rH=YCm!i5R)>*Y=$a93s[O#M%rX6=qQB*@@J3]mR<m,bb,N6iUo$mEc8jPG?/Qd2j-n
%VCFm=L8TOeQo!$X!"#q8WBlas"C2b*hu\N!ehg5"!^`S[6)Was@MV=^h92H<=q1[hUo<u[J=pYWat89s?-*LV,aUe;"KDlFXr,?4
%DQ5C,0K(up#V_qGZSQQn0!l1_KUFFn\nH5Z.UQ/GD6'BY"uGq4[297Z-fICiG7I9=@!Ba%%i3!s0hI&DnoZ[O8J%K7XLo<9h&%+`
%=:B?9Ecc(?bV`<h2]"j;*5n5H&S3uP,oHsQQD+cP#^jp0$J^WbQkk!n_G_G+WI[Zt0Q.3=NLkrj!*?DP>:tIV0Vf.(1%do4![2@i
%9!J5\_n-%D"MHT.>YluZ(I19uk+SH;A-#Y51n"g;U<J="+k/Yb(Y$DE#Oc-#S*OIWlA&3RTpJ<k#A#=u@\baiL"O]5nLfC@7J&3e
%6Kln\q60uo(Wjo([:S]Z3r6&`.PK6-`DH:[*4o;SF`@Z70DZ:1c#j9VQI*9]0!o&log5$tSl"H-+B9-tVm.K,]5<pT'2b,JO41Vn
%!u7=%eMrO.P<^fU-I`kN'7h%RXD9Sq%Q.QKpm;2iAsm%"n4&@'k!8^1)\Wc'ZWI9^b;,bRduY8r-\Z5-]"uj-bXZfihh2RK0T4A:
%iMI`Qn/;N*`is],+Aa_*Lc0*nj?SM/HoJ=r!TF_NUhYQJ<)F5l_iu)Q8koSnk?q<pq(b_f1&+;.6$VOg;h^'aA>$tuHr4O.%n+=P
%##e:u!GiZdM+i%Q+uTj0I-8Ti!bhb"#`kB3,p6hK\u:Nj#@^H.-Ib<]Xm$YW5atCH+Z^8OLP@@NQg%!J0]0&h^`JaXU0+.W[%kc/
%:'8H@j1;;4OB;IaC+9u$**^e;BBZpD+BXf$Jaer.Y%p*4UF]uF."X=WM]9`ZCA8@7;Q(#J>+'=8i>%CWWJUPn:^u7:$u,kZD:V#7
%K('AsN]%HuK_dg0,RT6`B1*6/#uYWWlt/0G-E>`Zrlbaf&h_uk?D@:Y"h,#hr<j!N1=Ls$rlu6;?'9:Qa+&?Q%F\mJDk1+;V)JLp
%_\i_Vn3dTb^qV9;,0T0N/-ou?'U1XCC>^qdXHkLu=dWFo5+^G'!;WXI`dA7CbJ?.?>*,0q<7'`E-:i>Wc-GgV2iYefoUfb77&!"[
%J$Wk16B;)QBqS3UbhOo16ECcEOUJ,J.N^uVMG$T=_+@<E*('F`VZj&V>1?Bnj^#3\*b,OaXgV*;+FHS`UCC1%Q24aa+Bqf%eNKW5
%W<lHs_Hb?%i_<CYF8Y9^j1cmX&4mKiqg4;i<eVOnET>s`.Cs"LVVk38D[*0)R_c=BKe"K8R%]@!>!gcG+Z2',e+oT1eI3Q=@r>7`
%#TqI\BEKPq:nJ,\KN=qZ7l2AH6)mMDX-l\p5W(L@TA;IBDp\HeD(Kk8s$fapa?jEeo.D@%@f4gZ#8BK;Xp+N2JAfeK=5X(7-CN^m
%\8_o9#ol\r.j?sO>S')n-ZEIAbm[\/^bV$=iSb^%KQuL2]9u7&KkY^b5J(M)DqOjGU^IiVr237V`SA_f/ORt1o%aLJ>d$Y)%nr:#
%U%8W/jUmdH/#s/5H[f9M1"G,u-L4Y)U,!nSLh9-r86&--/l]@TY:K#Q9o.KM,g:/gRZWGAG)ef#E@f\<s1l-qkO_V`J$X,k+if'U
%Vc"eS8rE@*<7T-jCnOO[84t3^=FR59@^=:#*h=r9=V*)@dY[7+#$0_Qjb?V'4J`:]W)W;t:uRgkjrR>!b`'[ibA?7:>i;$>i6Q9Y
%IrdsL5IX0p84$^6ZXLpAN;r=N0U3P2aQ842.cVmt79>cD&;TV,(-GEIn+F7QcN.;L^/HO8)RW.*Yi[V&V2+_%8mpage8L9u.eWLW
%*089dXU"['9"jS8p[SUJCUb\V/9ei.XjV(<B;RK:&)WTcO-;6k\en-<Fa,&*.GmR`njBce]bHf=\XG.ZXRD^9j;>)\=PO&(\/&?E
%T39rl[J'BJA\<"%iqJW5Fa:MX.K<3tM`&(tGH_LDIAj96';GE!j-$94h="7lq,%<\s-!*`6$9'b7bIHPEN,sQ(0@eD<`'U^gtkB5
%LRW&9I5OhUKM]=ae:E',i:fudiNBYk?s^W%;sH(@04X_25R$mbA\N(8X8FU318*12YR'D^?N%JR-f_I&^'Ud]ZClCR'n;jOA3?rl
%Wjr'[`DerYg@G;E#\)fCO\@L\j"@f9mGl$4,9_+Pn.;>P.:6*%@DQmf7\"VuqoFjmblOqXL:E&@iXs\3)orG-lWC*i%"]W:&,kM\
%:h#:kRA<`c'5o:^i<*pTO$s-+#+jP7)(#qJ5T48_j$pE<!--/MAffp=])kC?A$e.;4BS:eRVWR5_gW5U:[Di6//6seOL[7e#b_7G
%nUifaTSX>`-u(5niI)+'),Toknuc\mRLm.*/E<E,VZ$P^?!D6Ca)QMdT`;eD",6ghID7m*64tOd*#jbEpaM:B6+N(X+PCPs^JCD!
%IJ^_rOu(nP/g[W.5eCZUqXScOGBJ&Y.5sQb2+pl96.H@!5:>^FXKWh#0W!1`4-YU]Nm@BoF/!#Fgn%%9&&,HOqDQH>0Q9b/\6dpa
%dPF-J,Iu"cEVN)P[KdN,P>44;`QJU3)*oZ*A]I/OXicHManQ0+fthGS?e^A:T%l[A]:-6H'Hi^nX#2B]P`*/AfRRoID4bD!E:U6F
%Z@Wh?UXo1n3l94JGQL"p,@*_b<c<p7++M'\h3=iZ_@mUQ1SsGratbMC4#AZ(fj&m]6_l,2]laO=a9W&VMJtk:T:4*f.Zfc8dG_(I
%mMS?B"&Io?=+Pn^@"N@H:5m4!SusL#0sLVHTPU%KO@CH)nK$7t7Q985jIMjT"hB2Bn.JVd=%.L:TIV7r/Lppc>o%"aJ[`;990aa"
%@@"Icb(k+38kHpS(>k:_>N;c,!'eAr$ZAb7P^K\$\^RpC'!D,gDO\P1f5R#3X!g&_0mW$Z_/qM?KS-K'Y_%[F.kZhGhp93X$LS6_
%"H:8JD('1r8@C!5[>J']"EDe-m!6&Ub6TjoPqtn]L?g$j&qgeaO%DLCgknC,UWGqfUb"i??l6iMmdR/d&ag::h;DDC4r)c6.su[0
%!o^YOELMK-IA#5q_3D5'[7n(@#i(hb\,\Im[.FMlLQc`<<#-JbJMP5NYr7LB)eXd/UJrTB/"0Gg;UHDOHE8NjW?`sh%aem/cH3Wc
%5_HmB/:7P>n:Vie1f0d,&Fm%rEL*H4WAJ>Mq.q%+:P.14<po<c7USfllW=Y2Ili-&:^1h\L]i%V!p.9(%m1t=eN3_dZP^LVihM5A
%coUk:*i3f]Hr(iYo&L];eW,_q5mM"P/S&[?WZ"Pfg_>m/X0k!CR)q(r[+h68m>^;/gCt&RQ;)K8>2*?1f"kMF(rjC:hmOtqTCR$2
%^dkI&(q)]ip"M]L$`(]_2t%d]5,_$ViQZ<M:g/.WD&*o*3["]I8u+_!\_TM<^_aA]KVc8o?C#c$KnXhng(m)d2&oedl6`mH]:uE[
%Zas]b]CGmU(=jihZC;d*g]'AO<Z-L$Q\DiA;=:f;D`,fjPZ,#Dq@[PiSc73*l?3@.0sO\:Te>8-P[%&>lK%"$?+YdDDeB;F_)[HO
%h/9lDIUQO1kMalBXK(l8=][Vn"(<6Xq=SKfS>)MP_]CD>J$4H+%jeZ%,drX);Qqg)V7HuX,A9LJeF9k,q%FsNf6/+?>:E4]3K-hk
%DS/3CQ1E%=]@U48<Tin;=%]g`b4Vt5g6ACh;ifKV`)BO5@.L;e$MGjDlbGZgV!QShl(kMKQcl3(DmiWt?ubR#`4NiC\YP^*X5:d4
%XATj:\^>'-HO??PJfN.9/LFfD4`#5ECs!L!1.6%G\=_g&!^"C%Dqjs:CetN9#FHj@H".&XV6k]8fr0OWM^rXN$qWG#,q",`Tk=6?
%;DG;k!sKB*msH\3mi^NO'"4`5eQm$m1Bs>hVHlN4C@Yl]eQPfCP=cj;<jtE%h%acI>cSg]fT#XMD]V+XrRKVrhu4A_f+M'phN%TX
%2\G*D$d0sia"!56:i=NT!B5ca@BH]7QaPY[YWrGXnua+GC,`O0A8QI>UNa&I0o"Ll5Hh)J[]9*XF%R"n:LR6,*UGY"ST@f5BLNUm
%TR]!:JJc[t#kdl>+Nh1.WJ0O7/Ek+l0reHO0&Tqj#&g]rl3oj_hR)%147.+Xi)4M(UK)LlhD`3RIO_q3[8H,SZFXqY3fgIm.pO?t
%k`5\I8"H@F_%ah..'[?GfI>OLi*68W\eU[scU>VJ%]t#U:=MWY'>:j/T\W4C$MInel41i2F'C)cn-F?2Pu;`G5L-Bm4ERUeaSddh
%AjmRcS:5Fp3pMAPrpNEYVsfkC%LcD6)4b##XF^X_#39DjWBDA)4OF7'T!,8:NAND>>l5Xk/t=]nLYr.%GQ7Tqs8DQXs71"k/q8#'
%QU(K;A-Ot'pBbt\Nm_oi%J8LLkNEfig.*f3%o?dl!=U<:JPRDCqp%KW`1C21RIDiPG1,8.1<>[,Iok0Kiu67Y*Y)'j)%)DUJ%=-C
%YZl(2]#2=#-R`>ppL*I5HI7do+U9Bn/@5%)@P/M.[-Cn5:j'oX#W/N?J1,l):!&%uq5b.65R`I`'f6`9.qidC]BUr[V7,cKjN:Tq
%g-OC6"\K,Y36Pu&]b*+LDFY)`FQ@MGI$K4/p^S%MGn2/_4slMlI82t8/H4c&4;M:r4HJc@[E,aqYR9Y84AN-UMTcS:=DMO#2,L;=
%NW[527:M2dP!*Sl0qQ[;kkNAV0CId9iFD>d/<$OFW>-t\*er/W[@<lnA55iBP:1l!)fl.*!CK'p\7DBT62$*n!m48on:K$/ED^p1
%YIR%>2eKAn/UUoGRkf<<iD`K'4Z8.-a".oF"FYUXD(S3D:o(k*0Roc&S#_9&+<uio-7\J:9WXDba!#L)\;9@(7Q)da)+;,o1lDDI
%U_*hu+nj6-A[FSj8aei>aSl0"qq!?>oflOOlL/(6D9[QZnVbmUn4R?3=n:KuiA4alnX3$LN`8Q(TS6oQ[`E't7>8?pU.cBu:Xh^7
%d&N7kX0N`%.K>at$Dffk\S)K`Rm/?WXSf-N?TX$$_#&bOW<p7:3b&[$>72M=jJ^IXF-'VbB\G5[@-QW3V*YZf(hTE\Hs?\TQeHt$
%DInDOaciKKR0Zl`0+Z@X:GQLe+D^RT#rX^`kR%s*]V,#18LNuTJo]28M\*rL'9W]2<U36]0l:gH[t7f[]0a!*R*b_""0FJHB[rpc
%Vi<X4]e:^8-!*'h4N$1Bj]e:u"fThC\(XTAH.ElSk+["GJ2Rau.l1`q]`rbf%h"%/iVZdCDTiU:=kqNHYMnMQC=/?JQd0Ilmn2"8
%#9)[4fVIuF.'<dt!M5;CI;O.>h<Fc8FmNGr53c!(IN.#4e^D;9[BA:6j`Nq;\*s'iNc-g2^;=2mo\P-@B0YfCYpiYX=XI)&JuV.o
%IG`Jd&oH=Op'Wom,ep"S3#k&e0<3YAYNdTk9D(ua=p1EYZH]K4hAu8:eBCU\VIHZjneb$lJ_?SrjhN9LcqN#BZB_4p=Nhp3:KS1\
%(VN\OJI-WVQBT""@,qfp_K1nc.K4:JAddd#q(K,:J_Vijm?gjRAMYnLW<$&$6>1%;:dm:8M+G#hK9OFnY]]\h"oG61rI*`3hsC8V
%k@LCbA6TLNZT]nZc]t/-`[NWkkHloerI4Y"pCCWgT,HkeRm6rBh>Q71])No!7f&\)6iW;j^+A(.gu4bDn)pp!4>r&Za8;F^?h]^Z
%Bj^G+&ah$a]eS'W-O$t`*M@O8pK0Q=C2gGN$;HSHHmJ"Ggs>YE@=MqIOB\:a3%>jO+B21ilA772O;,@BUl.!e$E\VB5I<?7*dk9<
%(Dm9/g^95QoP_)Li4K!(A<b'Lh0aa<N"3Ro82Y2qg"NE9/KhF&`+$D0LENRB[C"SJ4*JN(k]JHmOJlWfC*H<//#XJX<V=WZN:G0I
%4F\j,DPBbf\%hjI)pVtd_4,^n_d/P$I-XsfjoDRC#o4BCam%SLG(XnY?GNuLQE&X_=^%>2#skN2>I"rqF%oqU)SjeXK(WICH=kKI
%"8ofn51W%%Yr9>pcXJ&_/n]21L));N!>DR%Ka-/183pXH+DoAFjGlI325G(DK3Rc@WemrKrS[l"Z9rK/i]#W!30r"HZ!M6i^/q]]
%j6*iBdFM4G8\=1RS3tZ3J'H3/B<-8U`fS66m$87S>9Om3PZDbmDhYbIRq8r@C[5K0C*Gg-oSNhA="Q:\U->aI.BlrBZdA&`Y@fr0
%TA'_LF:QU"[":'2na.kMdke6JR[?6EDNNN/@0Q0&PY8UWoaK-"N%A<TS`&fj\ka+(Qk$7oPf-g2L'\^oq+Te1eC!#$,hXoDhTYa$
%Cli%mb=qUn+Bg[3U85!_.$u#G/&GI1rEpIIgtR8B[IRC*1fkWs5O[kf/`A*iTX=f;M:,cUaBtP^3st:(hVA7J6q<fS2ppia5MnK<
%"p.)CqOoJh?8tEOP_gRb*@NFN,:*9k!V>YPL[I&`n*'/dn_AR;,AXfo#jaau`bGtSI_H#Gg5CojT39Z=Z`8m&Rp+8c_g^oPeX*P>
%_+V`,RHYElC;%_A4_AM;c[N$ca6;*'Ude?p@WL&e2d'aqp1:_T+qUUAd<BE4\_^:mf0+:$b8*1TFbcMqhdC(!@tU=8=Z>!dlZIhC
%*6[LSp@ALcdLFc4IY4I@oN93Wh(J"EdgJAuSg1l6.;r9PJmJ(TIC:G5;nalbhF?@*h.a.gRE!^>9Q7%Uc);rW)L9c6!cM;cKS`/X
%i&OLu37/k@hBT3u!ju-?.?]P"6=.Z>@\$&"W4'gf$/RVLlX\W)L,.sNHNOZ*H:"@mM99DGH;/1bT^jJ?_eX]^f7oVd];/Dm;KpK&
%alU<(VI#iZ78rA?]WnSH!)qG,kIu;uAL%C4EQ.VUATMShC_K7+`b_g[@Tm59$>#<!.h?<"&9*$mE`7>mRrS[c:3isYJQfDI[iKTM
%E77s*ZaauL[FL#iQV6dn\Rc2OZGWr]A]'IK;,iC1).m",EJEqC@$jf;h[='Q_?0h:nWcHM!oh(bcZ6?_-46r\9Su).SjoN9B4U`N
%erGi7&,VLHPdBo"-,+E-\gFX6OGQ#t\B'uA<+`rH)WK1Y8''@B3]G4+!K>_B8,AO<8-"oC3,\,1aVrS'Nk].R?6lGei@M9i1ph+r
%%+'\ILHLW4*=N_/]Qpuf*:7etqP5_5>[l18RI#t+&Bo2R4@AenoH8?uRn2%X0Mo:V,OaKG")X*a-O2T#2&1lI;;f6gI+="pio-/^
%LamXG1+Vr]mt"Y>3SXZ;WQt7np.15Ga9K.a+pC^IH?(h77"Ne,j>jNXOY&OKeNG)dMZ!*0\l3Mk1A4sGYE_m!l:p@niAXt5\b`)l
%8482+0Rk_'L+7ZV]\OS6<g=ZC+Gp8Ro8(q6'N5=>`c0"M.63Q>,?BKRfES#b:kBrJn+*ruL<e1_&K8YY>QuJg!eUs:&?RY0%2Zhu
%abHmf$gJ.[W/u\#+@qKKm`lrmeNm0^0hMD]#S/9[mEEq.DW8C(M"^o1Ql?c:`+`Yl'<pU"*Z?3#<.(12AW#SjM5oLB;`lHuba#js
%<t6;Mn!34L`(50hc]jB"!MP&kn3ka-*gIoh#16T[1>qR`+bko4J0n!^h@"r-,C@1+[m8Y`UFte=\>^1[=^*#NTj+#R&BS3Is(9)-
%MI,,TB^^8QG5WthI?nMt+7qX$4p1pL1+L$[4=R].S`A^=l[nDLr_5u:EsCg/91C;diX7gOmSu`>W=@eC(ffY4:g!OMAYnGUfG'=J
%"bB(9+o-)i`\RW<&Po<d7>/VV`hu,=7+`4)4DA-.D>QsTVK,OdoX6Z79OKliU*^%FW_O$+Z4J3[aHGtq"FT5uP^b=)45G%L/Aiu+
%=+uS\>XAWF"O!kh'SjG?Ic,6X]*TMZ0b=]F$nW?89eB*/A@G1l`V!U@@de,IHO40@;QP`[(g7MF'ts(R!*q8!GJ0tA79^7np02?3
%=qKpJ$Q9%'ZqL7h91iM6Acq4=(9r>U\#phf"o#f/>!Z4MB?3Snm12GS#k11/5DshXZeWR*lP45cc6Ik5cT]X5b1.bej"Fr\Ea=(H
%/hoS%'.Irh,G8a"FDNIY1M_q@4&q6ZhC`KI#en7tE&-'t6hpEk-7Ypt+RC*AE4C.Q@LgiSb?EMNHD>?J3\!5beP[,b35O*$S*U\4
%Aoql*SASfALVrK6pGa._gPp]WUX.#19kLF\0_oX-qMFD1ALRf&SW71/34O9)>n^D^^S'rbXD//Z2S"itG&8"b_pZ++LAAhI;)"iu
%XG]8QVl;L`+_8;H&+lg[7"0<;:_u59kN&P@Vk4,L4CAT4LK4[hd>_:n+S=be"]/64"=r0I$D=J5K.TNh46%1-F>4@F,%FQ57(7.h
%l-$K5BI3M$\i)#[0I8gu_t#2<H;jNOqLTFCKU7Uu4SX0ITSA^tD!IV>N6hMX8,FM)@TR]UM`1hm!k4&!<@X)b5*tFF/\L/^"?74%
%1NFRNSRFPgaq94i00^OB-m?Gb?CE@6Uj,%Q_c3npX@FZBD@FN]nJ'NBaqP7uhGK9Wbja"iI$]>%<r[_\8Ph1@W$>p#n.Pj4M+^1h
%QZM=^PZeqhbJB)>+d3i2(-p:hL@-.@;u;Ks;W01D)$?"`6+/ZHEi9#-7J?QI^0\llj,kM.mT1'58[O+TSkICLG,nNUO/^s(@TCYn
%WM(:FV)TcrGiX#QXhleX3<W$8Am%j</3'FOQ'o[n,coN)JosJ$ED4\`N8YI[h!#VbBNp=(#-d_<\a6RS#_"@c.(#_KI:5#9k]b*4
%_6OmF$`"'.-T:LFhuJ3Bgq,.:#ZW:UqLm#tH$j>Y0T,VN"Mr.ofS[gtnd^BFfc`;<Hi]&1H5^94c\O9i%N9Jh:DC=H+q3WQk.qnO
%1L%iOI6!f,\g&BZR=4VPh4G;Ko-`SVZVrOZ6E-C-<6eXFf,&>t?kMn%$2j277jCNS/'fM)41eL'+A0/^1YIY$Bo`qUET:dFE9dZf
%e%LW(?k>:5UlUjK",Dm,XY/RA?$3oTJ)uAg4co!d.d;V[,rkeWaa7p+c.O_%-`1q,.9n?988ArGeL@J*#(RZ#gtn3;dMTN(iG4^[
%3HPp@p%4@Vk;B^\_s<VcST`:7pFY5TA`nZ2<B2o*9XN%/%bG;\M^&g1Ou!3#GEI(Q9Lf.9.r7eG8L6&t]7rO;E(ag.>j7H:WR<f^
%'-i]O_biFjX!;-Q1tI(rP'&u1Ntlqs@K2Ii5"]Qq"A+@.ms&'34pC_+7+tM]^<[p4bth@<JUY`(/ueR$+35nJ9a'-jRXP;/WGahQ
%W7`c]F=LT?O]BXG/_YE$Z?)fDJsHrg%mpm;=^D^@HCC%c"UZMqKKPS9/?.#F'^;M6BQ5n$.g4\!Y!;`Ge!sZ"G?3@pTE%r'[`2g*
%cAIhtfKhko.[InL)<uipjJ`XIp4Ofh>=E>n+c%NUFq"-_E3"am/8SLC_"C)D,%oi#H6soT'_J,-7Vg*_9pE2n5aDNa876WC$r`m(
%CONU]-4]qi?T.)%g:)%XoPRl2DT<b&1BfBIc.rhOT2>0K#(/M)?Ts`*;m%;sae"e_.-W+8!=bI3OP7jUdg2fq\43C\@.Ah=6t=Sd
%9ZW3746FfjV]0D<oWN*?T$YGrN:Z-2Pt+Z1+I/0(1;S8YPVOuPqrQs&?DDm(ge0-q7URLGnsQ9U8\*eF`tO=k61F75qEp;[$lJtP
%5J3lLaG;lu35E#9(PD@XVTWht>2Sk:gXk>JZa>]3J>Wt;,@P1E^;h;X4d>9>KicXe7>i9/VHe7>Ie)!*q-[br:r8DtVcB,[T=[.S
%h6O3F%,*Yt+r<@Xk+E<:[3`<d]]B35+LJ*,R5VI3T.f,2S[VC39'7NF(/65<hamI8<T\oC=@ED+6?Z2%5S>*\=]$u\ll"3QLb*=(
%IV?76.#(f!V>BFVXU&.L%p.,0@rA7qg`T21g1!G;f[\i`?>T#A<cp+9\*WG>AF$]@gjkKpp/C?C`E9=-G#;<OCQd!'X)1!Q93H^c
%rD/M8Fd5F,D@/nMrpqKrWH7sHhkPM@&*qLc[jm:lqWN*EdI-A.Tgo$5QUP!*oG%tppTOZ]6FJGUbT%[4"_&Yfcr;bZ/FRrmN+L/q
%#1V.WdQn`^<?X]'>R!NgjIf=,qQ^DTc9Pi$gd%hKdFH_)0ar>7@g!MiU16?O7\lLF^(J-=garse9(I^SdH8<i/R[>OFb%N\JA=C;
%5bUZr7n7J49qGD%nT43gWn%Y$21#<@jJ-:G",5\=^,WT+'O6sS+/0pPkC@TO$CM<G:AE0*)NG'_k'QE*He";r)S*nb#*+2QQ3PHY
%#-p]:.#.Z%_<WV$MrZ_/eS%8(9;lgJ@)RT-0H_0G'ED,*VdQC_,;6W0]]c,0Gm_&>#S^jij;d]_kI+fQpfdlsjK]OPE;'mFb8H9j
%&0;,h$]<goW!lohfqgSRKo^\"[R4jH:+d]-$H`sJGp<H'$`-QeS!YT_n3'(J_LY0?\.aRc1a1H_>`O=;ZBbTUMkMnq,).I8mBH1b
%k9lJf&eO)M4EBt\&f-;*+r$]i9u2'a8E7n`_mbJ3Ok%Yb!D0E6O;]`G\7d!n^`m@(YNZMW0bmp?,qWZ/4!D">&Ij)<IKTh"/>dZp
%-%VS#:g8#^qGNZ"bpb4-XeNf1c-NZ)FbkPL)'$Il7BluTXGa?%8-/Sld7Wh(88ZdM='UXgi8D8upc&M5#ORbcB=UFp"$^@J(uTro
%dt$iT&?[IMcjrLiH(`-'h27.%\O!@(L1I4+W,6jUGT5[pG$OLpC@9'^-4McKJj>XO1M24mlPnYh/Y++7UP;!dG?ca.e;-W$R\iS@
%&6_$'D7*)KD0/'T1!AN&"XEA`1h6<h2h5GIR9Pg(b/N5=/$qZ'AFB+_N9\qA#mdF7TO@DE^t6:ThU:59gGiZ"O`sr"Zh4^dRCUrj
%A?l"!)NV>$(+)rk?fMN=*\nL!%2P2,El]*c^m$-N<[;2*pCPDN@56fd7PHugENTR8_SMVF5p=gfWZ3V*[b-/R\o]:IQIqQ#9*P3d
%F1VPIE1.5p,Ad'a4TR9t)V:bT<`,dS4amlF=5]q^-s/tfQ@=.s\"sHI=k@Y2(NOWD%j.iC7]8DiG'TT#]Uk!Q61Wr[`Tr@SHsj"?
%*8lAX>@EJc<6c&rVj6H[(-l@KKZ?5BXskILG(+SD3q7klG$DV4/E0Cpf31+0e!IN/!8QD7LbGe9)i;OPkORq8gRm1\SH\mo*jm#%
%Bhr$5c=S.ZC+!M#KB/I7^X)aS#eQ;nj>DWSbNheE9N80VW/L;be^>fs8"@JiUigo%+Qmt4PcN#`8'`Le57"hk#<`@]'p[A?o7S,1
%WHXXlgYcnTeKF`N?5jRq.7F<!Xf1p7`q171TEA,B8gc\[^t1J*N\#bA<B27ra@Ef]%MZg2U&[7NM=Rf8Q:!dRk3,kL`lHa&%s?7H
%hasl<+?!<2/'\>%1.W(`oV=iuRpL=2?<r4/H+iCe"&mmn[?1W-SS8Rq%IO,.hkGOHZ]Xbi%_psMUW8)\S^!1QkHjZ"SE=5"4hZDB
%7#lV?#Ccm3\>KNKj'mQkrC7i<r%`lZ.bfS+O+u)$Cd^t7&0Hh'h[nk?/jqpi+Ci@Fb'hb-:;DJE3O:pN6-Y[8>u/7f`u=B`irhb>
%=M@dQ:;?qWC:?D.5p/qge3!a>*6j+A:I&m')9/qaB41Elm4:<[#XiW(E64\aHp\a.>bA<N*X=Rt@=rk.Qhh<T+]jN=^-c<sr6L"I
%e/aqk+Ur`F"P`]:(1#;rF&FY3VK,+S0qL?mT,AH8MG>609\N8;7O.]"Z[1g:bm\HH=i^>KWuqhm\V0RuK^aqdRlUY2%B`")BBsF`
%*#*29^nKibBqWLMd=IS5^Vg;MbHr6eFG*m+6J5?6ld\_.\(bA:k!X)J1oGP>88`Pm='sZiNhDPZ*J1.0;qr'L1;8AOTcIlG#9ubI
%dpBVnTElWZRL\+,^ks!GMMTOSMc+:QpO/Y#aAK>a)hZoKUIotPq6hUWa(<qGE'_B1b4IsX@q_q%<c^W9W`;[s%76(,'c(Ub/Dee/
%%E`l?:%,<:#j4oURUt`b%m;PeID7)Q1+PbVPb<sX)X+lg=>SE.bb*3Vp,3[S]5i+;/5JFX]qtjV)El9j*G+IZ<pDNtnRJfO]Mra4
%1[U#%&YD[4HtD_!]GNf#>i6i)J"=P3o:`6Bd!0L?4@NbuiGRp0)C+A,1e+C01+7R<_UroE^b/!c7dP:&U`g7#d8!U:7RM)Q..5R'
%V7u]@AW&Ro`]lS%d'XK3E?_%T!e*#U2+.QqY+%Ujnq\.FWQFX!,[23!9K@(#J%$j4h_>[n/N*5+07$OUBFddE\`kh2X\)_X4HQtc
%'C=PGeSVqQ^1Q/K@i-?%L9'nh7A#$k5RHnI>7gX<0&,'sWNAb9#C=-Nf,>2K@H1kUqKjLBi;:e8/P=@&XT/l2L*ST;Zj'mG2&lqF
%5`d&RMV!6Odd0\Iib]g0%M9<u5B[f+H7nV^=O\(&(#0n3oq(>"!Xs5ee)_M1d,]BckL@ne@WPZA=%B<9BFK"a<c;o_I(E'1>!U^Y
%Fsq0aUhdgf/]KP\5,dL-\bY<@etrN%+0WJ)OVtjR)dS&Zj^G>l>D6j9#thj>jMJ%.UD9%_*pOR_U4%-@<CuhrG]9*XUnOp#,?mK7
%.pGJ.&47i'W^u/d8"[GnS@alj<RjDfif*8@<QEV9bI.aLK8])>XRK"CgpFM"e`*+\[?E/%pk)j"aj4a=]-VU"!X.dk`\Kk[A4q/2
%9$Tl9OIn_8JBMY)8b.t=LD>KU_2P1-@#-4*mZp&R'^sJL?'JqT9.,)=+X/OIO^(h[O'[H/ONt(0VgYX(58,Gdp1.Z?p8ia\2,`rt
%#H]%s\Y-9$ma(LL/Vm:%9T"Hm:![UUWJQ[l'd#2mJ>6X=g2uOR3<Gr8$dpGZgIc<_fk:ITV`hD5I>HKJ%r]k0-.NGq^ZfUM,UR<]
%H]_gN5%=?"ZUDS2WfA9G[uI=KSR8?Z,4du9k_!d-%9UnuIFZ2%2<('4(9k&#-Ytoai[S]nB*U(^<kXX1;O31uE[9@5H:TS8E[QLm
%!-AU&Cek)'$n/W5[1;$Wo21A@p=KbaFAUeHHFkd*^X!"po47&XFf$4egS%(Kd5j5oc=)[s%`eI4>nl>\1;Z7Re]2W'XDLuklC-pX
%S)m^`Tn;YdOGm\U67*&^?20rJq9AfbT#eGiX=L)4Hp@4shAEj?`*m'%>2)<noeA_E]>@7Pe:kiPn3gCtmEhCf;mtPBJo_?q]#2@u
%jlO<+oF&YMBRRq7>sC!,PN^_>*#YZgKSV.;^68O3YNHEIJ(9a%M6pW/J#KdZjtAsn:)2doV$qC!INVJK1F3b:<SaQEcJ;>"[;N)`
%U$0ae&*bP!Ic9B3)IB-Z?upC0Tm,S0MjfL][n<8n&3I:$%n';q`fA;M<3Rt.K5Nq/aP#Y1LSSu\[-NM>LsaOdpE_IMN7j256?%c5
%lFPUq"C<"r<Hf*sToL,`a\e=[l7N30+0m0-UPi$4MDD]t2R8R?T#4QM5@;Lti&0.LEt;<Kb%S+%^STcj,pq$1L$TB?2e;Pri>`u]
%$dQfYDrE[R+``t2@-L?%iP]>61[%BmIuOJ2d=uCUW_OHKQ%d)<A%/D3>-]E_FcE425;>\FNTj6l2?0o5>ZU++<9O]Z[uQ9IJ^$Y/
%#t:9%CD#?o1q>U=6dWdC[rO]*PXM@qaX#'S]KBVQ!ST-\!'RM[JQ<S08HM[QWID@6PA_0/)dNGae&(*/1>XD=r^=*d1&7$NrdOg$
%:S0EaTqfT<k4.],.d;L%X?!2=hGoSWC,OLFk/DkrlTJbs(*B.2+c[Cf`+mJ\[tSNs;_"bTNCk2#$B\]palS7b/Eu`iUmAOg"OdEU
%:!6Rt2;h_V>(d/LU3m,e:::^S)%fnXYm_<_+n/LbX19,M?*OiVQk1SWXO3H^J2L$'9DAKNd+d.2%]<'!:Q6l^\GF[21M&C?Dc[M<
%BEgn=8>LeBmCklWaO3'_QPS7rnUVjnQ)'Q;5hSY#3h&Cp#Xdls>Q*$uG&BAjeXdRUKB]D50;dc?!);:e$9Hko_,G?sfIpaaHaJ;g
%Hj;EK,Bqo4UG(]IUbgl-%m0?tLg&!'A8=[^a?WdPW#gsn5km0tVA#F1fe>=Wln]u$f>_FQ-PqP4FO0'#!Z+eBoh;iLfh#t%qenhI
%1Zpg;Y9#-O3H-nL_S)FH^Po$o#b&]n!8CZ)eK:A/Hf9KM(@n:jS0`I8+SgH6X#5`A(;qnDgPhkZ\n<TpkI%8sk>5]2.\^re33/)E
%:G.E<k_q^VF$+)"&XhF94C?;$5"M>&i+?i=k(LHUAJCVLne\ae*UO-#CjGlJd#eG\..4;L4058nanLXnGLH>(hR@PpAi9qt?6]If
%9u=DIT!rOM\4Np6R':G5Jo'biMfCWmptCoj9d4fcJM"(T,T.`SY!&54i'"ShM_3'aIdsG04$8qpEkl]J<AjSWX1k`k`oMl,.AJ.`
%.h@[%Au3aABfdrW:DCf7X(i32afRh-&'_"Z'_?d$mtPiPrG&6Q["OM1LA#:YAN/Ap`#+GsQpVg43fU,eo%d<#O`PB8O(<sH\Fu%p
%(,fAmI0l=/PY)A^>961+bZ\?lHY7;[8\=)IdHG+H*_EqSe!NP-oC'bp#e/UDQ2mH1i@F,f8bO\Y8l.P6E(U7V/qH_t7[:7L3%?%I
%=`S6(*;gu$fF[e;BNOca/PQ5`\[K=>9MD<Kr#4@XpRG=AUpQ70\mYeM$TWB]7$13SPKG%Og(-(*$)79+WS80g)C:eV5i5\men,S)
%*OAt=`T*sG'4PmGf/KO7*mGm(f-sGVCa#\$ke)MQL/RBQY0&sYbIiGkUjZe$J7-Z%7WfhRmQD.]aeeqIQHM@)=j_u[^]Y(neji#Y
%e@]<TBo',-@>T6<(5"bAY!"2q))aHb%(@gmB[sVK,2S(qB=<^KSIR%p9raV"is*hI;tO_ib6jZ.kR2)jg2d)N=q'K\O?XY&@Doqh
%.n>VfcZVaGN$o'X#;:D;[qc:J$COAJR?Z<F_3@BXnQKP+Ho_3Oo+S5sP:i\\*l[WKWN>`oV?ppWqQl351oFS1p#&6'drT6++a<9b
%mo;#!45O`+O7(-ZWj>V*Jnrpc:&ap4$`6:W]d+jt3mbSJZ9U/"H2Vt*:6Bg#$kIh:0/ZI3N+TnJa@e\`X";N?O14b](RlF`2=3nX
%iK"6,$uVVe$Vrc("pfBs'4pnhm?&0&`ArfX^cY\dS=q00/F`.+)X1S0HS<^F#1?^Tb,,ZcI9h$*=VX9oAJ*5m)h=Q?DDc5J:93Ps
%J8b7c"lrS\GUAgpZ)+fUdSKPc@^=;4Aa**SHGmj*jNm^r4P-J%TEVqfKH=054bWaL+ln\)6N6WfTdTN^hUS-`9RY[Eb+orfT(8sI
%WM:R-Tl9rsYi#@Or!sD9gTTLaoDS?i!5JHffAD&Kn)&Wnhm+<<pr0^,I/WK&X0;Qo(Y&0's2dK2IJ`t%5Q(2dn%ZF0iP3,(3tV='
%r8<pVr5X<aV_<Mhs8)A::B~>
%AI9_PrivateDataEnd
